# 3.5.1-from-Odyssey-nnSdk-3_5_1-Release
data3 = {
  'nn::spl::detail::IRandomInterface': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,6,0>'},
  },
  'nn::fssrv::sf::IFileSystemProxy': {
        1: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
        7: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
        8: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x301>, InRaw<8,8,8>, InRaw<4,4,0>'},
        9: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
       11: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x301>, InRaw<4,4,0>'},
       12: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
       13: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
       17: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x301>'},
       18: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
       19: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
       21: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
       22: {"inbytes":  0x90, "outbytes":     0, "arginfo": 'InRaw<0x40,8,0>, InRaw<0x40,8,0x40>, InRaw<0x10,4,0x80>'},
       23: {"inbytes":  0x80, "outbytes":     0, "arginfo": 'InRaw<0x40,8,0>, InRaw<0x40,8,0x40>'},
       24: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,5,0>'},
       25: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<1,1,0>, InRaw<8,8,8>'},
       26: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
       27: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
       30: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
       31: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
       32: {"inbytes":  0x20, "outbytes":     0, "arginfo": 'InRaw<1,1,0>, InRaw<8,8,8>, InRaw<8,8,0x10>, InRaw<8,8,0x18>'},
       51: {"inbytes":  0x48, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<1,1,0>, InRaw<0x40,8,8>'},
       52: {"inbytes":  0x48, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<1,1,0>, InRaw<0x40,8,8>'},
       53: {"inbytes":  0x48, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<1,1,0>, InRaw<0x40,8,8>'},
       57: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<1,1,0>, InRaw<8,8,8>'},
       58: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
       59: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>, Buffer<0,5,0>'},
       60: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
       61: {"inbytes":     1, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<1,1,0>'},
       80: {"inbytes":  0x48, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<1,1,0>, InRaw<0x40,8,8>, InRaw<4,4,4>'},
      100: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
      110: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
      200: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
      201: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
      202: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<8,8,8>, InRaw<1,1,0>'},
      203: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
      400: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
      500: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
      501: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
      600: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
      601: {"inbytes":  0x10, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>, InRaw<8,8,8>'},
      602: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>, Buffer<0,6,0>'},
      603: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
      604: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
      605: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      606: {"inbytes":  0x10, "outbytes":  0x10, "arginfo": 'OutRaw<0x10,8,0>, InRaw<8,8,8>, InRaw<1,1,0>'},
      607: {"inbytes":  0x20, "outbytes":     0, "arginfo": 'InRaw<0x10,8,0>, InRaw<0x10,1,0x10>'},
      608: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      609: {"inbytes":     0, "outbytes":  0x10, "arginfo": 'OutRaw<0x10,8,0>, Buffer<0,0x19,0x301>'},
      610: {"inbytes":     0, "outbytes":  0x18, "arginfo": 'OutRaw<0x10,8,8>, OutRaw<1,1,0>, Buffer<0,0x19,0x301>'},
      620: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<0x10,1,0>'},
      800: {"inbytes":     0, "outbytes":  0x80, "arginfo": 'OutRaw<0x80,4,0>'},
     1000: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, Buffer<0,0x19,0x301>'},
     1001: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
     1002: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>'},
     1003: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
     1004: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
     1005: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
     1006: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,5,0>'},
  },
  'nn::fssrv::sf::IFileSystem': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>, InRaw<8,8,8>, InRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>'},
        3: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>'},
        5: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>, Buffer<1,0x19,0x301>'},
        6: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>, Buffer<1,0x19,0x301>'},
        7: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,0x19,0x301>'},
        8: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x301>, InRaw<4,4,0>'},
        9: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x301>, InRaw<4,4,0>'},
       10: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, Buffer<0,0x19,0x301>'},
       12: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, Buffer<0,0x19,0x301>'},
       13: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x301>'},
       14: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,8,0>, Buffer<0,0x19,0x301>'},
  },
  'nn::fssrv::sf::IFile': {
        0: {"inbytes":  0x18, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,0x46,0>, InRaw<8,8,0x10>, InRaw<4,4,0>'},
        1: {"inbytes":  0x18, "outbytes":     0, "arginfo": 'InRaw<8,8,8>, Buffer<0,0x45,0>, InRaw<8,8,0x10>, InRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        4: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
  },
  'nn::fssrv::sf::IDirectory': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>'},
        1: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
  },
  'nn::fssrv::sf::IStorage': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,8,0>, Buffer<0,0x46,0>, InRaw<8,8,8>'},
        1: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,8,0>, Buffer<0,0x45,0>, InRaw<8,8,8>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        4: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
  },
  'nn::fssrv::sf::ISaveDataInfoReader': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>'},
  },
  'nn::fssrv::sf::IDeviceOperator': {
        0: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
        1: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
        2: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
        3: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
        4: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
        5: {"inbytes":     8, "outbytes":  0x18, "arginfo": 'OutRaw<0x10,4,0>, OutRaw<8,8,0x10>, Buffer<0,6,0>, InRaw<8,8,0>'},
      100: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
      101: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
      110: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
      111: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, InRaw<4,4,0>'},
      112: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
      113: {"inbytes":     8, "outbytes":  0x18, "arginfo": 'OutRaw<0x10,4,0>, OutRaw<8,8,0x10>, Buffer<0,6,0>, InRaw<8,8,0>'},
      114: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
      200: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
      201: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, InRaw<8,8,8>'},
      202: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
      203: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, InRaw<4,4,0>'},
      204: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      205: {"inbytes":     4, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
      206: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
      207: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>, Buffer<1,5,0>, InRaw<8,8,8>'},
      208: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
      209: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,8>'},
      210: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
      211: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
      212: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>, Buffer<1,5,0>, InRaw<8,8,8>'},
      213: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<8,8,0>'},
      214: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
      215: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      216: {"inbytes":     0, "outbytes":  0x10, "arginfo": 'OutRaw<0x10,2,0>'},
      217: {"inbytes":     0, "outbytes":  0x40, "arginfo": 'OutRaw<0x40,4,0>'},
      218: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,8,0>'},
      300: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
      301: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
  },
  'nn::fssrv::sf::IEventNotifier': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
  },
  'nn::fssrv::sf::IFileSystemProxyForLoader': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x301>, InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,0>'},
  },
  'nn::fssrv::sf::IProgramRegistry': {
        0: {"inbytes":  0x28, "outbytes":     0, "arginfo": 'InRaw<8,8,8>, InRaw<8,8,0x10>, InRaw<1,1,0>, Buffer<0,5,0>, InRaw<8,8,0x18>, Buffer<1,5,0>, InRaw<8,8,0x20>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
      256: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
  },
  'nn::tma::IHtcManager': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, Buffer<1,5,0>'},
        1: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,5,0>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        3: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        5: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        6: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,6,0>'},
        7: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,6,0>'},
        8: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
  },
  'nn::htc::tenv::IServiceManager': {
        0: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
  },
  'nn::htc::tenv::IService': {
        0: {"inbytes":  0x40, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<0x40,1,0>'},
        1: {"inbytes":  0x40, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, InRaw<0x40,1,0>'},
        2: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::ro::detail::IRoInterface': {
        0: {"inbytes":  0x28, "outbytes":     8, "pid": True, "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>, InRaw<8,8,8>, InRaw<8,8,0x10>, InRaw<8,8,0x18>, InRaw<8,8,0x20>'},
        1: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
        2: {"inbytes":  0x18, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, InRaw<8,8,0x10>'},
        3: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
        4: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InHandle<0,1>'},
  },
  'nn::sm::detail::IUserInterface': {
        0: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,2>, InRaw<8,1,0>'},
        2: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,2>, InRaw<8,1,0>, InRaw<4,4,0xC>, InRaw<1,1,8>'},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,1,0>'},
  },
  'nn::sm::detail::IManagerInterface': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>, Buffer<0,5,0>, Buffer<1,5,0>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::socket::sf::IClient': {
        0: {"inbytes":  0x30, "outbytes":     4, "pid": True, "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0x20>, InHandle<0,1>, InRaw<8,8,0x28>, InRaw<0x20,4,0>'},
        1: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
        2: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        3: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        4: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,0x21,0>, InRaw<4,4,0>'},
        5: {"inbytes":  0x20, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, Buffer<1,0x21,0>, Buffer<2,0x21,0>, Buffer<3,0x22,0>, Buffer<4,0x22,0>, Buffer<5,0x22,0>, InRaw<0x18,8,8>'},
        6: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x22,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
        7: {"inbytes":     0, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x22,0>, OutRaw<4,4,8>, Buffer<2,0x21,0>'},
        8: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, InRaw<4,4,4>'},
        9: {"inbytes":     8, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, InRaw<4,4,4>, Buffer<1,0x22,0>, OutRaw<4,4,8>'},
       10: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, InRaw<4,4,4>'},
       11: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, InRaw<4,4,4>, Buffer<1,0x21,0>'},
       12: {"inbytes":     4, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       13: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>'},
       14: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>'},
       15: {"inbytes":     4, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       16: {"inbytes":     4, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       17: {"inbytes":   0xC, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       18: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
       19: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x21,0>, Buffer<2,0x21,0>, Buffer<3,0x21,0>, Buffer<4,0x22,0>, Buffer<5,0x22,0>, Buffer<6,0x22,0>, Buffer<7,0x22,0>, InRaw<4,4,8>'},
       20: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
       21: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, Buffer<0,0x21,0>'},
       22: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
       23: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
       24: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>'},
       25: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>'},
       26: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
       27: {"inbytes":  0x10, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<8,8,8>'},
       28: {"inbytes":     8, "outbytes":     8, "pid": True, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<8,8,0>, Buffer<0,0x22,0>'},
       29: {"inbytes":  0x20, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, InRaw<4,4,4>, InRaw<4,4,8>, InRaw<0x10,8,0x10>'},
       30: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, InRaw<4,4,4>, Buffer<1,0x21,0>, InRaw<4,4,8>'},
  },
  'nn::socket::sf::IClient': {
        0: {"inbytes":  0x30, "outbytes":     4, "pid": True, "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0x20>, InHandle<0,1>, InRaw<8,8,0x28>, InRaw<0x20,4,0>'},
        1: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
        2: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        3: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        4: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,0x21,0>, InRaw<4,4,0>'},
        5: {"inbytes":  0x20, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, Buffer<1,0x21,0>, Buffer<2,0x21,0>, Buffer<3,0x22,0>, Buffer<4,0x22,0>, Buffer<5,0x22,0>, InRaw<0x18,8,8>'},
        6: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x22,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
        7: {"inbytes":     0, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x22,0>, OutRaw<4,4,8>, Buffer<2,0x21,0>'},
        8: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, InRaw<4,4,4>'},
        9: {"inbytes":     8, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, InRaw<4,4,4>, Buffer<1,0x22,0>, OutRaw<4,4,8>'},
       10: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, InRaw<4,4,4>'},
       11: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, InRaw<4,4,4>, Buffer<1,0x21,0>'},
       12: {"inbytes":     4, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       13: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>'},
       14: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>'},
       15: {"inbytes":     4, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       16: {"inbytes":     4, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       17: {"inbytes":   0xC, "outbytes":   0xC, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, Buffer<0,0x22,0>, OutRaw<4,4,8>'},
       18: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
       19: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x21,0>, Buffer<2,0x21,0>, Buffer<3,0x21,0>, Buffer<4,0x22,0>, Buffer<5,0x22,0>, Buffer<6,0x22,0>, Buffer<7,0x22,0>, InRaw<4,4,8>'},
       20: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
       21: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, Buffer<0,0x21,0>'},
       22: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
       23: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
       24: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>'},
       25: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>'},
       26: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
       27: {"inbytes":  0x10, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<8,8,8>'},
       28: {"inbytes":     8, "outbytes":     8, "pid": True, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<8,8,0>, Buffer<0,0x22,0>'},
       29: {"inbytes":  0x20, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x22,0>, InRaw<4,4,4>, InRaw<4,4,8>, InRaw<0x10,8,0x10>'},
       30: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, Buffer<0,0x21,0>, InRaw<4,4,4>, Buffer<1,0x21,0>, InRaw<4,4,8>'},
  },
  'nn::socket::resolver::IResolver': {
        0: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, Buffer<0,6,0>'},
        2: {"inbytes":  0x10, "outbytes":   0xC, "pid": True, "arginfo": 'InRaw<4,4,4>, InRaw<8,8,8>, InRaw<1,1,0>, Buffer<0,5,0>, OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<1,6,0>, OutRaw<4,4,8>'},
        3: {"inbytes":  0x18, "outbytes":   0xC, "pid": True, "arginfo": 'InRaw<4,4,0>, InRaw<8,8,0x10>, Buffer<0,5,0>, InRaw<4,4,4>, InRaw<4,4,8>, OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<1,6,0>, OutRaw<4,4,8>'},
        4: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, Buffer<0,6,0>'},
        5: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, Buffer<0,6,0>'},
        6: {"inbytes":  0x10, "outbytes":   0xC, "pid": True, "arginfo": 'InRaw<4,4,4>, InRaw<8,8,8>, InRaw<1,1,0>, Buffer<0,5,0>, Buffer<1,5,0>, Buffer<2,5,0>, Buffer<3,6,0>, OutRaw<4,4,0>, OutRaw<4,4,4>, OutRaw<4,4,8>'},
        7: {"inbytes":  0x10, "outbytes":     8, "pid": True, "arginfo": 'InRaw<4,4,0>, InRaw<8,8,8>, Buffer<0,5,0>, Buffer<1,6,0>, Buffer<2,6,0>, InRaw<4,4,4>, OutRaw<4,4,0>, OutRaw<4,4,4>'},
        8: {"inbytes":     8, "outbytes":     4, "pid": True, "arginfo": 'InRaw<8,8,0>, OutRaw<4,4,0>'},
        9: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
  },
  'nn::account::IAccountServiceForApplication': {
        0: {"inbytes":     0, "outbytes":     4, "name": 'GetUserCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":  0x10, "outbytes":     1, "name": 'GetUserExistence', "args": 'Out<bool, void>, nn::account::Uid const&', "arginfo": 'OutRaw<1,1,0>, InRaw<0x10,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'ListAllUsers', "args": 'OutArray<nn::account::Uid> const&', "arginfo": 'Buffer<0,0xA,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ListOpenUsers', "args": 'OutArray<nn::account::Uid> const&', "arginfo": 'Buffer<0,0xA,0>'},
        4: {"inbytes":     0, "outbytes":  0x10, "name": 'GetLastOpenedUser', "args": 'Out<nn::account::Uid, void>', "arginfo": 'OutRaw<0x10,8,0>'},
        5: {"inbytes":  0x10, "outbytes":     0, "name": 'GetProfile', "args": 'Out<SharedPointer<nn::account::profile::IProfile>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
        6: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetProfileDigest', "args": 'Out<nn::account::ProfileDigest, void>, nn::account::Uid const&', "arginfo": 'OutRaw<0x10,1,0>, InRaw<0x10,8,0>'},
       50: {"inbytes":     8, "outbytes":     1, "name": 'IsUserRegistrationRequestPermitted', "pid": True, "args": 'Out<bool, void>, unsigned long', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,0>'},
       51: {"inbytes":     1, "outbytes":  0x10, "name": 'TrySelectUserWithoutInteraction', "args": 'Out<nn::account::Uid, void>, bool', "arginfo": 'OutRaw<0x10,8,0>, InRaw<1,1,0>'},
      100: {"inbytes":     8, "outbytes":     0, "name": 'InitializeApplicationInfo', "pid": True, "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
      101: {"inbytes":  0x10, "outbytes":     0, "name": 'GetBaasAccountManagerForApplication', "args": 'Out<SharedPointer<nn::account::baas::IManagerForApplication>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
      102: {"inbytes":     0, "outbytes":     0, "name": 'AuthenticateApplicationAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      110: {"inbytes":  0x10, "outbytes":     0, "name": 'StoreSaveDataThumbnail', "args": 'nn::account::Uid const&, InBuffer const&', "arginfo": 'InRaw<0x10,8,0>, Buffer<0,5,0>'},
      111: {"inbytes":  0x10, "outbytes":     0, "name": 'ClearSaveDataThumbnail', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      120: {"inbytes":     4, "outbytes":     0, "name": 'CreateGuestLoginRequest', "args": 'Out<SharedPointer<nn::account::baas::IGuestLoginRequest>, void>, NativeHandle&&, unsigned int', "arginfo": 'OutObject<0,0>, InHandle<0,1>, InRaw<4,4,0>'},
  },
  'nn::account::profile::IProfile': {
        0: {"inbytes":     0, "outbytes":  0x38, "name": 'Get', "args": 'Out<nn::account::profile::ProfileBase, void>, Out<nn::account::profile::UserData, void>', "arginfo": 'OutRaw<0x38,8,0>, Buffer<0,0x1A,0x80>'},
        1: {"inbytes":     0, "outbytes":  0x38, "name": 'GetBase', "args": 'Out<nn::account::profile::ProfileBase, void>', "arginfo": 'OutRaw<0x38,8,0>'},
       10: {"inbytes":     0, "outbytes":     4, "name": 'GetImageSize', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
       11: {"inbytes":     0, "outbytes":     4, "name": 'LoadImage', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
  },
  'nn::account::baas::IManagerForApplication': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'CheckAvailability', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     8, "name": 'GetAccountId', "args": 'Out<nn::account::NetworkServiceAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'EnsureIdTokenCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     4, "name": 'LoadIdTokenCache', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
      130: {"inbytes":     0, "outbytes":     8, "name": 'GetNintendoAccountUserResourceCacheForApplication', "args": 'Out<nn::account::NintendoAccountId, void>, Out<nn::account::nas::NasUserBaseForApplication, void>, OutBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0x1A,0x68>, Buffer<1,6,0>'},
      150: {"inbytes":     4, "outbytes":     0, "name": 'CreateAuthorizationRequest', "args": 'Out<SharedPointer<nn::account::nas::IAuthorizationRequest>, void>, nn::account::NintendoAccountAuthorizationRequestParameters const&, NativeHandle&&, unsigned int', "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x200>, InHandle<0,1>, InRaw<4,4,0>'},
  },
  'nn::account::detail::IAsyncContext': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetSystemEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'Cancel', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     1, "name": 'HasDone', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
  },
  'nn::account::nas::IAuthorizationRequest': {
        0: {"inbytes":     0, "outbytes":  0x10, "name": 'GetSessionId', "args": 'Out<nn::account::detail::Uuid, void>', "arginfo": 'OutRaw<0x10,4,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'InvokeWithoutInteractionAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
       19: {"inbytes":     0, "outbytes":     1, "name": 'IsAuthorized', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       20: {"inbytes":     0, "outbytes":     4, "name": 'GetAuthorizationCode', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       21: {"inbytes":     0, "outbytes":     4, "name": 'GetIdToken', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       22: {"inbytes":     0, "outbytes":     0, "name": 'GetState', "args": 'Out<nn::account::nas::State, void>', "arginfo": 'Buffer<0,0x1A,0x80>'},
  },
  'nn::account::baas::IGuestLoginRequest': {
        0: {"inbytes":     0, "outbytes":  0x10, "name": 'GetSessionId', "args": 'Out<nn::account::detail::Uuid, void>', "arginfo": 'OutRaw<0x10,4,0>'},
       12: {"inbytes":     0, "outbytes":     8, "name": 'GetAccountId', "args": 'Out<nn::account::NetworkServiceAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
       13: {"inbytes":     0, "outbytes":     8, "name": 'GetLinkedNintendoAccountId', "args": 'Out<nn::account::NintendoAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
       14: {"inbytes":     0, "outbytes":     0, "name": 'GetNickname', "args": 'OutArray<char> const&', "arginfo": 'Buffer<0,0xA,0>'},
       15: {"inbytes":     0, "outbytes":     4, "name": 'GetProfileImage', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       21: {"inbytes":     0, "outbytes":     4, "name": 'LoadIdTokenCache', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
  },
  'nn::account::IAccountServiceForSystemService': {
        0: {"inbytes":     0, "outbytes":     4, "name": 'GetUserCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":  0x10, "outbytes":     1, "name": 'GetUserExistence', "args": 'Out<bool, void>, nn::account::Uid const&', "arginfo": 'OutRaw<1,1,0>, InRaw<0x10,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'ListAllUsers', "args": 'OutArray<nn::account::Uid> const&', "arginfo": 'Buffer<0,0xA,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ListOpenUsers', "args": 'OutArray<nn::account::Uid> const&', "arginfo": 'Buffer<0,0xA,0>'},
        4: {"inbytes":     0, "outbytes":  0x10, "name": 'GetLastOpenedUser', "args": 'Out<nn::account::Uid, void>', "arginfo": 'OutRaw<0x10,8,0>'},
        5: {"inbytes":  0x10, "outbytes":     0, "name": 'GetProfile', "args": 'Out<SharedPointer<nn::account::profile::IProfile>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
        6: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetProfileDigest', "args": 'Out<nn::account::ProfileDigest, void>, nn::account::Uid const&', "arginfo": 'OutRaw<0x10,1,0>, InRaw<0x10,8,0>'},
       50: {"inbytes":     8, "outbytes":     1, "name": 'IsUserRegistrationRequestPermitted', "pid": True, "args": 'Out<bool, void>, unsigned long', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,0>'},
       51: {"inbytes":     1, "outbytes":  0x10, "name": 'TrySelectUserWithoutInteraction', "args": 'Out<nn::account::Uid, void>, bool', "arginfo": 'OutRaw<0x10,8,0>, InRaw<1,1,0>'},
      100: {"inbytes":     0, "outbytes":     0, "name": 'GetUserRegistrationNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      101: {"inbytes":     0, "outbytes":     0, "name": 'GetUserStateChangeNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      102: {"inbytes":  0x10, "outbytes":     0, "name": 'GetBaasAccountManagerForSystemService', "args": 'Out<SharedPointer<nn::account::baas::IManagerForSystemService>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
      103: {"inbytes":     0, "outbytes":     0, "name": 'GetBaasUserAvailabilityChangeNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      104: {"inbytes":     0, "outbytes":     0, "name": 'GetProfileUpdateNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      110: {"inbytes":  0x18, "outbytes":     0, "name": 'StoreSaveDataThumbnail', "args": 'nn::account::Uid const&, nn::ApplicationId, InBuffer const&', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>, Buffer<0,5,0>'},
      111: {"inbytes":  0x18, "outbytes":     0, "name": 'ClearSaveDataThumbnail', "args": 'nn::account::Uid const&, nn::ApplicationId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
      112: {"inbytes":  0x18, "outbytes":     4, "name": 'LoadSaveDataThumbnail', "args": 'Out<unsigned int, void>, OutBuffer const&, nn::account::Uid const&, nn::ApplicationId', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
      190: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetUserLastOpenedApplication', "args": 'Out<nn::ApplicationId, void>, Out<unsigned int, void>, nn::account::Uid const&', "arginfo": 'OutRaw<8,8,8>, OutRaw<4,4,0>, InRaw<0x10,8,0>'},
      997: {"inbytes":  0x10, "outbytes":     0, "name": 'DebugInvalidateTokenCacheForUser', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      998: {"inbytes":  0x10, "outbytes":     0, "name": 'DebugSetUserStateClose', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      999: {"inbytes":  0x10, "outbytes":     0, "name": 'DebugSetUserStateOpen', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
  },
  'nn::account::detail::INotifier': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetSystemEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
  },
  'nn::account::baas::IManagerForSystemService': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'CheckAvailability', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     8, "name": 'GetAccountId', "args": 'Out<nn::account::NetworkServiceAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'EnsureIdTokenCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     4, "name": 'LoadIdTokenCache', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
      100: {"inbytes":     8, "outbytes":     0, "name": 'SetSystemProgramIdentification', "pid": True, "args": 'nn::account::SystemProgramIdentification const&, unsigned long', "arginfo": 'Buffer<0,0x19,0x10>, InRaw<8,8,0>'},
      120: {"inbytes":     0, "outbytes":     8, "name": 'GetNintendoAccountId', "args": 'Out<nn::account::NintendoAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
      130: {"inbytes":     0, "outbytes":     8, "name": 'GetNintendoAccountUserResourceCache', "args": 'Out<nn::account::NintendoAccountId, void>, Out<nn::account::nas::NasUserBase, void>, OutBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0x1A,0x24F>, Buffer<1,6,0>'},
      131: {"inbytes":     0, "outbytes":     0, "name": 'RefreshNintendoAccountUserResourceCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      132: {"inbytes":     4, "outbytes":     1, "name": 'RefreshNintendoAccountUserResourceCacheAsyncIfSecondsElapsed', "args": 'Out<bool, void>, Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, unsigned int', "arginfo": 'OutRaw<1,1,0>, OutObject<0,0>, InRaw<4,4,0>'},
      150: {"inbytes":     4, "outbytes":     0, "name": 'CreateAuthorizationRequest', "args": 'Out<SharedPointer<nn::account::nas::IAuthorizationRequest>, void>, nn::account::nas::NasClientInfo const&, nn::account::NintendoAccountAuthorizationRequestParameters const&, NativeHandle&&, unsigned int', "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x108>, Buffer<1,0x19,0x200>, InHandle<0,1>, InRaw<4,4,0>'},
  },
  'nn::account::IAccountServiceForAdministrator': {
        0: {"inbytes":     0, "outbytes":     4, "name": 'GetUserCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":  0x10, "outbytes":     1, "name": 'GetUserExistence', "args": 'Out<bool, void>, nn::account::Uid const&', "arginfo": 'OutRaw<1,1,0>, InRaw<0x10,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'ListAllUsers', "args": 'OutArray<nn::account::Uid> const&', "arginfo": 'Buffer<0,0xA,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ListOpenUsers', "args": 'OutArray<nn::account::Uid> const&', "arginfo": 'Buffer<0,0xA,0>'},
        4: {"inbytes":     0, "outbytes":  0x10, "name": 'GetLastOpenedUser', "args": 'Out<nn::account::Uid, void>', "arginfo": 'OutRaw<0x10,8,0>'},
        5: {"inbytes":  0x10, "outbytes":     0, "name": 'GetProfile', "args": 'Out<SharedPointer<nn::account::profile::IProfile>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
        6: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetProfileDigest', "args": 'Out<nn::account::ProfileDigest, void>, nn::account::Uid const&', "arginfo": 'OutRaw<0x10,1,0>, InRaw<0x10,8,0>'},
       50: {"inbytes":     8, "outbytes":     1, "name": 'IsUserRegistrationRequestPermitted', "pid": True, "args": 'Out<bool, void>, unsigned long', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,0>'},
       51: {"inbytes":     1, "outbytes":  0x10, "name": 'TrySelectUserWithoutInteraction', "args": 'Out<nn::account::Uid, void>, bool', "arginfo": 'OutRaw<0x10,8,0>, InRaw<1,1,0>'},
      100: {"inbytes":     0, "outbytes":     0, "name": 'GetUserRegistrationNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      101: {"inbytes":     0, "outbytes":     0, "name": 'GetUserStateChangeNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      102: {"inbytes":  0x10, "outbytes":     0, "name": 'GetBaasAccountManagerForSystemService', "args": 'Out<SharedPointer<nn::account::baas::IManagerForSystemService>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
      103: {"inbytes":     0, "outbytes":     0, "name": 'GetBaasUserAvailabilityChangeNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      104: {"inbytes":     0, "outbytes":     0, "name": 'GetProfileUpdateNotifier', "args": 'Out<SharedPointer<nn::account::detail::INotifier>, void>', "arginfo": 'OutObject<0,0>'},
      110: {"inbytes":  0x18, "outbytes":     0, "name": 'StoreSaveDataThumbnail', "args": 'nn::account::Uid const&, nn::ApplicationId, InBuffer const&', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>, Buffer<0,5,0>'},
      111: {"inbytes":  0x18, "outbytes":     0, "name": 'ClearSaveDataThumbnail', "args": 'nn::account::Uid const&, nn::ApplicationId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
      112: {"inbytes":  0x18, "outbytes":     4, "name": 'LoadSaveDataThumbnail', "args": 'Out<unsigned int, void>, OutBuffer const&, nn::account::Uid const&, nn::ApplicationId', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
      190: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetUserLastOpenedApplication', "args": 'Out<nn::ApplicationId, void>, Out<unsigned int, void>, nn::account::Uid const&', "arginfo": 'OutRaw<8,8,8>, OutRaw<4,4,0>, InRaw<0x10,8,0>'},
      997: {"inbytes":  0x10, "outbytes":     0, "name": 'DebugInvalidateTokenCacheForUser', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      998: {"inbytes":  0x10, "outbytes":     0, "name": 'DebugSetUserStateClose', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      999: {"inbytes":  0x10, "outbytes":     0, "name": 'DebugSetUserStateOpen', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      200: {"inbytes":     0, "outbytes":  0x10, "name": 'BeginUserRegistration', "args": 'Out<nn::account::Uid, void>', "arginfo": 'OutRaw<0x10,8,0>'},
      201: {"inbytes":  0x10, "outbytes":     0, "name": 'CompleteUserRegistration', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      202: {"inbytes":  0x10, "outbytes":     0, "name": 'CancelUserRegistration', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      203: {"inbytes":  0x10, "outbytes":     0, "name": 'DeleteUser', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      204: {"inbytes":  0x18, "outbytes":     0, "name": 'SetUserPosition', "args": 'nn::account::Uid const&, int', "arginfo": 'InRaw<0x10,8,8>, InRaw<4,4,0>'},
      205: {"inbytes":  0x10, "outbytes":     0, "name": 'GetProfileEditor', "args": 'Out<SharedPointer<nn::account::profile::IProfileEditor>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
      206: {"inbytes":  0x10, "outbytes":     0, "name": 'CompleteUserRegistrationForcibly', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
      210: {"inbytes":     4, "outbytes":     0, "name": 'CreateFloatingRegistrationRequest', "args": 'Out<SharedPointer<nn::account::baas::IFloatingRegistrationRequest>, void>, NativeHandle&&, unsigned int', "arginfo": 'OutObject<0,0>, InHandle<0,1>, InRaw<4,4,0>'},
      230: {"inbytes":     0, "outbytes":     0, "name": 'AuthenticateServiceAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      250: {"inbytes":  0x10, "outbytes":     0, "name": 'GetBaasAccountAdministrator', "args": 'Out<SharedPointer<nn::account::baas::IAdministrator>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
      290: {"inbytes":  0x10, "outbytes":     0, "name": 'ProxyProcedureForGuestLoginWithNintendoAccount', "args": 'Out<SharedPointer<nn::account::nas::IOAuthProcedureForExternalNsa>, void>, nn::account::detail::Uuid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,4,0>'},
      291: {"inbytes":  0x10, "outbytes":     0, "name": 'ProxyProcedureForFloatingRegistrationWithNintendoAccount', "args": 'Out<SharedPointer<nn::account::nas::IOAuthProcedureForExternalNsa>, void>, nn::account::detail::Uuid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,4,0>'},
      299: {"inbytes":     0, "outbytes":     0, "name": 'SuspendBackgroundDaemon', "args": 'Out<SharedPointer<nn::account::detail::ISessionObject>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::account::profile::IProfileEditor': {
        0: {"inbytes":     0, "outbytes":  0x38, "name": 'Get', "args": 'Out<nn::account::profile::ProfileBase, void>, Out<nn::account::profile::UserData, void>', "arginfo": 'OutRaw<0x38,8,0>, Buffer<0,0x1A,0x80>'},
        1: {"inbytes":     0, "outbytes":  0x38, "name": 'GetBase', "args": 'Out<nn::account::profile::ProfileBase, void>', "arginfo": 'OutRaw<0x38,8,0>'},
       10: {"inbytes":     0, "outbytes":     4, "name": 'GetImageSize', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
       11: {"inbytes":     0, "outbytes":     4, "name": 'LoadImage', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
      100: {"inbytes":  0x38, "outbytes":     0, "name": 'Store', "args": 'nn::account::profile::ProfileBase const&, nn::account::profile::UserData const&', "arginfo": 'InRaw<0x38,8,0>, Buffer<0,0x19,0x80>'},
      101: {"inbytes":  0x38, "outbytes":     0, "name": 'StoreWithImage', "args": 'nn::account::profile::ProfileBase const&, nn::account::profile::UserData const&, InBuffer const&', "arginfo": 'InRaw<0x38,8,0>, Buffer<0,0x19,0x80>, Buffer<1,5,0>'},
  },
  'nn::account::baas::IFloatingRegistrationRequest': {
        0: {"inbytes":     0, "outbytes":  0x10, "name": 'GetSessionId', "args": 'Out<nn::account::detail::Uuid, void>', "arginfo": 'OutRaw<0x10,4,0>'},
       12: {"inbytes":     0, "outbytes":     8, "name": 'GetAccountId', "args": 'Out<nn::account::NetworkServiceAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
       13: {"inbytes":     0, "outbytes":     8, "name": 'GetLinkedNintendoAccountId', "args": 'Out<nn::account::NintendoAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
       14: {"inbytes":     0, "outbytes":     0, "name": 'GetNickname', "args": 'OutArray<char> const&', "arginfo": 'Buffer<0,0xA,0>'},
       15: {"inbytes":     0, "outbytes":     4, "name": 'GetProfileImage', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       21: {"inbytes":     0, "outbytes":     4, "name": 'LoadIdTokenCache', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
      100: {"inbytes":     0, "outbytes":  0x10, "name": 'RegisterAsync', "args": 'Out<nn::account::Uid, void>, Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutRaw<0x10,8,0>, OutObject<0,0>'},
      101: {"inbytes":  0x10, "outbytes":     0, "name": 'RegisterWithUidAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
      110: {"inbytes":     8, "outbytes":     0, "name": 'SetSystemProgramIdentification', "pid": True, "args": 'nn::account::SystemProgramIdentification const&, unsigned long', "arginfo": 'Buffer<0,0x19,0x10>, InRaw<8,8,0>'},
      111: {"inbytes":     0, "outbytes":     0, "name": 'EnsureIdTokenCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::account::baas::IAdministrator': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'CheckAvailability', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     8, "name": 'GetAccountId', "args": 'Out<nn::account::NetworkServiceAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'EnsureIdTokenCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     4, "name": 'LoadIdTokenCache', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
      100: {"inbytes":     8, "outbytes":     0, "name": 'SetSystemProgramIdentification', "pid": True, "args": 'nn::account::SystemProgramIdentification const&, unsigned long', "arginfo": 'Buffer<0,0x19,0x10>, InRaw<8,8,0>'},
      120: {"inbytes":     0, "outbytes":     8, "name": 'GetNintendoAccountId', "args": 'Out<nn::account::NintendoAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
      130: {"inbytes":     0, "outbytes":     8, "name": 'GetNintendoAccountUserResourceCache', "args": 'Out<nn::account::NintendoAccountId, void>, Out<nn::account::nas::NasUserBase, void>, OutBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0x1A,0x24F>, Buffer<1,6,0>'},
      131: {"inbytes":     0, "outbytes":     0, "name": 'RefreshNintendoAccountUserResourceCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      132: {"inbytes":     4, "outbytes":     1, "name": 'RefreshNintendoAccountUserResourceCacheAsyncIfSecondsElapsed', "args": 'Out<bool, void>, Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, unsigned int', "arginfo": 'OutRaw<1,1,0>, OutObject<0,0>, InRaw<4,4,0>'},
      150: {"inbytes":     4, "outbytes":     0, "name": 'CreateAuthorizationRequest', "args": 'Out<SharedPointer<nn::account::nas::IAuthorizationRequest>, void>, nn::account::nas::NasClientInfo const&, nn::account::NintendoAccountAuthorizationRequestParameters const&, NativeHandle&&, unsigned int', "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x108>, Buffer<1,0x19,0x200>, InHandle<0,1>, InRaw<4,4,0>'},
      200: {"inbytes":     0, "outbytes":     1, "name": 'IsRegistered', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      201: {"inbytes":     0, "outbytes":     0, "name": 'RegisterAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      202: {"inbytes":     0, "outbytes":     0, "name": 'UnregisterAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      203: {"inbytes":     0, "outbytes":     0, "name": 'DeleteRegistrationInfoLocally', "args": '', "arginfo": ''},
      220: {"inbytes":     0, "outbytes":     0, "name": 'SynchronizeProfileAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      221: {"inbytes":     0, "outbytes":     0, "name": 'UploadProfileAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      222: {"inbytes":     4, "outbytes":     1, "name": 'SynchronizeProfileAsyncIfSecondsElapsed', "args": 'Out<bool, void>, Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, unsigned int', "arginfo": 'OutRaw<1,1,0>, OutObject<0,0>, InRaw<4,4,0>'},
      250: {"inbytes":     0, "outbytes":     1, "name": 'IsLinkedWithNintendoAccount', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      251: {"inbytes":     0, "outbytes":     0, "name": 'CreateProcedureToLinkWithNintendoAccount', "args": 'Out<SharedPointer<nn::account::nas::IOAuthProcedureForNintendoAccountLinkage>, void>', "arginfo": 'OutObject<0,0>'},
      252: {"inbytes":  0x10, "outbytes":     0, "name": 'ResumeProcedureToLinkWithNintendoAccount', "args": 'Out<SharedPointer<nn::account::nas::IOAuthProcedureForNintendoAccountLinkage>, void>, nn::account::detail::Uuid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,4,0>'},
      255: {"inbytes":     0, "outbytes":     0, "name": 'CreateProcedureToUpdateLinkageStateOfNintendoAccount', "args": 'Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>', "arginfo": 'OutObject<0,0>'},
      256: {"inbytes":  0x10, "outbytes":     0, "name": 'ResumeProcedureToUpdateLinkageStateOfNintendoAccount', "args": 'Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>, nn::account::detail::Uuid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,4,0>'},
      260: {"inbytes":     0, "outbytes":     0, "name": 'CreateProcedureToLinkNnidWithNintendoAccount', "args": 'Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>', "arginfo": 'OutObject<0,0>'},
      261: {"inbytes":  0x10, "outbytes":     0, "name": 'ResumeProcedureToLinkNnidWithNintendoAccount', "args": 'Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>, nn::account::detail::Uuid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,4,0>'},
      280: {"inbytes":  0x10, "outbytes":     0, "name": 'ProxyProcedureToAcquireApplicationAuthorizationForNintendoAccount', "args": 'Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>, nn::account::detail::Uuid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,4,0>'},
      997: {"inbytes":     0, "outbytes":     0, "name": 'DebugUnlinkNintendoAccountAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
      998: {"inbytes":     4, "outbytes":     0, "name": 'DebugSetAvailabilityErrorDetail', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::account::nas::IOAuthProcedureForNintendoAccountLinkage': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'PrepareAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetRequest', "args": 'Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>', "arginfo": 'Buffer<0,0x1A,0x1000>, Buffer<1,0x1A,0x100>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'ApplyResponse', "args": 'InArray<char> const&', "arginfo": 'Buffer<0,9,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ApplyResponseAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, InArray<char> const&', "arginfo": 'OutObject<0,0>, Buffer<0,9,0>'},
       10: {"inbytes":     0, "outbytes":  0x10, "name": 'Suspend', "args": 'Out<nn::account::detail::Uuid, void>', "arginfo": 'OutRaw<0x10,4,0>'},
      100: {"inbytes":     4, "outbytes":     0, "name": 'GetRequestWithTheme', "args": 'Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>, int', "arginfo": 'Buffer<0,0x1A,0x1000>, Buffer<1,0x1A,0x100>, InRaw<4,4,0>'},
      101: {"inbytes":     0, "outbytes":     1, "name": 'IsNetworkServiceAccountReplaced', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      199: {"inbytes":     0, "outbytes":     0, "name": 'GetUrlForIntroductionOfExtraMembership', "args": 'Out<nn::account::RequestUrl, void>', "arginfo": 'Buffer<0,0x1A,0x1000>'},
  },
  'nn::account::http::IOAuthProcedure': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'PrepareAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetRequest', "args": 'Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>', "arginfo": 'Buffer<0,0x1A,0x1000>, Buffer<1,0x1A,0x100>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'ApplyResponse', "args": 'InArray<char> const&', "arginfo": 'Buffer<0,9,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ApplyResponseAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, InArray<char> const&', "arginfo": 'OutObject<0,0>, Buffer<0,9,0>'},
       10: {"inbytes":     0, "outbytes":  0x10, "name": 'Suspend', "args": 'Out<nn::account::detail::Uuid, void>', "arginfo": 'OutRaw<0x10,4,0>'},
  },
  'nn::account::nas::IOAuthProcedureForExternalNsa': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'PrepareAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetRequest', "args": 'Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>', "arginfo": 'Buffer<0,0x1A,0x1000>, Buffer<1,0x1A,0x100>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'ApplyResponse', "args": 'InArray<char> const&', "arginfo": 'Buffer<0,9,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ApplyResponseAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, InArray<char> const&', "arginfo": 'OutObject<0,0>, Buffer<0,9,0>'},
       10: {"inbytes":     0, "outbytes":  0x10, "name": 'Suspend', "args": 'Out<nn::account::detail::Uuid, void>', "arginfo": 'OutRaw<0x10,4,0>'},
      100: {"inbytes":     0, "outbytes":     8, "name": 'GetAccountId', "args": 'Out<nn::account::NetworkServiceAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
      101: {"inbytes":     0, "outbytes":     8, "name": 'GetLinkedNintendoAccountId', "args": 'Out<nn::account::NintendoAccountId, void>', "arginfo": 'OutRaw<8,8,0>'},
      102: {"inbytes":     0, "outbytes":     0, "name": 'GetNickname', "args": 'OutArray<char> const&', "arginfo": 'Buffer<0,0xA,0>'},
      103: {"inbytes":     0, "outbytes":     4, "name": 'GetProfileImage', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
  },
  'nn::account::detail::ISessionObject': {
      999: {"inbytes":     0, "outbytes":     0, "name": 'Dummy', "args": '', "arginfo": ''},
  },
  'nn::account::IBaasAccessTokenAccessor': {
        0: {"inbytes":  0x10, "outbytes":     0, "name": 'EnsureCacheAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
        1: {"inbytes":  0x10, "outbytes":     4, "name": 'LoadCache', "args": 'Out<unsigned int, void>, OutBuffer const&, nn::account::Uid const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,0>'},
        2: {"inbytes":  0x10, "outbytes":     8, "name": 'GetDeviceAccountId', "args": 'Out<unsigned long, void>, nn::account::Uid const&', "arginfo": 'OutRaw<8,8,0>, InRaw<0x10,8,0>'},
       50: {"inbytes":  0x38, "outbytes":     0, "name": 'RegisterNotificationTokenAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&, nn::npns::NotificationToken const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0x28>, InRaw<0x28,1,0>'},
       51: {"inbytes":  0x10, "outbytes":     0, "name": 'UnregisterNotificationTokenAsync', "args": 'Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
  },
  'nn::account::detail::IAsyncContext': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetSystemEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'Cancel', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     1, "name": 'HasDone', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
  },
  'nn::am::service::IAllSystemAppletProxiesService': {
      100: {"inbytes":     8, "outbytes":     0, "name": 'OpenSystemAppletProxy', "pid": True, "args": 'Out<SharedPointer<nn::am::service::ISystemAppletProxy>, void>, unsigned long, NativeHandle&&', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>, InHandle<0,1>'},
      200: {"inbytes":     8, "outbytes":     0, "name": 'OpenLibraryAppletProxyOld', "pid": True, "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletProxy>, void>, unsigned long, NativeHandle&&', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>, InHandle<0,1>'},
      201: {"inbytes":     8, "outbytes":     0, "name": 'OpenLibraryAppletProxy', "pid": True, "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletProxy>, void>, unsigned long, NativeHandle&&, nn::am::AppletAttribute const&', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>, InHandle<0,1>, Buffer<0,0x15,0x80>'},
      300: {"inbytes":     8, "outbytes":     0, "name": 'OpenOverlayAppletProxy', "pid": True, "args": 'Out<SharedPointer<nn::am::service::IOverlayAppletProxy>, void>, unsigned long, NativeHandle&&', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>, InHandle<0,1>'},
      350: {"inbytes":     8, "outbytes":     0, "name": 'OpenSystemApplicationProxy', "pid": True, "args": 'Out<SharedPointer<nn::am::service::IApplicationProxy>, void>, unsigned long, NativeHandle&&', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>, InHandle<0,1>'},
      400: {"inbytes":     8, "outbytes":     0, "name": 'CreateSelfLibraryAppletCreatorForDevelop', "pid": True, "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>, unsigned long', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
  },
  'nn::am::service::ISystemAppletProxy': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetCommonStateGetter', "args": 'Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetSelfController', "args": 'Out<SharedPointer<nn::am::service::ISelfController>, void>', "arginfo": 'OutObject<0,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetWindowController', "args": 'Out<SharedPointer<nn::am::service::IWindowController>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetAudioController', "args": 'Out<SharedPointer<nn::am::service::IAudioController>, void>', "arginfo": 'OutObject<0,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'GetDisplayController', "args": 'Out<SharedPointer<nn::am::service::IDisplayController>, void>', "arginfo": 'OutObject<0,0>'},
     1000: {"inbytes":     0, "outbytes":     0, "name": 'GetDebugFunctions', "args": 'Out<SharedPointer<nn::am::service::IDebugFunctions>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'GetProcessWindingController', "args": 'Out<SharedPointer<nn::am::service::IProcessWindingController>, void>', "arginfo": 'OutObject<0,0>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'GetLibraryAppletCreator', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>', "arginfo": 'OutObject<0,0>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'GetHomeMenuFunctions', "args": 'Out<SharedPointer<nn::am::service::IHomeMenuFunctions>, void>', "arginfo": 'OutObject<0,0>'},
       21: {"inbytes":     0, "outbytes":     0, "name": 'GetGlobalStateController', "args": 'Out<SharedPointer<nn::am::service::IGlobalStateController>, void>', "arginfo": 'OutObject<0,0>'},
       22: {"inbytes":     0, "outbytes":     0, "name": 'GetApplicationCreator', "args": 'Out<SharedPointer<nn::am::service::IApplicationCreator>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::am::service::ICommonStateGetter': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetEventHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     4, "name": 'ReceiveMessage', "args": 'Out<nn::am::AppletMessage, void>', "arginfo": 'OutRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     8, "name": 'GetThisAppletKind', "args": 'Out<nn::am::service::AppletKind, void>', "arginfo": 'OutRaw<8,4,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'AllowToEnterSleep', "args": '', "arginfo": ''},
        4: {"inbytes":     0, "outbytes":     0, "name": 'DisallowToEnterSleep', "args": '', "arginfo": ''},
        5: {"inbytes":     0, "outbytes":     1, "name": 'GetOperationMode', "args": 'Out<unsigned char, void>', "arginfo": 'OutRaw<1,1,0>'},
        6: {"inbytes":     0, "outbytes":     4, "name": 'GetPerformanceMode', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
        7: {"inbytes":     0, "outbytes":     1, "name": 'GetCradleStatus', "args": 'Out<unsigned char, void>', "arginfo": 'OutRaw<1,1,0>'},
        8: {"inbytes":     0, "outbytes":     1, "name": 'GetBootMode', "args": 'Out<unsigned char, void>', "arginfo": 'OutRaw<1,1,0>'},
        9: {"inbytes":     0, "outbytes":     1, "name": 'GetCurrentFocusState', "args": 'Out<unsigned char, void>', "arginfo": 'OutRaw<1,1,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'RequestToAcquireSleepLock', "args": '', "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     0, "name": 'ReleaseSleepLock', "args": '', "arginfo": ''},
       12: {"inbytes":     0, "outbytes":     0, "name": 'ReleaseSleepLockTransiently', "args": '', "arginfo": ''},
       13: {"inbytes":     0, "outbytes":     0, "name": 'GetAcquiredSleepLockEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'PushToGeneralChannel', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
       30: {"inbytes":     0, "outbytes":     0, "name": 'GetHomeButtonReaderLockAccessor', "args": 'Out<SharedPointer<nn::am::service::ILockAccessor>, void>', "arginfo": 'OutObject<0,0>'},
       31: {"inbytes":     4, "outbytes":     0, "name": 'GetReaderLockAccessorEx', "args": 'Out<SharedPointer<nn::am::service::ILockAccessor>, void>, int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
       40: {"inbytes":     0, "outbytes":  0x10, "name": 'GetCradleFwVersion', "args": 'Out<unsigned int, void>, Out<unsigned int, void>, Out<unsigned int, void>, Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, OutRaw<4,4,8>, OutRaw<4,4,0xC>'},
       50: {"inbytes":     0, "outbytes":     1, "name": 'IsVrModeEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       51: {"inbytes":     1, "outbytes":     0, "name": 'SetVrModeEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       55: {"inbytes":     0, "outbytes":     1, "name": 'IsInControllerFirmwareUpdateSection', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       60: {"inbytes":     0, "outbytes":     8, "name": 'GetDefaultDisplayResolution', "args": 'Out<int, void>, Out<int, void>', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
       61: {"inbytes":     0, "outbytes":     0, "name": 'GetDefaultDisplayResolutionChangeEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
  },
  'nn::am::service::ILockAccessor': {
        1: {"inbytes":     1, "outbytes":     1, "name": 'TryLock', "args": 'Out<bool, void>, Out<NativeHandle, void>, bool', "arginfo": 'OutRaw<1,1,0>, OutHandle<0,1>, InRaw<1,1,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'Unlock', "args": '', "arginfo": ''},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
  },
  'nn::am::service::ISelfController': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'Exit', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     0, "name": 'LockExit', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "name": 'UnlockExit', "args": '', "arginfo": ''},
        3: {"inbytes":     0, "outbytes":     0, "name": 'EnterFatalSection', "args": '', "arginfo": ''},
        4: {"inbytes":     0, "outbytes":     0, "name": 'LeaveFatalSection', "args": '', "arginfo": ''},
        9: {"inbytes":     0, "outbytes":     0, "name": 'GetLibraryAppletLaunchableEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       10: {"inbytes":     4, "outbytes":     0, "name": 'SetScreenShotPermission', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       11: {"inbytes":     1, "outbytes":     0, "name": 'SetOperationModeChangedNotification', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       12: {"inbytes":     1, "outbytes":     0, "name": 'SetPerformanceModeChangedNotification', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       13: {"inbytes":     3, "outbytes":     0, "name": 'SetFocusHandlingMode', "args": 'bool, bool, bool', "arginfo": 'InRaw<1,1,0>, InRaw<1,1,1>, InRaw<1,1,2>'},
       14: {"inbytes":     1, "outbytes":     0, "name": 'SetRestartMessageEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       15: {"inbytes":  0x10, "outbytes":     0, "name": 'SetScreenShotAppletIdentityInfo', "args": 'nn::am::service::AppletIdentityInfo const&', "arginfo": 'InRaw<0x10,8,0>'},
       16: {"inbytes":     1, "outbytes":     0, "name": 'SetOutOfFocusSuspendingEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       17: {"inbytes":     1, "outbytes":     0, "name": 'SetControllerFirmwareUpdateSection', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       18: {"inbytes":     1, "outbytes":     0, "name": 'SetRequiresCaptureButtonShortPressedMessage', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       19: {"inbytes":     4, "outbytes":     0, "name": 'SetScreenShotImageOrientation', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       40: {"inbytes":     0, "outbytes":     8, "name": 'CreateManagedDisplayLayer', "args": 'Out<unsigned long, void>', "arginfo": 'OutRaw<8,8,0>'},
       50: {"inbytes":     1, "outbytes":     0, "name": 'SetHandlesRequestToDisplay', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       51: {"inbytes":     0, "outbytes":     0, "name": 'ApproveToDisplay', "args": '', "arginfo": ''},
       60: {"inbytes":  0x10, "outbytes":     0, "name": 'OverrideAutoSleepTimeAndDimmingTime', "args": 'int, int, int, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
       61: {"inbytes":     1, "outbytes":     0, "name": 'SetMediaPlaybackState', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       62: {"inbytes":     4, "outbytes":     0, "name": 'SetIdleTimeDetectionExtension', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
       63: {"inbytes":     0, "outbytes":     4, "name": 'GetIdleTimeDetectionExtension', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
       64: {"inbytes":     4, "outbytes":     0, "name": 'SetInputDetectionSourceSet', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
       65: {"inbytes":     0, "outbytes":     0, "name": 'ReportUserIsActive', "args": '', "arginfo": ''},
       66: {"inbytes":     0, "outbytes":     4, "name": 'GetCurrentIlluminance', "args": 'Out<float, void>', "arginfo": 'OutRaw<4,4,0>'},
       67: {"inbytes":     0, "outbytes":     1, "name": 'IsIlluminanceAvailable', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
  },
  'nn::am::service::IWindowController': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'CreateWindow', "args": 'Out<SharedPointer<nn::am::service::IWindow>, void>, nn::am::service::WindowCreationOption', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     8, "name": 'GetAppletResourceUserId', "args": 'Out<nn::applet::AppletResourceUserId, void>', "arginfo": 'OutRaw<8,8,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'AcquireForegroundRights', "args": '', "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     0, "name": 'ReleaseForegroundRights', "args": '', "arginfo": ''},
       12: {"inbytes":     0, "outbytes":     0, "name": 'RejectToChangeIntoBackground', "args": '', "arginfo": ''},
  },
  'nn::am::service::IWindow': {
  },
  'nn::am::service::IAudioController': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'SetExpectedMasterVolume', "args": 'float, float', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
        1: {"inbytes":     0, "outbytes":     4, "name": 'GetMainAppletExpectedMasterVolume', "args": 'Out<float, void>', "arginfo": 'OutRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     4, "name": 'GetLibraryAppletExpectedMasterVolume', "args": 'Out<float, void>', "arginfo": 'OutRaw<4,4,0>'},
        3: {"inbytes":  0x10, "outbytes":     0, "name": 'ChangeMainAppletMasterVolume', "args": 'float, long', "arginfo": 'InRaw<4,4,0>, InRaw<8,8,8>'},
        4: {"inbytes":     4, "outbytes":     0, "name": 'SetTransparentVolumeRate', "args": 'float', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::am::service::IDisplayController': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetLastForegroundCaptureImage', "args": 'OutBuffer const&', "arginfo": 'Buffer<0,6,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'UpdateLastForegroundCaptureImage', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetLastApplicationCaptureImage', "args": 'OutBuffer const&', "arginfo": 'Buffer<0,6,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetCallerAppletCaptureImage', "args": 'OutBuffer const&', "arginfo": 'Buffer<0,6,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'UpdateCallerAppletCaptureImage', "args": '', "arginfo": ''},
        5: {"inbytes":     0, "outbytes":     1, "name": 'GetLastForegroundCaptureImageEx', "args": 'Out<bool, void>, OutBuffer const&', "arginfo": 'OutRaw<1,1,0>, Buffer<0,6,0>'},
        6: {"inbytes":     0, "outbytes":     1, "name": 'GetLastApplicationCaptureImageEx', "args": 'Out<bool, void>, OutBuffer const&', "arginfo": 'OutRaw<1,1,0>, Buffer<0,6,0>'},
        7: {"inbytes":     0, "outbytes":     1, "name": 'GetCallerAppletCaptureImageEx', "args": 'Out<bool, void>, OutBuffer const&', "arginfo": 'OutRaw<1,1,0>, Buffer<0,6,0>'},
        8: {"inbytes":     8, "outbytes":     0, "name": 'TakeScreenShotOfOwnLayer', "args": 'int, bool', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'AcquireLastApplicationCaptureBuffer', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'ReleaseLastApplicationCaptureBuffer', "args": '', "arginfo": ''},
       12: {"inbytes":     0, "outbytes":     0, "name": 'AcquireLastForegroundCaptureBuffer', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       13: {"inbytes":     0, "outbytes":     0, "name": 'ReleaseLastForegroundCaptureBuffer', "args": '', "arginfo": ''},
       14: {"inbytes":     0, "outbytes":     0, "name": 'AcquireCallerAppletCaptureBuffer', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       15: {"inbytes":     0, "outbytes":     0, "name": 'ReleaseCallerAppletCaptureBuffer', "args": '', "arginfo": ''},
       16: {"inbytes":     0, "outbytes":     1, "name": 'AcquireLastApplicationCaptureBufferEx', "args": 'Out<bool, void>, Out<NativeHandle, void>', "arginfo": 'OutRaw<1,1,0>, OutHandle<0,1>'},
       17: {"inbytes":     0, "outbytes":     1, "name": 'AcquireLastForegroundCaptureBufferEx', "args": 'Out<bool, void>, Out<NativeHandle, void>', "arginfo": 'OutRaw<1,1,0>, OutHandle<0,1>'},
       18: {"inbytes":     0, "outbytes":     1, "name": 'AcquireCallerAppletCaptureBufferEx', "args": 'Out<bool, void>, Out<NativeHandle, void>', "arginfo": 'OutRaw<1,1,0>, OutHandle<0,1>'},
       20: {"inbytes":   0xC, "outbytes":     0, "name": 'ClearCaptureBuffer', "args": 'int, bool, unsigned int', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>, InRaw<4,4,8>'},
       21: {"inbytes":     4, "outbytes":     0, "name": 'ClearAppletTransitionBuffer', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::am::service::IDebugFunctions': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'NotifyMessageToHomeMenuForDebug', "args": 'nn::am::AppletMessage', "arginfo": 'InRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'OpenMainApplication', "args": 'Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     4, "outbytes":     0, "name": 'EmulateButtonEvent', "args": 'nn::am::service::EmulatedButtonEvent', "arginfo": 'InRaw<4,4,0>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'InvalidateTransitionLayer', "args": '', "arginfo": ''},
  },
  'nn::am::service::IApplicationAccessor': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetIntegratedAppletPointer', "args": 'Out<shared_ptr<nn::am::service::IntegratedApplet>, void>', "arginfo": 'OutHandle<0,1>'},
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetAppletStateChangedEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     1, "name": 'IsCompleted', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'Start', "args": '', "arginfo": ''},
       20: {"inbytes":     0, "outbytes":     0, "name": 'RequestExit', "args": '', "arginfo": ''},
       25: {"inbytes":     0, "outbytes":     0, "name": 'Terminate', "args": '', "arginfo": ''},
       30: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
      101: {"inbytes":     0, "outbytes":     0, "name": 'RequestForApplicationToGetForeground', "args": '', "arginfo": ''},
      110: {"inbytes":     0, "outbytes":     0, "name": 'TerminateAllLibraryApplets', "args": '', "arginfo": ''},
      111: {"inbytes":     0, "outbytes":     1, "name": 'AreAnyLibraryAppletsLeft', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      112: {"inbytes":     0, "outbytes":     0, "name": 'GetCurrentLibraryApplet', "args": 'Out<SharedPointer<nn::am::service::IAppletAccessor>, void>', "arginfo": 'OutObject<0,0>'},
      120: {"inbytes":     0, "outbytes":     8, "name": 'GetApplicationId', "args": 'Out<nn::ncm::ApplicationId, void>', "arginfo": 'OutRaw<8,8,0>'},
      121: {"inbytes":     4, "outbytes":     0, "name": 'PushLaunchParameter', "args": 'unsigned int, SharedPointer<nn::am::service::IStorage>', "arginfo": 'InRaw<4,4,0>, InObject<0,0>'},
      122: {"inbytes":     0, "outbytes":     0, "name": 'GetApplicationControlProperty', "args": 'OutBuffer const&', "arginfo": 'Buffer<0,6,0>'},
      123: {"inbytes":     0, "outbytes":     0, "name": 'GetApplicationLaunchProperty', "args": 'OutBuffer const&', "arginfo": 'Buffer<0,6,0>'},
  },
  'nn::am::service::IAppletAccessor': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetIntegratedAppletPointer', "args": 'Out<shared_ptr<nn::am::service::IntegratedApplet>, void>', "arginfo": 'OutHandle<0,1>'},
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetAppletStateChangedEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     1, "name": 'IsCompleted', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'Start', "args": '', "arginfo": ''},
       20: {"inbytes":     0, "outbytes":     0, "name": 'RequestExit', "args": '', "arginfo": ''},
       25: {"inbytes":     0, "outbytes":     0, "name": 'Terminate', "args": '', "arginfo": ''},
       30: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
  },
  'nn::am::service::IProcessWindingController': {
        0: {"inbytes":     0, "outbytes":     4, "name": 'GetLaunchReason', "args": 'Out<nn::am::service::AppletProcessLaunchReason, void>', "arginfo": 'OutRaw<4,1,0>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'OpenCallingLibraryApplet', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletAccessor>, void>', "arginfo": 'OutObject<0,0>'},
       21: {"inbytes":     0, "outbytes":     0, "name": 'PushContext', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
       22: {"inbytes":     0, "outbytes":     0, "name": 'PopContext', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
       23: {"inbytes":     0, "outbytes":     0, "name": 'CancelWindingReservation', "args": '', "arginfo": ''},
       30: {"inbytes":     0, "outbytes":     0, "name": 'WindAndDoReserved', "args": '', "arginfo": ''},
       40: {"inbytes":     0, "outbytes":     0, "name": 'ReserveToStartAndWaitAndUnwindThis', "args": 'SharedPointer<nn::am::service::ILibraryAppletAccessor>', "arginfo": 'InObject<0,0>'},
  },
  'nn::am::service::ILibraryAppletAccessor': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetIntegratedAppletPointer', "args": 'Out<shared_ptr<nn::am::service::IntegratedApplet>, void>', "arginfo": 'OutHandle<0,1>'},
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetAppletStateChangedEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     1, "name": 'IsCompleted', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'Start', "args": '', "arginfo": ''},
       20: {"inbytes":     0, "outbytes":     0, "name": 'RequestExit', "args": '', "arginfo": ''},
       25: {"inbytes":     0, "outbytes":     0, "name": 'Terminate', "args": '', "arginfo": ''},
       30: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
       50: {"inbytes":     1, "outbytes":     0, "name": 'SetOutOfFocusApplicationSuspendingEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      100: {"inbytes":     0, "outbytes":     0, "name": 'PushInData', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
      101: {"inbytes":     0, "outbytes":     0, "name": 'PopOutData', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
      102: {"inbytes":     0, "outbytes":     0, "name": 'PushExtraStorage', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
      103: {"inbytes":     0, "outbytes":     0, "name": 'PushInteractiveInData', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
      104: {"inbytes":     0, "outbytes":     0, "name": 'PopInteractiveOutData', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
      105: {"inbytes":     0, "outbytes":     0, "name": 'GetPopOutDataEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      106: {"inbytes":     0, "outbytes":     0, "name": 'GetPopInteractiveOutDataEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      110: {"inbytes":     0, "outbytes":     1, "name": 'NeedsToExitProcess', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      120: {"inbytes":     0, "outbytes":     8, "name": 'GetLibraryAppletInfo', "args": 'Out<nn::am::service::LibraryAppletInfo, void>', "arginfo": 'OutRaw<8,4,0>'},
      150: {"inbytes":     0, "outbytes":     0, "name": 'RequestForAppletToGetForeground', "args": '', "arginfo": ''},
      160: {"inbytes":     8, "outbytes":     8, "name": 'GetIndirectLayerConsumerHandle', "pid": True, "args": 'Out<unsigned long, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
  },
  'nn::am::service::IStorageAccessor': {
        0: {"inbytes":     0, "outbytes":     8, "name": 'GetSize', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
       10: {"inbytes":     8, "outbytes":     0, "name": 'Write', "args": 'long, InBuffer const&', "arginfo": 'InRaw<8,8,0>, Buffer<0,0x21,0>'},
       11: {"inbytes":     8, "outbytes":     0, "name": 'Read', "args": 'long, OutBuffer const&', "arginfo": 'InRaw<8,8,0>, Buffer<0,0x22,0>'},
  },
  'nn::am::service::ITransferStorageAccessor': {
        0: {"inbytes":     0, "outbytes":     8, "name": 'GetSize', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
        1: {"inbytes":     0, "outbytes":     8, "name": 'GetHandle', "args": 'Out<NativeHandle, void>, Out<unsigned long, void>', "arginfo": 'OutHandle<0,1>, OutRaw<8,8,0>'},
  },
  'nn::am::service::ILibraryAppletCreator': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'CreateLibraryApplet', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletAccessor>, void>, unsigned int, unsigned int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'TerminateAllLibraryApplets', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     1, "name": 'AreAnyLibraryAppletsLeft', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       10: {"inbytes":     8, "outbytes":     0, "name": 'CreateStorage', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>, long', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
       11: {"inbytes":  0x10, "outbytes":     0, "name": 'CreateTransferMemoryStorage', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>, NativeHandle&&, long, bool', "arginfo": 'OutObject<0,0>, InHandle<0,1>, InRaw<8,8,8>, InRaw<1,1,0>'},
       12: {"inbytes":     8, "outbytes":     0, "name": 'CreateHandleStorage', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>, NativeHandle&&, long', "arginfo": 'OutObject<0,0>, InHandle<0,1>, InRaw<8,8,0>'},
  },
  'nn::am::service::IHomeMenuFunctions': {
       10: {"inbytes":     0, "outbytes":     0, "name": 'RequestToGetForeground', "args": '', "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     0, "name": 'LockForeground', "args": '', "arginfo": ''},
       12: {"inbytes":     0, "outbytes":     0, "name": 'UnlockForeground', "args": '', "arginfo": ''},
       20: {"inbytes":     0, "outbytes":     0, "name": 'PopFromGeneralChannel', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
       21: {"inbytes":     0, "outbytes":     0, "name": 'GetPopFromGeneralChannelEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       30: {"inbytes":     0, "outbytes":     0, "name": 'GetHomeButtonWriterLockAccessor', "args": 'Out<SharedPointer<nn::am::service::ILockAccessor>, void>', "arginfo": 'OutObject<0,0>'},
       31: {"inbytes":     4, "outbytes":     0, "name": 'GetWriterLockAccessorEx', "args": 'Out<SharedPointer<nn::am::service::ILockAccessor>, void>, int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
  },
  'nn::am::service::IGlobalStateController': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'RequestToEnterSleep', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     0, "name": 'EnterSleep', "args": '', "arginfo": ''},
        2: {"inbytes":     1, "outbytes":     0, "name": 'StartSleepSequence', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'StartShutdownSequence', "args": '', "arginfo": ''},
        4: {"inbytes":     0, "outbytes":     0, "name": 'StartRebootSequence', "args": '', "arginfo": ''},
       10: {"inbytes":     0, "outbytes":     0, "name": 'LoadAndApplyIdlePolicySettings', "args": '', "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     0, "name": 'NotifyCecSettingsChanged', "args": '', "arginfo": ''},
       12: {"inbytes":     8, "outbytes":     0, "name": 'SetDefaultHomeButtonLongPressTime', "args": 'long', "arginfo": 'InRaw<8,8,0>'},
       13: {"inbytes":     0, "outbytes":     0, "name": 'UpdateDefaultDisplayResolution', "args": '', "arginfo": ''},
       14: {"inbytes":     0, "outbytes":     1, "name": 'ShouldSleepOnBoot', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
  },
  'nn::am::service::IApplicationCreator': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'CreateApplication', "args": 'Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>, nn::ncm::ApplicationId', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'PopLaunchRequestedApplication', "args": 'Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     8, "outbytes":     0, "name": 'CreateSystemApplication', "args": 'Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>, nn::ncm::SystemApplicationId', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
      100: {"inbytes":     0, "outbytes":     0, "name": 'PopFloatingApplicationForDevelopment', "args": 'Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::am::service::ILibraryAppletProxy': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetCommonStateGetter', "args": 'Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetSelfController', "args": 'Out<SharedPointer<nn::am::service::ISelfController>, void>', "arginfo": 'OutObject<0,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetWindowController', "args": 'Out<SharedPointer<nn::am::service::IWindowController>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetAudioController', "args": 'Out<SharedPointer<nn::am::service::IAudioController>, void>', "arginfo": 'OutObject<0,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'GetDisplayController', "args": 'Out<SharedPointer<nn::am::service::IDisplayController>, void>', "arginfo": 'OutObject<0,0>'},
     1000: {"inbytes":     0, "outbytes":     0, "name": 'GetDebugFunctions', "args": 'Out<SharedPointer<nn::am::service::IDebugFunctions>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'GetProcessWindingController', "args": 'Out<SharedPointer<nn::am::service::IProcessWindingController>, void>', "arginfo": 'OutObject<0,0>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'GetLibraryAppletCreator', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>', "arginfo": 'OutObject<0,0>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'OpenLibraryAppletSelfAccessor', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletSelfAccessor>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::am::service::ILibraryAppletSelfAccessor': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'PopInData', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'PushOutData', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'PopInteractiveInData', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'PushInteractiveOutData', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
        5: {"inbytes":     0, "outbytes":     0, "name": 'GetPopInDataEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        6: {"inbytes":     0, "outbytes":     0, "name": 'GetPopInteractiveInDataEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'ExitProcessAndReturn', "args": '', "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     8, "name": 'GetLibraryAppletInfo', "args": 'Out<nn::am::service::LibraryAppletInfo, void>', "arginfo": 'OutRaw<8,4,0>'},
       12: {"inbytes":     0, "outbytes":  0x10, "name": 'GetMainAppletIdentityInfo', "args": 'Out<nn::am::service::AppletIdentityInfo, void>', "arginfo": 'OutRaw<0x10,8,0>'},
       13: {"inbytes":     0, "outbytes":     1, "name": 'CanUseApplicationCore', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       14: {"inbytes":     0, "outbytes":  0x10, "name": 'GetCallerAppletIdentityInfo', "args": 'Out<nn::am::service::AppletIdentityInfo, void>', "arginfo": 'OutRaw<0x10,8,0>'},
       15: {"inbytes":     0, "outbytes":     0, "name": 'GetMainAppletApplicationControlProperty', "args": 'Out<nn::ns::ApplicationControlProperty, void>', "arginfo": 'Buffer<0,0x16,0x4000>'},
       16: {"inbytes":     0, "outbytes":     1, "name": 'GetMainAppletStorageId', "args": 'Out<nn::ncm::StorageId, void>', "arginfo": 'OutRaw<1,1,0>'},
       17: {"inbytes":     0, "outbytes":     4, "name": 'GetCallerAppletIdentityInfoStack', "args": 'Out<int, void>, OutArray<nn::am::service::AppletIdentityInfo> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'PopExtraStorage', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>', "arginfo": 'OutObject<0,0>'},
       25: {"inbytes":     0, "outbytes":     0, "name": 'GetPopExtraStorageEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       30: {"inbytes":     0, "outbytes":     0, "name": 'UnpopInData', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
       31: {"inbytes":     0, "outbytes":     0, "name": 'UnpopExtraStorage', "args": 'SharedPointer<nn::am::service::IStorage>', "arginfo": 'InObject<0,0>'},
       40: {"inbytes":     0, "outbytes":     8, "name": 'GetIndirectLayerProducerHandle', "args": 'Out<unsigned long, void>', "arginfo": 'OutRaw<8,8,0>'},
       50: {"inbytes":     8, "outbytes":     0, "name": 'ReportVisibleError', "args": 'nn::err::ErrorCode', "arginfo": 'InRaw<8,4,0>'},
  },
  'nn::am::service::IOverlayAppletProxy': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetCommonStateGetter', "args": 'Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetSelfController', "args": 'Out<SharedPointer<nn::am::service::ISelfController>, void>', "arginfo": 'OutObject<0,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetWindowController', "args": 'Out<SharedPointer<nn::am::service::IWindowController>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetAudioController', "args": 'Out<SharedPointer<nn::am::service::IAudioController>, void>', "arginfo": 'OutObject<0,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'GetDisplayController', "args": 'Out<SharedPointer<nn::am::service::IDisplayController>, void>', "arginfo": 'OutObject<0,0>'},
     1000: {"inbytes":     0, "outbytes":     0, "name": 'GetDebugFunctions', "args": 'Out<SharedPointer<nn::am::service::IDebugFunctions>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'GetProcessWindingController', "args": 'Out<SharedPointer<nn::am::service::IProcessWindingController>, void>', "arginfo": 'OutObject<0,0>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'GetLibraryAppletCreator', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>', "arginfo": 'OutObject<0,0>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'GetOverlayFunctions', "args": 'Out<SharedPointer<nn::am::service::IOverlayFunctions>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::am::service::IOverlayFunctions': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'BeginToWatchShortHomeButtonMessage', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     0, "name": 'EndToWatchShortHomeButtonMessage', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     8, "name": 'GetApplicationIdForLogo', "args": 'Out<nn::ncm::ApplicationId, void>', "arginfo": 'OutRaw<8,8,0>'},
        3: {"inbytes":     8, "outbytes":     0, "name": 'SetGpuTimeSliceBoost', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
        4: {"inbytes":     1, "outbytes":     0, "name": 'SetAutoSleepTimeAndDimmingTimeEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
        5: {"inbytes":     4, "outbytes":     0, "name": 'TerminateApplicationAndSetReason', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
        6: {"inbytes":     1, "outbytes":     0, "name": 'SetScreenShotPermissionGlobally', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
  },
  'nn::am::service::IApplicationProxy': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetCommonStateGetter', "args": 'Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetSelfController', "args": 'Out<SharedPointer<nn::am::service::ISelfController>, void>', "arginfo": 'OutObject<0,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetWindowController', "args": 'Out<SharedPointer<nn::am::service::IWindowController>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetAudioController', "args": 'Out<SharedPointer<nn::am::service::IAudioController>, void>', "arginfo": 'OutObject<0,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'GetDisplayController', "args": 'Out<SharedPointer<nn::am::service::IDisplayController>, void>', "arginfo": 'OutObject<0,0>'},
     1000: {"inbytes":     0, "outbytes":     0, "name": 'GetDebugFunctions', "args": 'Out<SharedPointer<nn::am::service::IDebugFunctions>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     0, "outbytes":     0, "name": 'GetProcessWindingController', "args": 'Out<SharedPointer<nn::am::service::IProcessWindingController>, void>', "arginfo": 'OutObject<0,0>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'GetLibraryAppletCreator', "args": 'Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>', "arginfo": 'OutObject<0,0>'},
       20: {"inbytes":     0, "outbytes":     0, "name": 'GetApplicationFunctions', "args": 'Out<SharedPointer<nn::am::service::IApplicationFunctions>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::am::service::IApplicationFunctions': {
        1: {"inbytes":     4, "outbytes":     0, "name": 'PopLaunchParameter', "args": 'Out<SharedPointer<nn::am::service::IStorage>, void>, unsigned int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
       10: {"inbytes":     8, "outbytes":     0, "name": 'CreateApplicationAndPushAndRequestToStart', "args": 'nn::ncm::ApplicationId, SharedPointer<nn::am::service::IStorage>', "arginfo": 'InRaw<8,8,0>, InObject<0,0>'},
       11: {"inbytes":  0x10, "outbytes":     0, "name": 'CreateApplicationAndPushAndRequestToStartForQuest', "args": 'nn::ncm::ApplicationId, SharedPointer<nn::am::service::IStorage>, unsigned int, unsigned int', "arginfo": 'InRaw<8,8,8>, InObject<0,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
       20: {"inbytes":  0x10, "outbytes":     8, "name": 'EnsureSaveData', "args": 'Out<long, void>, nn::account::Uid const&', "arginfo": 'OutRaw<8,8,0>, InRaw<0x10,8,0>'},
       21: {"inbytes":     0, "outbytes":     8, "name": 'GetDesiredLanguage', "args": 'Out<nn::settings::LanguageCode, void>', "arginfo": 'OutRaw<8,1,0>'},
       22: {"inbytes":     4, "outbytes":     0, "name": 'SetTerminateResult', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
       23: {"inbytes":     0, "outbytes":  0x10, "name": 'GetDisplayVersion', "args": 'Out<nn::oe::DisplayVersion, void>', "arginfo": 'OutRaw<0x10,1,0>'},
       24: {"inbytes":     0, "outbytes":     2, "name": 'GetLaunchStorageInfoForDebug', "args": 'Out<nn::ncm::StorageId, void>, Out<nn::ncm::StorageId, void>', "arginfo": 'OutRaw<1,1,0>, OutRaw<1,1,1>'},
       25: {"inbytes":  0x28, "outbytes":     8, "name": 'ExtendSaveData', "args": 'Out<long, void>, unsigned char, nn::account::Uid const&, long, long', "arginfo": 'OutRaw<8,8,0>, InRaw<1,1,0>, InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<8,8,0x20>'},
       26: {"inbytes":  0x18, "outbytes":  0x10, "name": 'GetSaveDataSize', "args": 'Out<long, void>, Out<long, void>, unsigned char, nn::account::Uid const&', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, InRaw<1,1,0>, InRaw<0x10,8,8>'},
       30: {"inbytes":     8, "outbytes":     0, "name": 'BeginBlockingHomeButtonShortAndLongPressed', "args": 'long', "arginfo": 'InRaw<8,8,0>'},
       31: {"inbytes":     0, "outbytes":     0, "name": 'EndBlockingHomeButtonShortAndLongPressed', "args": '', "arginfo": ''},
       32: {"inbytes":     8, "outbytes":     0, "name": 'BeginBlockingHomeButton', "args": 'long', "arginfo": 'InRaw<8,8,0>'},
       33: {"inbytes":     0, "outbytes":     0, "name": 'EndBlockingHomeButton', "args": '', "arginfo": ''},
       40: {"inbytes":     0, "outbytes":     1, "name": 'NotifyRunning', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       50: {"inbytes":     0, "outbytes":  0x10, "name": 'GetPseudoDeviceId', "args": 'Out<nn::util::Uuid, void>', "arginfo": 'OutRaw<0x10,1,0>'},
       60: {"inbytes":     1, "outbytes":     0, "name": 'SetMediaPlaybackStateForApplication', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       65: {"inbytes":     0, "outbytes":     1, "name": 'IsGamePlayRecordingSupported', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       66: {"inbytes":     8, "outbytes":     0, "name": 'InitializeGamePlayRecording', "args": 'NativeHandle&&, unsigned long', "arginfo": 'InHandle<0,1>, InRaw<8,8,0>'},
       67: {"inbytes":     4, "outbytes":     0, "name": 'SetGamePlayRecordingState', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       70: {"inbytes":     0, "outbytes":     0, "name": 'RequestToShutdown', "args": '', "arginfo": ''},
       71: {"inbytes":     0, "outbytes":     0, "name": 'RequestToReboot', "args": '', "arginfo": ''},
  },
  'nn::am::service::IApplicationProxyService': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'OpenApplicationProxy', "pid": True, "args": 'Out<SharedPointer<nn::am::service::IApplicationProxy>, void>, unsigned long, NativeHandle&&', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>, InHandle<0,1>'},
  },
  'nn::apm::IManager': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'OpenSession', "args": 'Out<SharedPointer<nn::apm::ISession>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     4, "name": 'GetPerformanceMode', "args": 'Out<nn::apm::PerformanceMode, void>', "arginfo": 'OutRaw<4,4,0>'},
  },
  'nn::apm::ISession': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'SetPerformanceConfiguration', "args": 'nn::apm::PerformanceMode, nn::apm::PerformanceConfiguration', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
        1: {"inbytes":     4, "outbytes":     4, "name": 'GetPerformanceConfiguration', "args": 'Out<nn::apm::PerformanceConfiguration, void>, nn::apm::PerformanceMode', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
  },
  'nn::apm::ISystemManager': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'RequestPerformanceMode', "args": 'nn::apm::PerformanceMode', "arginfo": 'InRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     0, "name": 'GetPerformanceEvent', "args": 'Out<NativeHandle, void>, nn::apm::EventTarget', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":  0x28, "name": 'GetThrottlingState', "args": 'Out<nn::apm::ThrottlingState, void>', "arginfo": 'OutRaw<0x28,8,0>'},
        3: {"inbytes":     0, "outbytes":  0x28, "name": 'GetLastThrottlingState', "args": 'Out<nn::apm::ThrottlingState, void>', "arginfo": 'OutRaw<0x28,8,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'ClearLastThrottlingState', "args": '', "arginfo": ''},
  },
  'nn::apm::IManagerPrivileged': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'OpenSession', "args": 'Out<SharedPointer<nn::apm::ISession>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::bcat::detail::ipc::IServiceCreator': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'CreateBcatService', "pid": True, "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IBcatService>, void>, unsigned long', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "name": 'CreateDeliveryCacheStorageService', "pid": True, "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IDeliveryCacheStorageService>, void>, unsigned long', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
        2: {"inbytes":     8, "outbytes":     0, "name": 'CreateDeliveryCacheStorageServiceWithApplicationId', "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IDeliveryCacheStorageService>, void>, nn::ApplicationId', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
  },
  'nn::bcat::detail::ipc::IBcatService': {
    10100: {"inbytes":     0, "outbytes":     0, "name": 'RequestSyncDeliveryCache', "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IDeliveryCacheProgressService>, void>', "arginfo": 'OutObject<0,0>'},
    20100: {"inbytes":  0x10, "outbytes":     0, "name": 'RequestSyncDeliveryCacheWithApplicationId', "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IDeliveryCacheProgressService>, void>, nn::ApplicationId, unsigned int', "arginfo": 'OutObject<0,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
    30100: {"inbytes":     8, "outbytes":     0, "name": 'SetPassphrase', "args": 'nn::ApplicationId, InArray<char> const&', "arginfo": 'InRaw<8,8,0>, Buffer<0,9,0>'},
    30200: {"inbytes":  0x10, "outbytes":     0, "name": 'RegisterBackgroundDeliveryTask', "args": 'nn::ApplicationId, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
    30201: {"inbytes":     8, "outbytes":     0, "name": 'UnregisterBackgroundDeliveryTask', "args": 'nn::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
    30202: {"inbytes":     8, "outbytes":     0, "name": 'BlockDeliveryTask', "args": 'nn::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
    30203: {"inbytes":     8, "outbytes":     0, "name": 'UnblockDeliveryTask', "args": 'nn::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
    90100: {"inbytes":     0, "outbytes":     4, "name": 'EnumerateBackgroundDeliveryTask', "args": 'Out<int, void>, OutArray<nn::bcat::TaskInfo> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
    90200: {"inbytes":     8, "outbytes":     8, "name": 'GetDeliveryList', "args": 'Out<unsigned long, void>, OutBuffer const&, nn::ApplicationId', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,0>'},
    90201: {"inbytes":     8, "outbytes":     0, "name": 'ClearDeliveryCacheStorage', "args": 'nn::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
    90300: {"inbytes":     0, "outbytes":     4, "name": 'GetPushNotificationLog', "args": 'Out<int, void>, OutArray<nn::bcat::PushNotificationLog> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
  },
  'nn::bcat::detail::ipc::IDeliveryCacheProgressService': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetImpl', "args": 'Out<nn::bcat::detail::DeliveryCacheProgressImpl, void>', "arginfo": 'Buffer<0,0x1A,0x200>'},
  },
  'nn::bcat::detail::ipc::IDeliveryCacheStorageService': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'CreateFileService', "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IDeliveryCacheFileService>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'CreateDirectoryService', "args": 'Out<SharedPointer<nn::bcat::detail::ipc::IDeliveryCacheDirectoryService>, void>', "arginfo": 'OutObject<0,0>'},
       10: {"inbytes":     0, "outbytes":     4, "name": 'EnumerateDeliveryCacheDirectory', "args": 'Out<int, void>, OutArray<nn::bcat::DirectoryName> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
  },
  'nn::bcat::detail::ipc::IDeliveryCacheFileService': {
        0: {"inbytes":  0x40, "outbytes":     0, "name": 'Open', "args": 'nn::bcat::DirectoryName const&, nn::bcat::FileName const&', "arginfo": 'InRaw<0x20,1,0>, InRaw<0x20,1,0x20>'},
        1: {"inbytes":     8, "outbytes":     8, "name": 'Read', "args": 'Out<unsigned long, void>, long, OutBuffer const&', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>, Buffer<0,6,0>'},
        2: {"inbytes":     0, "outbytes":     8, "name": 'GetSize', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
        3: {"inbytes":     0, "outbytes":  0x10, "name": 'GetDigest', "args": 'Out<nn::bcat::Digest, void>', "arginfo": 'OutRaw<0x10,8,0>'},
  },
  'nn::bcat::detail::ipc::IDeliveryCacheDirectoryService': {
        0: {"inbytes":  0x20, "outbytes":     0, "name": 'Open', "args": 'nn::bcat::DirectoryName const&', "arginfo": 'InRaw<0x20,1,0>'},
        1: {"inbytes":     0, "outbytes":     4, "name": 'Read', "args": 'Out<int, void>, OutArray<nn::bcat::DeliveryCacheDirectoryEntry> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
        2: {"inbytes":     0, "outbytes":     4, "name": 'GetCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
  },
  'nn::codec::detail::IHardwareOpusDecoderManager': {
        0: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<8,4,0>, InHandle<0,1>, InRaw<4,4,8>'},
        1: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
        2: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x110>, InHandle<0,1>, InRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,0x19,0x110>'},
  },
  'nn::codec::detail::IHardwareOpusDecoder': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,6,0>, Buffer<1,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,5,0>'},
        2: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,6,0>, Buffer<1,5,0>'},
        3: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,5,0>'},
  },
  'nn::friends::detail::ipc::IServiceCreator': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'CreateFriendService', "args": 'Out<SharedPointer<nn::friends::detail::ipc::IFriendService>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":  0x10, "outbytes":     0, "name": 'CreateNotificationService', "args": 'Out<SharedPointer<nn::friends::detail::ipc::INotificationService>, void>, nn::account::Uid const&', "arginfo": 'OutObject<0,0>, InRaw<0x10,8,0>'},
  },
  'nn::friends::detail::ipc::IFriendService': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetCompletionEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'Cancel', "args": '', "arginfo": ''},
    10100: {"inbytes":  0x30, "outbytes":     4, "name": 'GetFriendListIds', "pid": True, "args": 'Out<int, void>, OutArray<nn::account::NetworkServiceAccountId> const&, nn::account::Uid const&, int, nn::friends::detail::ipc::SizedFriendFilter const&, unsigned long', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>, InRaw<0x10,8,8>, InRaw<4,4,0>, InRaw<0x10,8,0x18>, InRaw<8,8,0x28>'},
    10101: {"inbytes":  0x30, "outbytes":     4, "name": 'GetFriendList', "pid": True, "args": 'Out<int, void>, OutArray<nn::friends::detail::FriendImpl> const&, nn::account::Uid const&, int, nn::friends::detail::ipc::SizedFriendFilter const&, unsigned long', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,8>, InRaw<4,4,0>, InRaw<0x10,8,0x18>, InRaw<8,8,0x28>'},
    10102: {"inbytes":  0x18, "outbytes":     0, "name": 'UpdateFriendInfo', "pid": True, "args": 'OutArray<nn::friends::detail::FriendImpl> const&, nn::account::Uid const&, InArray<nn::account::NetworkServiceAccountId> const&, unsigned long', "arginfo": 'Buffer<0,6,0>, InRaw<0x10,8,0>, Buffer<1,9,0>, InRaw<8,8,0x10>'},
    10110: {"inbytes":  0x18, "outbytes":     4, "name": 'GetFriendProfileImage', "args": 'Out<int, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, InRaw<0x10,8,0>, InRaw<8,8,0x10>, Buffer<0,6,0>'},
    10200: {"inbytes":  0x20, "outbytes":     0, "name": 'SendFriendRequestForApplication', "pid": True, "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&, unsigned long', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>, Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>, InRaw<8,8,0x18>'},
    10211: {"inbytes":  0x80, "outbytes":     0, "name": 'AddFacedFriendRequestForApplication', "pid": True, "args": 'nn::account::Uid const&, nn::friends::FacedFriendRequestRegistrationKey const&, nn::account::Nickname const&, InBuffer const&, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&, unsigned long', "arginfo": 'InRaw<0x10,8,0x68>, InRaw<0x40,1,0>, InRaw<0x21,1,0x40>, Buffer<2,5,0>, Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>, InRaw<8,8,0x78>'},
    10400: {"inbytes":  0x18, "outbytes":     4, "name": 'GetBlockedUserListIds', "args": 'Out<int, void>, OutArray<nn::account::NetworkServiceAccountId> const&, nn::account::Uid const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>, InRaw<0x10,8,8>, InRaw<4,4,0>'},
    10500: {"inbytes":  0x10, "outbytes":     0, "name": 'GetProfileList', "args": 'OutArray<nn::friends::detail::ProfileImpl> const&, nn::account::Uid const&, InArray<nn::account::NetworkServiceAccountId> const&', "arginfo": 'Buffer<0,6,0>, InRaw<0x10,8,0>, Buffer<1,9,0>'},
    10600: {"inbytes":  0x10, "outbytes":     0, "name": 'DeclareOpenOnlinePlaySession', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    10601: {"inbytes":  0x10, "outbytes":     0, "name": 'DeclareCloseOnlinePlaySession', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    10610: {"inbytes":  0x18, "outbytes":     0, "name": 'UpdateUserPresence', "pid": True, "args": 'nn::account::Uid const&, nn::friends::detail::UserPresenceImpl const&, unsigned long', "arginfo": 'InRaw<0x10,8,0>, Buffer<0,0x19,0xE0>, InRaw<8,8,0x10>'},
    10700: {"inbytes":  0x18, "outbytes":     0, "name": 'GetPlayHistoryRegistrationKey', "args": 'Out<nn::friends::PlayHistoryRegistrationKey, void>, nn::account::Uid const&, bool', "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<0x10,8,8>, InRaw<1,1,0>'},
    10701: {"inbytes":  0x10, "outbytes":     0, "name": 'GetPlayHistoryRegistrationKeyWithNetworkServiceAccountId', "args": 'Out<nn::friends::PlayHistoryRegistrationKey, void>, nn::account::NetworkServiceAccountId, bool', "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,8,8>, InRaw<1,1,0>'},
    10702: {"inbytes":  0x18, "outbytes":     0, "name": 'AddPlayHistory', "pid": True, "args": 'nn::account::Uid const&, nn::friends::PlayHistoryRegistrationKey const&, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&, unsigned long', "arginfo": 'InRaw<0x10,8,0>, Buffer<0,0x19,0x40>, Buffer<1,0x19,0x48>, Buffer<2,0x19,0x48>, InRaw<8,8,0x10>'},
    11000: {"inbytes":  0xA4, "outbytes":  0xA0, "name": 'GetProfileImageUrl', "args": 'Out<nn::friends::Url, void>, nn::friends::Url const&, int', "arginfo": 'OutRaw<0xA0,1,0>, InRaw<0xA0,1,0>, InRaw<4,4,0xA0>'},
    20100: {"inbytes":  0x28, "outbytes":     4, "name": 'GetFriendCount', "pid": True, "args": 'Out<int, void>, nn::account::Uid const&, nn::friends::detail::ipc::SizedFriendFilter const&, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<0x10,8,0>, InRaw<0x10,8,0x10>, InRaw<8,8,0x20>'},
    20101: {"inbytes":  0x10, "outbytes":     4, "name": 'GetNewlyFriendCount', "args": 'Out<int, void>, nn::account::Uid const&', "arginfo": 'OutRaw<4,4,0>, InRaw<0x10,8,0>'},
    20102: {"inbytes":  0x18, "outbytes":     0, "name": 'GetFriendDetailedInfo', "args": 'Out<nn::friends::detail::FriendDetailedInfoImpl, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'Buffer<0,0x1A,0x800>, InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    20103: {"inbytes":  0x10, "outbytes":     0, "name": 'SyncFriendList', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    20104: {"inbytes":  0x10, "outbytes":     0, "name": 'RequestSyncFriendList', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    20110: {"inbytes":  0x18, "outbytes":     0, "name": 'LoadFriendSetting', "args": 'Out<nn::friends::detail::FriendSettingImpl, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    20200: {"inbytes":  0x10, "outbytes":     8, "name": 'GetReceivedFriendRequestCount', "args": 'Out<int, void>, Out<int, void>, nn::account::Uid const&', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<0x10,8,0>'},
    20201: {"inbytes":  0x18, "outbytes":     4, "name": 'GetFriendRequestList', "args": 'Out<int, void>, OutArray<nn::friends::detail::FriendRequestImpl> const&, nn::account::Uid const&, int, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
    20300: {"inbytes":  0x18, "outbytes":     4, "name": 'GetFriendCandidateList', "args": 'Out<int, void>, OutArray<nn::friends::detail::FriendCandidateImpl> const&, nn::account::Uid const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,8>, InRaw<4,4,0>'},
    20301: {"inbytes":  0x18, "outbytes":     4, "name": 'GetNintendoNetworkIdInfo', "args": 'Out<nn::friends::NintendoNetworkIdUserInfo, void>, Out<int, void>, OutArray<nn::friends::detail::NintendoNetworkIdFriendImpl> const&, nn::account::Uid const&, int', "arginfo": 'Buffer<0,0x1A,0x38>, OutRaw<4,4,0>, Buffer<1,6,0>, InRaw<0x10,8,8>, InRaw<4,4,0>'},
    20400: {"inbytes":  0x18, "outbytes":     4, "name": 'GetBlockedUserList', "args": 'Out<int, void>, OutArray<nn::friends::detail::BlockedUserImpl> const&, nn::account::Uid const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,8>, InRaw<4,4,0>'},
    20401: {"inbytes":  0x10, "outbytes":     0, "name": 'SyncBlockedUserList', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    20500: {"inbytes":  0x10, "outbytes":     0, "name": 'GetProfileExtraList', "args": 'OutArray<nn::friends::detail::ProfileExtraImpl> const&, nn::account::Uid const&, InArray<nn::account::NetworkServiceAccountId> const&', "arginfo": 'Buffer<0,6,0>, InRaw<0x10,8,0>, Buffer<1,9,0>'},
    20501: {"inbytes":  0x18, "outbytes":     8, "name": 'GetRelationship', "args": 'Out<nn::friends::Relationship, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'OutRaw<8,1,0>, InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    20600: {"inbytes":  0x10, "outbytes":     0, "name": 'GetUserPresenceView', "args": 'Out<nn::friends::detail::UserPresenceViewImpl, void>, nn::account::Uid const&', "arginfo": 'Buffer<0,0x1A,0xE0>, InRaw<0x10,8,0>'},
    20700: {"inbytes":  0x18, "outbytes":     4, "name": 'GetPlayHistoryList', "args": 'Out<int, void>, OutArray<nn::friends::detail::PlayHistoryImpl> const&, nn::account::Uid const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<0x10,8,8>, InRaw<4,4,0>'},
    20701: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetPlayHistoryStatistics', "args": 'Out<nn::friends::PlayHistoryStatistics, void>, nn::account::Uid const&', "arginfo": 'OutRaw<0x10,8,0>, InRaw<0x10,8,0>'},
    20800: {"inbytes":  0x10, "outbytes":     0, "name": 'LoadUserSetting', "args": 'Out<nn::friends::detail::UserSettingImpl, void>, nn::account::Uid const&', "arginfo": 'Buffer<0,0x1A,0x800>, InRaw<0x10,8,0>'},
    20801: {"inbytes":  0x10, "outbytes":     0, "name": 'SyncUserSetting', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    20900: {"inbytes":     0, "outbytes":     0, "name": 'RequestListSummaryOverlayNotification', "args": '', "arginfo": ''},
    21000: {"inbytes":  0x18, "outbytes":     0, "name": 'GetExternalApplicationCatalog', "args": 'Out<nn::friends::ExternalApplicationCatalog, void>, nn::friends::ExternalApplicationCatalogId const&, nn::settings::LanguageCode', "arginfo": 'Buffer<0,0x1A,0x4B8>, InRaw<0x10,8,8>, InRaw<8,1,0>'},
    30100: {"inbytes":  0x10, "outbytes":     0, "name": 'DropFriendNewlyFlags', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    30101: {"inbytes":  0x18, "outbytes":     0, "name": 'DeleteFriend', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30110: {"inbytes":  0x18, "outbytes":     0, "name": 'DropFriendNewlyFlag', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30120: {"inbytes":  0x20, "outbytes":     0, "name": 'ChangeFriendFavoriteFlag', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, bool', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<1,1,0>'},
    30121: {"inbytes":  0x20, "outbytes":     0, "name": 'ChangeFriendOnlineNotificationFlag', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, bool', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<1,1,0>'},
    30200: {"inbytes":  0x20, "outbytes":     0, "name": 'SendFriendRequest', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, int', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<4,4,0>'},
    30201: {"inbytes":  0x30, "outbytes":     0, "name": 'SendFriendRequestWithApplicationInfo', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, int, nn::friends::ApplicationInfo const&, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<4,4,0>, InRaw<0x10,8,0x20>, Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>'},
    30202: {"inbytes":  0x18, "outbytes":     0, "name": 'CancelFriendRequest', "args": 'nn::account::Uid const&, nn::friends::RequestId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30203: {"inbytes":  0x18, "outbytes":     0, "name": 'AcceptFriendRequest', "args": 'nn::account::Uid const&, nn::friends::RequestId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30204: {"inbytes":  0x18, "outbytes":     0, "name": 'RejectFriendRequest', "args": 'nn::account::Uid const&, nn::friends::RequestId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30205: {"inbytes":  0x18, "outbytes":     0, "name": 'ReadFriendRequest', "args": 'nn::account::Uid const&, nn::friends::RequestId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30210: {"inbytes":  0x10, "outbytes":  0x40, "name": 'GetFacedFriendRequestRegistrationKey', "args": 'Out<nn::friends::FacedFriendRequestRegistrationKey, void>, nn::account::Uid const&', "arginfo": 'OutRaw<0x40,1,0>, InRaw<0x10,8,0>'},
    30211: {"inbytes":  0x78, "outbytes":     0, "name": 'AddFacedFriendRequest', "args": 'nn::account::Uid const&, nn::friends::FacedFriendRequestRegistrationKey const&, nn::account::Nickname const&, InBuffer const&', "arginfo": 'InRaw<0x10,8,0x68>, InRaw<0x40,1,0>, InRaw<0x21,1,0x40>, Buffer<0,5,0>'},
    30212: {"inbytes":  0x18, "outbytes":     0, "name": 'CancelFacedFriendRequest', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30213: {"inbytes":  0x18, "outbytes":     4, "name": 'GetFacedFriendRequestProfileImage', "args": 'Out<int, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, InRaw<0x10,8,0>, InRaw<8,8,0x10>, Buffer<0,6,0>'},
    30214: {"inbytes":     0, "outbytes":     4, "name": 'GetFacedFriendRequestProfileImageFromPath', "args": 'Out<int, void>, InArray<char> const&, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,9,0>, Buffer<1,6,0>'},
    30215: {"inbytes":  0x30, "outbytes":     0, "name": 'SendFriendRequestWithExternalApplicationCatalogId', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, int, nn::friends::ExternalApplicationCatalogId const&, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<4,4,0>, InRaw<0x10,8,0x20>, Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>'},
    30216: {"inbytes":  0x18, "outbytes":     0, "name": 'ResendFacedFriendRequest', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30217: {"inbytes":  0x80, "outbytes":     0, "name": 'SendFriendRequestWithNintendoNetworkIdInfo', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, int, nn::friends::MiiName const&, nn::friends::MiiImageUrlParam const&, nn::friends::MiiName const&, nn::friends::MiiImageUrlParam const&', "arginfo": 'InRaw<0x10,8,0x68>, InRaw<8,8,0x78>, InRaw<4,4,0x60>, InRaw<0x20,1,0>, InRaw<0x10,1,0x20>, InRaw<0x20,1,0x30>, InRaw<0x10,1,0x50>'},
    30400: {"inbytes":  0x20, "outbytes":     0, "name": 'BlockUser', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, int', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<4,4,0>'},
    30401: {"inbytes":  0x30, "outbytes":     0, "name": 'BlockUserWithApplicationInfo', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId, int, nn::friends::ApplicationInfo const&, nn::friends::InAppScreenName const&', "arginfo": 'InRaw<0x10,8,8>, InRaw<8,8,0x18>, InRaw<4,4,0>, InRaw<0x10,8,0x20>, Buffer<0,0x19,0x48>'},
    30402: {"inbytes":  0x18, "outbytes":     0, "name": 'UnblockUser', "args": 'nn::account::Uid const&, nn::account::NetworkServiceAccountId', "arginfo": 'InRaw<0x10,8,0>, InRaw<8,8,0x10>'},
    30500: {"inbytes":  0x30, "outbytes":     0, "name": 'GetProfileExtraFromFriendCode', "args": 'Out<nn::friends::detail::ProfileExtraImpl, void>, nn::account::Uid const&, nn::friends::FriendCode const&', "arginfo": 'Buffer<0,0x1A,0x400>, InRaw<0x10,8,0x20>, InRaw<0x20,1,0>'},
    30700: {"inbytes":  0x10, "outbytes":     0, "name": 'DeletePlayHistory', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    30810: {"inbytes":  0x18, "outbytes":     0, "name": 'ChangePresencePermission', "args": 'nn::account::Uid const&, int', "arginfo": 'InRaw<0x10,8,8>, InRaw<4,4,0>'},
    30811: {"inbytes":  0x18, "outbytes":     0, "name": 'ChangeFriendRequestReception', "args": 'nn::account::Uid const&, bool', "arginfo": 'InRaw<0x10,8,8>, InRaw<1,1,0>'},
    30812: {"inbytes":  0x18, "outbytes":     0, "name": 'ChangePlayLogPermission', "args": 'nn::account::Uid const&, int', "arginfo": 'InRaw<0x10,8,8>, InRaw<4,4,0>'},
    30820: {"inbytes":  0x10, "outbytes":     0, "name": 'IssueFriendCode', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    30830: {"inbytes":  0x10, "outbytes":     0, "name": 'ClearPlayLog', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
    49900: {"inbytes":  0x10, "outbytes":     0, "name": 'DeleteNetworkServiceAccountCache', "args": 'nn::account::Uid const&', "arginfo": 'InRaw<0x10,8,0>'},
  },
  'nn::friends::detail::ipc::INotificationService': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'Clear', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":  0x10, "name": 'Pop', "args": 'Out<nn::friends::detail::ipc::SizedNotificationInfo, void>', "arginfo": 'OutRaw<0x10,8,0>'},
  },
  'nn::tma::IHtcsManager': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        1: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
        2: {"inbytes":  0x48, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0x44>, InRaw<0x42,2,0>'},
        3: {"inbytes":  0x48, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0x44>, InRaw<0x42,2,0>'},
        4: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        5: {"inbytes":     4, "outbytes":  0x4C, "arginfo": 'OutRaw<4,4,0x44>, OutRaw<4,4,0x48>, OutRaw<0x42,2,0>, InRaw<4,4,0>'},
        6: {"inbytes":     8, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,6,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
        7: {"inbytes":     8, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, InRaw<4,4,0>, Buffer<0,5,0>, InRaw<4,4,4>'},
        8: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        9: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
       10: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
       11: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
       12: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutObject<0,0>'},
       13: {"inbytes":     1, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutObject<0,0>, InRaw<1,1,0>'},
      100: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
      101: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::tma::ISocket': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        1: {"inbytes":  0x42, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<0x42,2,0>'},
        2: {"inbytes":  0x42, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<0x42,2,0>'},
        3: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":  0x48, "arginfo": 'OutRaw<4,4,0x44>, OutObject<0,0>, OutRaw<0x42,2,0>'},
        5: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,0x22,0>, InRaw<4,4,0>'},
        6: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,0x21,0>, InRaw<4,4,0>'},
        7: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
        8: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        9: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>'},
       10: {"inbytes":     4, "outbytes":  0x48, "arginfo": 'OutRaw<4,4,0x44>, OutObject<0,0>, OutRaw<0x42,2,0>, InRaw<4,4,0>'},
       11: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, InRaw<4,4,0>, InRaw<4,4,4>'},
       12: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,0x22,0>, InRaw<4,4,0>'},
       13: {"inbytes":  0x18, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<8,8,0x10>, InHandle<0,1>, InRaw<4,4,8>'},
       14: {"inbytes":     4, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, Buffer<0,0x21,0>, InRaw<4,4,0>'},
       15: {"inbytes":  0x10, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, Buffer<0,0x21,0>, Buffer<1,0x21,0>, InHandle<0,1>, InRaw<8,8,8>, InRaw<4,4,0>'},
       16: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, InRaw<4,4,0>'},
  },
  'nn::tma::IHtcsManager': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        1: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
        2: {"inbytes":  0x48, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0x44>, InRaw<0x42,2,0>'},
        3: {"inbytes":  0x48, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0x44>, InRaw<0x42,2,0>'},
        4: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        5: {"inbytes":     4, "outbytes":  0x4C, "arginfo": 'OutRaw<4,4,0x44>, OutRaw<4,4,0x48>, OutRaw<0x42,2,0>, InRaw<4,4,0>'},
        6: {"inbytes":     8, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,6,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
        7: {"inbytes":     8, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, InRaw<4,4,0>, Buffer<0,5,0>, InRaw<4,4,4>'},
        8: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        9: {"inbytes":   0xC, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
       10: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
       11: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
       12: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutObject<0,0>'},
       13: {"inbytes":     1, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutObject<0,0>, InRaw<1,1,0>'},
      100: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
      101: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::tma::ISocket': {
        0: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        1: {"inbytes":  0x42, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<0x42,2,0>'},
        2: {"inbytes":  0x42, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<0x42,2,0>'},
        3: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":  0x48, "arginfo": 'OutRaw<4,4,0x44>, OutObject<0,0>, OutRaw<0x42,2,0>'},
        5: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,0x22,0>, InRaw<4,4,0>'},
        6: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,0x21,0>, InRaw<4,4,0>'},
        7: {"inbytes":     4, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>'},
        8: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        9: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>'},
       10: {"inbytes":     4, "outbytes":  0x48, "arginfo": 'OutRaw<4,4,0x44>, OutObject<0,0>, OutRaw<0x42,2,0>, InRaw<4,4,0>'},
       11: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, InRaw<4,4,0>, InRaw<4,4,4>'},
       12: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, Buffer<0,0x22,0>, InRaw<4,4,0>'},
       13: {"inbytes":  0x18, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<8,8,0x10>, InHandle<0,1>, InRaw<4,4,8>'},
       14: {"inbytes":     4, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, Buffer<0,0x21,0>, InRaw<4,4,0>'},
       15: {"inbytes":  0x10, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, OutHandle<0,1>, Buffer<0,0x21,0>, Buffer<1,0x21,0>, InHandle<0,1>, InRaw<8,8,8>, InRaw<4,4,0>'},
       16: {"inbytes":     4, "outbytes":  0x10, "arginfo": 'OutRaw<4,4,0>, OutRaw<8,8,8>, InRaw<4,4,0>'},
  },
  'nn::lm::ILogService': {
        0: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
  },
  'nn::lm::ILogger': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::nfc::detail::ISystemManager': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::nfc::detail::ISystem': {
        0: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
      100: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
  },
  'nn::nfc::detail::IUserManager': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::nfc::detail::IUser': {
        0: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
  },
  'nn::nfc::mifare::detail::IUserManager': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::nfc::mifare::detail::IUser': {
        0: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>'},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        4: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        5: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<8,4,0>, Buffer<1,5,0>'},
        6: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,5,0>'},
        7: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x58>, InRaw<8,4,0>'},
        8: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
        9: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       10: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
       11: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       12: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       13: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
  },
  'nn::nfp::detail::IDebugManager': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::nfp::detail::IDebug': {
        0: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>'},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        4: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        5: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
        6: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        7: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>'},
        8: {"inbytes":     8, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, InRaw<8,4,0>'},
        9: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,5,0>'},
       10: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       11: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       12: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, Buffer<0,5,0>'},
       13: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x58>, InRaw<8,4,0>'},
       14: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x100>, InRaw<8,4,0>'},
       15: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
       16: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
       17: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       18: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       19: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
       20: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       21: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       22: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       23: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
       24: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, Buffer<0,5,0>'},
      100: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      101: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
      102: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x100>, InRaw<8,4,0>'},
      103: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,0x19,0x100>'},
      104: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      105: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      106: {"inbytes":     8, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<8,4,0>'},
      200: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x298>, InRaw<8,4,0>'},
      201: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,0x19,0x298>'},
      202: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      203: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>'},
      204: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
      205: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,5,0>'},
      206: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,5,0>, InRaw<4,4,8>'},
      300: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
      301: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      302: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>'},
      303: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>'},
      304: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      305: {"inbytes":  0x10, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, InRaw<8,4,0>, Buffer<1,5,0>, InRaw<8,8,8>'},
      306: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x58>, InRaw<8,4,0>'},
      307: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
      308: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
      309: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
      310: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
      311: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
      312: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      313: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      314: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
  },
  'nn::nfp::detail::ISystemManager': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::nfp::detail::ISystem': {
        0: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>'},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        4: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        5: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
        6: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       10: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       11: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       13: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x58>, InRaw<8,4,0>'},
       14: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x100>, InRaw<8,4,0>'},
       15: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
       16: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
       17: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       18: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       19: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
       20: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       21: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       23: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
      100: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      101: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
      102: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x100>, InRaw<8,4,0>'},
      103: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,0x19,0x100>'},
      104: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      105: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
      106: {"inbytes":     8, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<8,4,0>'},
  },
  'nn::nfp::detail::IUserManager': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::nfp::detail::IUser': {
        0: {"inbytes":  0x10, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, Buffer<0,5,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>'},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        4: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        5: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
        6: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
        7: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>'},
        8: {"inbytes":     8, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, InRaw<8,4,0>'},
        9: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, Buffer<0,5,0>'},
       10: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       11: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,4,0>'},
       12: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, Buffer<0,5,0>'},
       13: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x58>, InRaw<8,4,0>'},
       14: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x100>, InRaw<8,4,0>'},
       15: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
       16: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x40>, InRaw<8,4,0>'},
       17: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       18: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,4,0>'},
       19: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
       20: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       21: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       22: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,4,0>'},
       23: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
       24: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>, Buffer<0,5,0>'},
  },
  'nn::nifm::detail::IStaticService': {
        4: {"inbytes":     0, "outbytes":     0, "name": 'CreateGeneralServiceOld', "args": 'Out<SharedPointer<nn::nifm::detail::IGeneralService>, void>', "arginfo": 'OutObject<0,0>'},
        5: {"inbytes":     8, "outbytes":     0, "name": 'CreateGeneralService', "pid": True, "args": 'Out<SharedPointer<nn::nifm::detail::IGeneralService>, void>, unsigned long', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
  },
  'nn::nifm::detail::IGeneralService': {
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetClientId', "args": 'Out<nn::nifm::ClientId, void>', "arginfo": 'Buffer<0,0x1A,4>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'CreateScanRequest', "args": 'Out<SharedPointer<nn::nifm::detail::IScanRequest>, void>', "arginfo": 'OutObject<0,0>'},
        4: {"inbytes":     4, "outbytes":     0, "name": 'CreateRequest', "args": 'Out<SharedPointer<nn::nifm::detail::IRequest>, void>, int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        5: {"inbytes":     0, "outbytes":     0, "name": 'GetCurrentNetworkProfile', "args": 'Out<nn::nifm::detail::sf::NetworkProfileData, void>', "arginfo": 'Buffer<0,0x1A,0x17C>'},
        6: {"inbytes":     4, "outbytes":     4, "name": 'EnumerateNetworkInterfaces', "args": 'OutArray<nn::nifm::detail::sf::NetworkInterfaceInfo> const&, Out<int, void>, unsigned int', "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>, InRaw<4,4,0>'},
        7: {"inbytes":     1, "outbytes":     4, "name": 'EnumerateNetworkProfiles', "args": 'OutArray<nn::nifm::detail::sf::NetworkProfileBasicInfo> const&, Out<int, void>, unsigned char', "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, InRaw<1,1,0>'},
        8: {"inbytes":  0x10, "outbytes":     0, "name": 'GetNetworkProfile', "args": 'Out<nn::nifm::detail::sf::NetworkProfileData, void>, nn::util::Uuid const&', "arginfo": 'Buffer<0,0x1A,0x17C>, InRaw<0x10,1,0>'},
        9: {"inbytes":     0, "outbytes":  0x10, "name": 'SetNetworkProfile', "args": 'Out<nn::util::Uuid, void>, nn::nifm::detail::sf::NetworkProfileData const&', "arginfo": 'OutRaw<0x10,1,0>, Buffer<0,0x19,0x17C>'},
       10: {"inbytes":  0x10, "outbytes":     0, "name": 'RemoveNetworkProfile', "args": 'nn::util::Uuid const&', "arginfo": 'InRaw<0x10,1,0>'},
       11: {"inbytes":     0, "outbytes":     4, "name": 'GetScanData', "args": 'OutArray<nn::nifm::detail::sf::AccessPointData> const&, Out<int, void>', "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
       12: {"inbytes":     0, "outbytes":     4, "name": 'GetCurrentIpAddress', "args": 'Out<nn::nifm::IpV4Address, void>', "arginfo": 'OutRaw<4,1,0>'},
       13: {"inbytes":     0, "outbytes":     0, "name": 'GetCurrentAccessPoint', "args": 'Out<nn::nifm::detail::sf::AccessPointData, void>', "arginfo": 'Buffer<0,0x1A,0x34>'},
       14: {"inbytes":     0, "outbytes":  0x10, "name": 'CreateTemporaryNetworkProfile', "args": 'Out<SharedPointer<nn::nifm::detail::INetworkProfile>, void>, Out<nn::util::Uuid, void>, nn::nifm::detail::sf::NetworkProfileData const&', "arginfo": 'OutObject<0,0>, OutRaw<0x10,1,0>, Buffer<0,0x19,0x17C>'},
       15: {"inbytes":     0, "outbytes":  0x16, "name": 'GetCurrentIpConfigInfo', "args": 'Out<nn::nifm::IpAddressSetting, void>, Out<nn::nifm::DnsSetting, void>', "arginfo": 'OutRaw<0xD,1,0>, OutRaw<9,1,0xD>'},
       16: {"inbytes":     1, "outbytes":     0, "name": 'SetWirelessCommunicationEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       17: {"inbytes":     0, "outbytes":     1, "name": 'IsWirelessCommunicationEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       18: {"inbytes":     0, "outbytes":     3, "name": 'GetInternetConnectionStatus', "args": 'Out<nn::nifm::detail::sf::InternetConnectionStatus, void>', "arginfo": 'OutRaw<3,1,0>'},
       19: {"inbytes":     1, "outbytes":     0, "name": 'SetEthernetCommunicationEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       20: {"inbytes":     0, "outbytes":     1, "name": 'IsEthernetCommunicationEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       21: {"inbytes":     0, "outbytes":     1, "name": 'IsAnyInternetRequestAccepted', "args": 'Out<bool, void>, nn::nifm::ClientId', "arginfo": 'OutRaw<1,1,0>, Buffer<0,0x19,4>'},
       22: {"inbytes":     0, "outbytes":     1, "name": 'IsAnyForegroundRequestAccepted', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       23: {"inbytes":     0, "outbytes":     0, "name": 'PutToSleep', "args": '', "arginfo": ''},
       24: {"inbytes":     0, "outbytes":     0, "name": 'WakeUp', "args": '', "arginfo": ''},
       25: {"inbytes":     0, "outbytes":  0x10, "name": 'GetSsidListVersion', "args": 'Out<nn::nifm::SsidListVersion, void>', "arginfo": 'OutRaw<0x10,1,0>'},
       26: {"inbytes":     0, "outbytes":     0, "name": 'SetExclusiveClient', "args": 'nn::nifm::ClientId', "arginfo": 'Buffer<0,0x19,4>'},
       27: {"inbytes":     0, "outbytes":     0, "name": 'GetDefaultIpSetting', "args": 'Out<nn::nifm::IpSettingData, void>', "arginfo": 'Buffer<0,0x1A,0xC2>'},
       28: {"inbytes":     0, "outbytes":     0, "name": 'SetDefaultIpSetting', "args": 'nn::nifm::IpSettingData const&', "arginfo": 'Buffer<0,0x19,0xC2>'},
       29: {"inbytes":     1, "outbytes":     0, "name": 'SetWirelessCommunicationEnabledForTest', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       30: {"inbytes":     1, "outbytes":     0, "name": 'SetEthernetCommunicationEnabledForTest', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       31: {"inbytes":     0, "outbytes":     0, "name": 'GetTelemetorySystemEventReadableHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       32: {"inbytes":     0, "outbytes":     0, "name": 'GetTelemetryInfo', "args": 'Out<nn::nifm::TelemetryInfo, void>', "arginfo": 'Buffer<0,0x16,0x20C>'},
       33: {"inbytes":     0, "outbytes":     0, "name": 'ConfirmSystemAvailability', "args": '', "arginfo": ''},
  },
  'nn::nifm::detail::IScanRequest': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'Submit', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     1, "name": 'IsProcessing', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetSystemEventReadableHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
  },
  'nn::nifm::detail::IRequest': {
        0: {"inbytes":     0, "outbytes":     4, "name": 'GetRequestState', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetResult', "args": '', "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetSystemEventReadableHandles', "args": 'Out<NativeHandle, void>, Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>, OutHandle<1,1>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'Cancel', "args": '', "arginfo": ''},
        4: {"inbytes":     0, "outbytes":     0, "name": 'Submit', "args": '', "arginfo": ''},
        5: {"inbytes":  0x24, "outbytes":     0, "name": 'SetRequirement', "args": 'nn::nifm::Requirement const&', "arginfo": 'InRaw<0x24,4,0>'},
        6: {"inbytes":     4, "outbytes":     0, "name": 'SetRequirementPreset', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
        8: {"inbytes":     1, "outbytes":     0, "name": 'SetPriority', "args": 'unsigned char', "arginfo": 'InRaw<1,1,0>'},
        9: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNetworkProfileId', "args": 'nn::util::Uuid const&', "arginfo": 'InRaw<0x10,1,0>'},
       10: {"inbytes":     1, "outbytes":     0, "name": 'SetRejectable', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       11: {"inbytes":     1, "outbytes":     0, "name": 'SetConnectionConfirmationOption', "args": 'signed char', "arginfo": 'InRaw<1,1,0>'},
       12: {"inbytes":     1, "outbytes":     0, "name": 'SetPersistent', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       13: {"inbytes":     1, "outbytes":     0, "name": 'SetInstant', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       14: {"inbytes":     2, "outbytes":     0, "name": 'SetSustainable', "args": 'bool, unsigned char', "arginfo": 'InRaw<1,1,0>, InRaw<1,1,1>'},
       15: {"inbytes":     1, "outbytes":     0, "name": 'SetRawPriority', "args": 'unsigned char', "arginfo": 'InRaw<1,1,0>'},
       16: {"inbytes":     1, "outbytes":     0, "name": 'SetGreedy', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       17: {"inbytes":     1, "outbytes":     0, "name": 'SetSharable', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       18: {"inbytes":     4, "outbytes":     0, "name": 'SetRequirementByRevision', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
       19: {"inbytes":     0, "outbytes":  0x24, "name": 'GetRequirement', "args": 'Out<nn::nifm::Requirement, void>', "arginfo": 'OutRaw<0x24,4,0>'},
       20: {"inbytes":     0, "outbytes":     4, "name": 'GetRevision', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
       21: {"inbytes":     4, "outbytes":   0xC, "name": 'GetAppletInfo', "args": 'Out<unsigned int, void>, Out<unsigned int, void>, Out<unsigned int, void>, OutBuffer const&, unsigned int', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, OutRaw<4,4,8>, Buffer<0,6,0>, InRaw<4,4,0>'},
       22: {"inbytes":     0, "outbytes":     4, "name": 'GetAdditionalInfo', "args": 'Out<nn::nifm::AdditionalInfo, void>, Out<unsigned int, void>', "arginfo": 'Buffer<0,0x16,0x410>, OutRaw<4,4,0>'},
       23: {"inbytes":     1, "outbytes":     0, "name": 'SetKeptInSleep', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       24: {"inbytes":     4, "outbytes":     0, "name": 'RegisterSocketDescriptor', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       25: {"inbytes":     4, "outbytes":     0, "name": 'UnregisterSocketDescriptor', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::nifm::detail::INetworkProfile': {
        0: {"inbytes":     0, "outbytes":  0x10, "name": 'Update', "args": 'Out<nn::util::Uuid, void>, nn::nifm::detail::sf::NetworkProfileData const&', "arginfo": 'OutRaw<0x10,1,0>, Buffer<0,0x19,0x17C>'},
        1: {"inbytes":  0x10, "outbytes":  0x10, "name": 'PersistOld', "args": 'Out<nn::util::Uuid, void>, nn::util::Uuid const&', "arginfo": 'OutRaw<0x10,1,0>, InRaw<0x10,1,0>'},
        2: {"inbytes":     0, "outbytes":  0x10, "name": 'Persist', "args": 'Out<nn::util::Uuid, void>', "arginfo": 'OutRaw<0x10,1,0>'},
  },
  'nn::nsd::detail::IManager': {
       10: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x100>'},
       11: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,8>'},
       12: {"inbytes":     0, "outbytes":  0x10, "arginfo": 'OutRaw<0x10,1,0>'},
       13: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
       14: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, Buffer<1,6,0>, InRaw<4,4,0>'},
       20: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x100>, Buffer<1,0x15,0x100>'},
       21: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,0x16,0x100>, Buffer<1,0x15,0x100>'},
       30: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x108>, Buffer<1,0x15,0x10>'},
       31: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,0x16,0x108>, Buffer<1,0x15,0x10>'},
       40: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x100>'},
       41: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,0x16,0x100>'},
       42: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x100>'},
       43: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, Buffer<0,0x16,0x100>'},
       50: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x12BF0>'},
       60: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x16,0x12BF0>'},
       61: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x15,0x12BF0>'},
       62: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nn::pctl::detail::ipc::IParentalControlServiceFactory': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'CreateService', "pid": True, "args": 'Out<SharedPointer<nn::pctl::detail::ipc::IParentalControlService>, void>, unsigned long', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
  },
  'nn::pctl::detail::ipc::IParentalControlService': {
     1001: {"inbytes":     0, "outbytes":     0, "name": 'CheckFreeCommunicationPermission', "args": '', "arginfo": ''},
     1002: {"inbytes":  0x10, "outbytes":     0, "name": 'ConfirmLaunchApplicationPermission', "args": 'nn::ncm::ApplicationId, InArray<signed char> const&, bool', "arginfo": 'InRaw<8,8,8>, Buffer<0,9,0>, InRaw<1,1,0>'},
     1003: {"inbytes":  0x10, "outbytes":     0, "name": 'ConfirmResumeApplicationPermission', "args": 'nn::ncm::ApplicationId, InArray<signed char> const&, bool', "arginfo": 'InRaw<8,8,8>, Buffer<0,9,0>, InRaw<1,1,0>'},
     1004: {"inbytes":     0, "outbytes":     0, "name": 'ConfirmSnsPostPermission', "args": '', "arginfo": ''},
     1005: {"inbytes":     0, "outbytes":     0, "name": 'ConfirmSystemSettingsPermission', "args": '', "arginfo": ''},
     1006: {"inbytes":     0, "outbytes":     1, "name": 'IsRestrictionTemporaryUnlocked', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1007: {"inbytes":     0, "outbytes":     0, "name": 'RevertRestrictionTemporaryUnlocked', "args": '', "arginfo": ''},
     1008: {"inbytes":     0, "outbytes":     0, "name": 'EnterRestrictedSystemSettings', "args": '', "arginfo": ''},
     1009: {"inbytes":     0, "outbytes":     0, "name": 'LeaveRestrictedSystemSettings', "args": '', "arginfo": ''},
     1010: {"inbytes":     0, "outbytes":     1, "name": 'IsRestrictedSystemSettingsEntered', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1011: {"inbytes":     0, "outbytes":     0, "name": 'RevertRestrictedSystemSettingsEntered', "args": '', "arginfo": ''},
     1012: {"inbytes":     0, "outbytes":     4, "name": 'GetRestrictedFeatures', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
     1031: {"inbytes":     0, "outbytes":     1, "name": 'IsRestrictionEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1032: {"inbytes":     0, "outbytes":     4, "name": 'GetSafetyLevel', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
     1033: {"inbytes":     4, "outbytes":     0, "name": 'SetSafetyLevel', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
     1034: {"inbytes":     4, "outbytes":     3, "name": 'GetSafetyLevelSettings', "args": 'Out<nn::pctl::SafetyLevelSettings, void>, int', "arginfo": 'OutRaw<3,1,0>, InRaw<4,4,0>'},
     1035: {"inbytes":     0, "outbytes":     3, "name": 'GetCurrentSettings', "args": 'Out<nn::pctl::SafetyLevelSettings, void>', "arginfo": 'OutRaw<3,1,0>'},
     1036: {"inbytes":     3, "outbytes":     0, "name": 'SetCustomSafetyLevelSettings', "args": 'nn::pctl::SafetyLevelSettings', "arginfo": 'InRaw<3,1,0>'},
     1037: {"inbytes":     0, "outbytes":     4, "name": 'GetDefaultRatingOrganization', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
     1038: {"inbytes":     4, "outbytes":     0, "name": 'SetDefaultRatingOrganization', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
     1039: {"inbytes":     0, "outbytes":     4, "name": 'GetFreeCommunicationApplicationListCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
     1042: {"inbytes":     8, "outbytes":     0, "name": 'AddToFreeCommunicationApplicationList', "args": 'nn::ncm::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
     1043: {"inbytes":     0, "outbytes":     0, "name": 'DeleteSettings', "args": '', "arginfo": ''},
     1044: {"inbytes":     4, "outbytes":     4, "name": 'GetFreeCommunicationApplicationList', "args": 'Out<int, void>, OutArray<nn::pctl::FreeCommunicationApplicationInfo> const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
     1045: {"inbytes":     0, "outbytes":     0, "name": 'UpdateFreeCommunicationApplicationList', "args": 'InArray<nn::pctl::FreeCommunicationApplicationInfo> const&', "arginfo": 'Buffer<0,5,0>'},
     1046: {"inbytes":     0, "outbytes":     0, "name": 'DisableFeaturesForReset', "args": '', "arginfo": ''},
     1047: {"inbytes":     8, "outbytes":     0, "name": 'NotifyApplicationDownloadStarted', "args": 'nn::ncm::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
     1201: {"inbytes":     0, "outbytes":     0, "name": 'UnlockRestrictionTemporarily', "args": 'InArray<char> const&', "arginfo": 'Buffer<0,9,0>'},
     1202: {"inbytes":     0, "outbytes":     0, "name": 'UnlockSystemSettingsRestriction', "args": 'InArray<char> const&', "arginfo": 'Buffer<0,9,0>'},
     1203: {"inbytes":     0, "outbytes":     0, "name": 'SetPinCode', "args": 'InArray<char> const&', "arginfo": 'Buffer<0,9,0>'},
     1204: {"inbytes":     0, "outbytes":  0x20, "name": 'GenerateInquiryCode', "args": 'Out<nn::pctl::InquiryCode, void>', "arginfo": 'OutRaw<0x20,1,0>'},
     1205: {"inbytes":  0x20, "outbytes":     1, "name": 'CheckMasterKey', "args": 'Out<bool, void>, nn::pctl::InquiryCode const&, InArray<char> const&', "arginfo": 'OutRaw<1,1,0>, InRaw<0x20,1,0>, Buffer<0,9,0>'},
     1206: {"inbytes":     0, "outbytes":     4, "name": 'GetPinCodeLength', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
     1207: {"inbytes":     0, "outbytes":     0, "name": 'GetPinCodeChangedEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
     1403: {"inbytes":     0, "outbytes":     1, "name": 'IsPairingActive', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1406: {"inbytes":     0, "outbytes":     8, "name": 'GetSettingsLastUpdated', "args": 'Out<nn::time::PosixTime, void>', "arginfo": 'OutRaw<8,8,0>'},
     1411: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetPairingAccountInfo', "args": 'Out<nn::pctl::detail::PairingAccountInfoBase, void>, nn::pctl::detail::PairingInfoBase const&', "arginfo": 'OutRaw<0x10,8,0>, InRaw<0x10,8,0>'},
     1421: {"inbytes":  0x10, "outbytes":     4, "name": 'GetAccountNickname', "args": 'Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::PairingAccountInfoBase const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>, InRaw<0x10,8,0>'},
     1424: {"inbytes":  0x10, "outbytes":     4, "name": 'GetAccountState', "args": 'Out<int, void>, nn::pctl::detail::PairingAccountInfoBase const&', "arginfo": 'OutRaw<4,4,0>, InRaw<0x10,8,0>'},
     1432: {"inbytes":     0, "outbytes":     0, "name": 'GetSynchronizationEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
     1451: {"inbytes":     0, "outbytes":     0, "name": 'StartPlayTimer', "args": '', "arginfo": ''},
     1452: {"inbytes":     0, "outbytes":     0, "name": 'StopPlayTimer', "args": '', "arginfo": ''},
     1453: {"inbytes":     0, "outbytes":     1, "name": 'IsPlayTimerEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1454: {"inbytes":     0, "outbytes":     8, "name": 'GetPlayTimerRemainingTime', "args": 'Out<nn::TimeSpanType, void>', "arginfo": 'OutRaw<8,8,0>'},
     1455: {"inbytes":     0, "outbytes":     1, "name": 'IsRestrictedByPlayTimer', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1456: {"inbytes":     0, "outbytes":  0x34, "name": 'GetPlayTimerSettings', "args": 'Out<nn::pctl::PlayTimerSettings, void>', "arginfo": 'OutRaw<0x34,2,0>'},
     1457: {"inbytes":     0, "outbytes":     0, "name": 'GetPlayTimerEventToRequestSuspension', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
     1471: {"inbytes":     0, "outbytes":     0, "name": 'NotifyWrongPinCodeInputManyTimes', "args": '', "arginfo": ''},
     1472: {"inbytes":     0, "outbytes":     0, "name": 'CancelNetworkRequest', "args": '', "arginfo": ''},
     1473: {"inbytes":     0, "outbytes":     0, "name": 'GetUnlinkedEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
     1474: {"inbytes":     0, "outbytes":     0, "name": 'ClearUnlinkedEvent', "args": '', "arginfo": ''},
     1601: {"inbytes":     0, "outbytes":     1, "name": 'DisableAllFeatures', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1602: {"inbytes":     0, "outbytes":     1, "name": 'PostEnableAllFeatures', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
     1603: {"inbytes":     0, "outbytes":     2, "name": 'IsAllFeaturesDisabled', "args": 'Out<bool, void>, Out<bool, void>', "arginfo": 'OutRaw<1,1,0>, OutRaw<1,1,1>'},
     1901: {"inbytes":     8, "outbytes":     0, "name": 'DeleteFromFreeCommunicationApplicationListForDebug', "args": 'nn::ncm::ApplicationId', "arginfo": 'InRaw<8,8,0>'},
     1902: {"inbytes":     0, "outbytes":     0, "name": 'ClearFreeCommunicationApplicationListForDebug', "args": '', "arginfo": ''},
     1941: {"inbytes":     0, "outbytes":     0, "name": 'DeletePairing', "args": '', "arginfo": ''},
     1951: {"inbytes":  0x34, "outbytes":     0, "name": 'SetPlayTimerSettingsForDebug', "args": 'nn::pctl::PlayTimerSettings const&', "arginfo": 'InRaw<0x34,2,0>'},
     1952: {"inbytes":     0, "outbytes":     8, "name": 'GetPlayTimerSpentTimeForTest', "args": 'Out<nn::TimeSpanType, void>', "arginfo": 'OutRaw<8,8,0>'},
     2001: {"inbytes":     0, "outbytes":     8, "name": 'RequestPairingAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, InArray<char> const&', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>, Buffer<0,9,0>'},
     2002: {"inbytes":     8, "outbytes":  0x10, "name": 'FinishRequestPairing', "args": 'Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::AsyncData', "arginfo": 'OutRaw<0x10,8,0>, InRaw<8,4,0>'},
     2003: {"inbytes":  0x10, "outbytes":     8, "name": 'AuthorizePairingAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, nn::pctl::detail::PairingInfoBase const&', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>, InRaw<0x10,8,0>'},
     2004: {"inbytes":     8, "outbytes":  0x10, "name": 'FinishAuthorizePairing', "args": 'Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::AsyncData', "arginfo": 'OutRaw<0x10,8,0>, InRaw<8,4,0>'},
     2005: {"inbytes":     0, "outbytes":     8, "name": 'RetrievePairingInfoAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>'},
     2006: {"inbytes":     8, "outbytes":  0x10, "name": 'FinishRetrievePairingInfo', "args": 'Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::AsyncData', "arginfo": 'OutRaw<0x10,8,0>, InRaw<8,4,0>'},
     2007: {"inbytes":     1, "outbytes":     8, "name": 'UnlinkPairingAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, bool', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>, InRaw<1,1,0>'},
     2008: {"inbytes":   0xC, "outbytes":     0, "name": 'FinishUnlinkPairing', "args": 'nn::pctl::detail::AsyncData, bool', "arginfo": 'InRaw<8,4,4>, InRaw<1,1,0>'},
     2009: {"inbytes":  0x10, "outbytes":   0xC, "name": 'GetAccountMiiImageAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, Out<unsigned int, void>, OutBuffer const&, nn::pctl::detail::PairingAccountInfoBase const&', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>, OutRaw<4,4,8>, Buffer<0,6,0>, InRaw<0x10,8,0>'},
     2010: {"inbytes":     8, "outbytes":     4, "name": 'FinishGetAccountMiiImage', "args": 'Out<unsigned int, void>, OutBuffer const&, nn::pctl::detail::AsyncData', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<8,4,0>'},
     2011: {"inbytes":  0x10, "outbytes":   0xC, "name": 'GetAccountMiiImageContentTypeAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::PairingAccountInfoBase const&', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>, OutRaw<4,4,8>, Buffer<0,0xA,0>, InRaw<0x10,8,0>'},
     2012: {"inbytes":     8, "outbytes":     4, "name": 'FinishGetAccountMiiImageContentType', "args": 'Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::AsyncData', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>, InRaw<8,4,0>'},
     2013: {"inbytes":     0, "outbytes":     8, "name": 'SynchronizeParentalControlSettingsAsync', "args": 'Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>', "arginfo": 'OutRaw<8,4,0>, OutHandle<0,1>'},
     2014: {"inbytes":     8, "outbytes":     0, "name": 'FinishSynchronizeParentalControlSettings', "args": 'nn::pctl::detail::AsyncData', "arginfo": 'InRaw<8,4,0>'},
     2015: {"inbytes":     8, "outbytes":     8, "name": 'FinishSynchronizeParentalControlSettingsWithLastUpdated', "args": 'Out<nn::time::PosixTime, void>, nn::pctl::detail::AsyncData', "arginfo": 'OutRaw<8,8,0>, InRaw<8,4,0>'},
  },
  'nn::prepo::detail::ipc::IPrepoService': {
    10100: {"inbytes":     8, "outbytes":     0, "name": 'SaveReport', "pid": True, "args": 'InArray<char> const&, InBuffer const&, unsigned long', "arginfo": 'Buffer<0,9,0>, Buffer<1,5,0>, InRaw<8,8,0>'},
    10101: {"inbytes":  0x18, "outbytes":     0, "name": 'SaveReportWithUser', "pid": True, "args": 'nn::account::Uid const&, InArray<char> const&, InBuffer const&, unsigned long', "arginfo": 'InRaw<0x10,8,0>, Buffer<0,9,0>, Buffer<1,5,0>, InRaw<8,8,0x10>'},
    10200: {"inbytes":     0, "outbytes":     0, "name": 'RequestImmediateTransmission', "args": '', "arginfo": ''},
    10300: {"inbytes":     0, "outbytes":     4, "name": 'GetTransmissionStatus', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
    20100: {"inbytes":     8, "outbytes":     0, "name": 'SaveSystemReport', "args": 'InArray<char> const&, nn::ApplicationId, InBuffer const&', "arginfo": 'Buffer<0,9,0>, InRaw<8,8,0>, Buffer<1,5,0>'},
    20101: {"inbytes":  0x18, "outbytes":     0, "name": 'SaveSystemReportWithUser', "args": 'nn::account::Uid const&, InArray<char> const&, nn::ApplicationId, InBuffer const&', "arginfo": 'InRaw<0x10,8,0>, Buffer<0,9,0>, InRaw<8,8,0x10>, Buffer<1,5,0>'},
    30100: {"inbytes":     0, "outbytes":     0, "name": 'ClearStorage', "args": '', "arginfo": ''},
    40100: {"inbytes":     0, "outbytes":     1, "name": 'IsUserAgreementCheckEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
    40101: {"inbytes":     1, "outbytes":     0, "name": 'SetUserAgreementCheckEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
    90100: {"inbytes":     0, "outbytes":  0x10, "name": 'GetStorageUsage', "args": 'Out<long, void>, Out<long, void>', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>'},
  },
  'nn::settings::IFactorySettingsServer': {
        0: {"inbytes":     0, "outbytes":     6, "name": 'GetBluetoothBdAddress', "args": 'Out<nn::settings::factory::BdAddress, void>', "arginfo": 'OutRaw<6,1,0>'},
        1: {"inbytes":     0, "outbytes":  0x1E, "name": 'GetConfigurationId1', "args": 'Out<nn::settings::factory::ConfigurationId1, void>', "arginfo": 'OutRaw<0x1E,1,0>'},
        2: {"inbytes":     0, "outbytes":     6, "name": 'GetAccelerometerOffset', "args": 'Out<nn::settings::factory::AccelerometerOffset, void>', "arginfo": 'OutRaw<6,2,0>'},
        3: {"inbytes":     0, "outbytes":     6, "name": 'GetAccelerometerScale', "args": 'Out<nn::settings::factory::AccelerometerScale, void>', "arginfo": 'OutRaw<6,2,0>'},
        4: {"inbytes":     0, "outbytes":     6, "name": 'GetGyroscopeOffset', "args": 'Out<nn::settings::factory::GyroscopeOffset, void>', "arginfo": 'OutRaw<6,2,0>'},
        5: {"inbytes":     0, "outbytes":     6, "name": 'GetGyroscopeScale', "args": 'Out<nn::settings::factory::GyroscopeScale, void>', "arginfo": 'OutRaw<6,2,0>'},
        6: {"inbytes":     0, "outbytes":     6, "name": 'GetWirelessLanMacAddress', "args": 'Out<nn::settings::factory::MacAddress, void>', "arginfo": 'OutRaw<6,1,0>'},
        7: {"inbytes":     0, "outbytes":     4, "name": 'GetWirelessLanCountryCodeCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        8: {"inbytes":     0, "outbytes":     4, "name": 'GetWirelessLanCountryCodes', "args": 'Out<int, void>, OutArray<nn::settings::factory::CountryCode> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>'},
        9: {"inbytes":     0, "outbytes":  0x18, "name": 'GetSerialNumber', "args": 'Out<nn::settings::factory::SerialNumber, void>', "arginfo": 'OutRaw<0x18,1,0>'},
       10: {"inbytes":     8, "outbytes":     0, "name": 'SetInitialSystemAppletProgramId', "args": 'nn::ncm::ProgramId', "arginfo": 'InRaw<8,8,0>'},
       11: {"inbytes":     8, "outbytes":     0, "name": 'SetOverlayDispProgramId', "args": 'nn::ncm::ProgramId', "arginfo": 'InRaw<8,8,0>'},
       12: {"inbytes":     0, "outbytes":  0x18, "name": 'GetBatteryLot', "args": 'Out<nn::settings::factory::BatteryLot, void>', "arginfo": 'OutRaw<0x18,1,0>'},
       14: {"inbytes":     0, "outbytes":     0, "name": 'GetEciDeviceCertificate', "args": 'Out<nn::settings::factory::EccB233DeviceCertificate, void>', "arginfo": 'Buffer<0,0x16,0x180>'},
       15: {"inbytes":     0, "outbytes":     0, "name": 'GetEticketDeviceCertificate', "args": 'Out<nn::settings::factory::Rsa2048DeviceCertificate, void>', "arginfo": 'Buffer<0,0x16,0x240>'},
       16: {"inbytes":     0, "outbytes":     0, "name": 'GetSslKey', "args": 'Out<nn::settings::factory::SslKey, void>', "arginfo": 'Buffer<0,0x16,0x134>'},
       17: {"inbytes":     0, "outbytes":     0, "name": 'GetSslCertificate', "args": 'Out<nn::settings::factory::SslCertificate, void>', "arginfo": 'Buffer<0,0x16,0x804>'},
       18: {"inbytes":     0, "outbytes":     0, "name": 'GetGameCardKey', "args": 'Out<nn::settings::factory::GameCardKey, void>', "arginfo": 'Buffer<0,0x16,0x134>'},
       19: {"inbytes":     0, "outbytes":     0, "name": 'GetGameCardCertificate', "args": 'Out<nn::settings::factory::GameCardCertificate, void>', "arginfo": 'Buffer<0,0x16,0x400>'},
       20: {"inbytes":     0, "outbytes":  0x54, "name": 'GetEciDeviceKey', "args": 'Out<nn::settings::factory::EccB233DeviceKey, void>', "arginfo": 'OutRaw<0x54,4,0>'},
       21: {"inbytes":     0, "outbytes":     0, "name": 'GetEticketDeviceKey', "args": 'Out<nn::settings::factory::Rsa2048DeviceKey, void>', "arginfo": 'Buffer<0,0x16,0x244>'},
       22: {"inbytes":     0, "outbytes":  0x5A, "name": 'GetSpeakerParameter', "args": 'Out<nn::settings::factory::SpeakerParameter, void>', "arginfo": 'OutRaw<0x5A,2,0>'},
  },
  'nn::settings::IFirmwareDebugSettingsServer': {
        2: {"inbytes":     0, "outbytes":     0, "name": 'SetSettingsItemValue', "args": 'nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&, InBuffer const&', "arginfo": 'Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>, Buffer<2,5,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'ResetSettingsItemValue', "args": 'nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&', "arginfo": 'Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'CreateSettingsItemKeyIterator', "args": 'Out<SharedPointer<nn::settings::ISettingsItemKeyIterator>, void>, nn::settings::SettingsName const&', "arginfo": 'OutObject<0,0>, Buffer<0,0x19,0x48>'},
  },
  'nn::settings::ISettingsItemKeyIterator': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GoNext', "args": '', "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     8, "name": 'GetKeySize', "args": 'Out<unsigned long, void>', "arginfo": 'OutRaw<8,8,0>'},
        2: {"inbytes":     0, "outbytes":     8, "name": 'GetKey', "args": 'Out<unsigned long, void>, OutBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>'},
  },
  'nn::settings::ISettingsServer': {
        0: {"inbytes":     0, "outbytes":     8, "name": 'GetLanguageCode', "args": 'Out<nn::settings::LanguageCode, void>', "arginfo": 'OutRaw<8,1,0>'},
        1: {"inbytes":     0, "outbytes":     4, "name": 'GetAvailableLanguageCodes', "args": 'Out<int, void>, OutArray<nn::settings::LanguageCode> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>'},
        3: {"inbytes":     0, "outbytes":     4, "name": 'GetAvailableLanguageCodeCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":     4, "name": 'GetRegionCode', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
  },
  'nn::settings::ISystemSettingsServer': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'SetLanguageCode', "args": 'nn::settings::LanguageCode', "arginfo": 'InRaw<8,1,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'SetNetworkSettings', "args": 'InArray<nn::settings::system::NetworkSettings> const&', "arginfo": 'Buffer<0,5,0>'},
        2: {"inbytes":     0, "outbytes":     4, "name": 'GetNetworkSettings', "args": 'Out<int, void>, OutArray<nn::settings::system::NetworkSettings> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetFirmwareVersion', "args": 'Out<nn::settings::system::FirmwareVersion, void>', "arginfo": 'Buffer<0,0x1A,0x100>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'GetFirmwareVersion2', "args": 'Out<nn::settings::system::FirmwareVersion, void>', "arginfo": 'Buffer<0,0x1A,0x100>'},
        7: {"inbytes":     0, "outbytes":     1, "name": 'GetLockScreenFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
        8: {"inbytes":     1, "outbytes":     0, "name": 'SetLockScreenFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
        9: {"inbytes":     0, "outbytes":  0x28, "name": 'GetBacklightSettings', "args": 'Out<nn::settings::system::BacklightSettings, void>', "arginfo": 'OutRaw<0x28,4,0>'},
       10: {"inbytes":  0x28, "outbytes":     0, "name": 'SetBacklightSettings', "args": 'nn::settings::system::BacklightSettings const&', "arginfo": 'InRaw<0x28,4,0>'},
       11: {"inbytes":     0, "outbytes":     0, "name": 'SetBluetoothDevicesSettings', "args": 'InArray<nn::settings::system::BluetoothDevicesSettings> const&', "arginfo": 'Buffer<0,5,0>'},
       12: {"inbytes":     0, "outbytes":     4, "name": 'GetBluetoothDevicesSettings', "args": 'Out<int, void>, OutArray<nn::settings::system::BluetoothDevicesSettings> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       13: {"inbytes":     0, "outbytes":  0x10, "name": 'GetExternalSteadyClockSourceId', "args": 'Out<nn::util::Uuid, void>', "arginfo": 'OutRaw<0x10,1,0>'},
       14: {"inbytes":  0x10, "outbytes":     0, "name": 'SetExternalSteadyClockSourceId', "args": 'nn::util::Uuid const&', "arginfo": 'InRaw<0x10,1,0>'},
       15: {"inbytes":     0, "outbytes":  0x20, "name": 'GetUserSystemClockContext', "args": 'Out<nn::time::SystemClockContext, void>', "arginfo": 'OutRaw<0x20,8,0>'},
       16: {"inbytes":  0x20, "outbytes":     0, "name": 'SetUserSystemClockContext', "args": 'nn::time::SystemClockContext const&', "arginfo": 'InRaw<0x20,8,0>'},
       17: {"inbytes":     0, "outbytes":     4, "name": 'GetAccountSettings', "args": 'Out<nn::settings::system::AccountSettings, void>', "arginfo": 'OutRaw<4,4,0>'},
       18: {"inbytes":     4, "outbytes":     0, "name": 'SetAccountSettings', "args": 'nn::settings::system::AccountSettings', "arginfo": 'InRaw<4,4,0>'},
       19: {"inbytes":     4, "outbytes":     8, "name": 'GetAudioVolume', "args": 'Out<nn::settings::system::AudioVolume, void>, int', "arginfo": 'OutRaw<8,4,0>, InRaw<4,4,0>'},
       20: {"inbytes":   0xC, "outbytes":     0, "name": 'SetAudioVolume', "args": 'nn::settings::system::AudioVolume, int', "arginfo": 'InRaw<8,4,0>, InRaw<4,4,8>'},
       21: {"inbytes":     0, "outbytes":     4, "name": 'GetEulaVersions', "args": 'Out<int, void>, OutArray<nn::settings::system::EulaVersion> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       22: {"inbytes":     0, "outbytes":     0, "name": 'SetEulaVersions', "args": 'InArray<nn::settings::system::EulaVersion> const&', "arginfo": 'Buffer<0,5,0>'},
       23: {"inbytes":     0, "outbytes":     4, "name": 'GetColorSetId', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
       24: {"inbytes":     4, "outbytes":     0, "name": 'SetColorSetId', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       25: {"inbytes":     0, "outbytes":     1, "name": 'GetConsoleInformationUploadFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       26: {"inbytes":     1, "outbytes":     0, "name": 'SetConsoleInformationUploadFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       27: {"inbytes":     0, "outbytes":     1, "name": 'GetAutomaticApplicationDownloadFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       28: {"inbytes":     1, "outbytes":     0, "name": 'SetAutomaticApplicationDownloadFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       29: {"inbytes":     0, "outbytes":  0x18, "name": 'GetNotificationSettings', "args": 'Out<nn::settings::system::NotificationSettings, void>', "arginfo": 'OutRaw<0x18,4,0>'},
       30: {"inbytes":  0x18, "outbytes":     0, "name": 'SetNotificationSettings', "args": 'nn::settings::system::NotificationSettings const&', "arginfo": 'InRaw<0x18,4,0>'},
       31: {"inbytes":     0, "outbytes":     4, "name": 'GetAccountNotificationSettings', "args": 'Out<int, void>, OutArray<nn::settings::system::AccountNotificationSettings> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       32: {"inbytes":     0, "outbytes":     0, "name": 'SetAccountNotificationSettings', "args": 'InArray<nn::settings::system::AccountNotificationSettings> const&', "arginfo": 'Buffer<0,5,0>'},
       35: {"inbytes":     0, "outbytes":     4, "name": 'GetVibrationMasterVolume', "args": 'Out<float, void>', "arginfo": 'OutRaw<4,4,0>'},
       36: {"inbytes":     4, "outbytes":     0, "name": 'SetVibrationMasterVolume', "args": 'float', "arginfo": 'InRaw<4,4,0>'},
       37: {"inbytes":     0, "outbytes":     8, "name": 'GetSettingsItemValueSize', "args": 'Out<unsigned long, void>, nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>'},
       38: {"inbytes":     0, "outbytes":     8, "name": 'GetSettingsItemValue', "args": 'Out<unsigned long, void>, OutBuffer const&, nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&', "arginfo": 'OutRaw<8,8,0>, Buffer<2,6,0>, Buffer<0,0x19,0x48>, Buffer<1,0x19,0x48>'},
       39: {"inbytes":     0, "outbytes":  0x20, "name": 'GetTvSettings', "args": 'Out<nn::settings::system::TvSettings, void>', "arginfo": 'OutRaw<0x20,4,0>'},
       40: {"inbytes":  0x20, "outbytes":     0, "name": 'SetTvSettings', "args": 'nn::settings::system::TvSettings const&', "arginfo": 'InRaw<0x20,4,0>'},
       41: {"inbytes":     0, "outbytes":     0, "name": 'GetEdid', "args": 'Out<nn::settings::system::Edid, void>', "arginfo": 'Buffer<0,0x1A,0x100>'},
       42: {"inbytes":     0, "outbytes":     0, "name": 'SetEdid', "args": 'nn::settings::system::Edid const&', "arginfo": 'Buffer<0,0x19,0x100>'},
       43: {"inbytes":     4, "outbytes":     4, "name": 'GetAudioOutputMode', "args": 'Out<int, void>, int', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
       44: {"inbytes":     8, "outbytes":     0, "name": 'SetAudioOutputMode', "args": 'int, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
       45: {"inbytes":     0, "outbytes":     1, "name": 'IsForceMuteOnHeadphoneRemoved', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       46: {"inbytes":     1, "outbytes":     0, "name": 'SetForceMuteOnHeadphoneRemoved', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       47: {"inbytes":     0, "outbytes":     1, "name": 'GetQuestFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       48: {"inbytes":     1, "outbytes":     0, "name": 'SetQuestFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       49: {"inbytes":     0, "outbytes":     8, "name": 'GetDataDeletionSettings', "args": 'Out<nn::settings::system::DataDeletionSettings, void>', "arginfo": 'OutRaw<8,4,0>'},
       50: {"inbytes":     8, "outbytes":     0, "name": 'SetDataDeletionSettings', "args": 'nn::settings::system::DataDeletionSettings', "arginfo": 'InRaw<8,4,0>'},
       51: {"inbytes":     0, "outbytes":     8, "name": 'GetInitialSystemAppletProgramId', "args": 'Out<nn::ncm::ProgramId, void>', "arginfo": 'OutRaw<8,8,0>'},
       52: {"inbytes":     0, "outbytes":     8, "name": 'GetOverlayDispProgramId', "args": 'Out<nn::ncm::ProgramId, void>', "arginfo": 'OutRaw<8,8,0>'},
       53: {"inbytes":     0, "outbytes":  0x24, "name": 'GetDeviceTimeZoneLocationName', "args": 'Out<nn::time::LocationName, void>', "arginfo": 'OutRaw<0x24,1,0>'},
       54: {"inbytes":  0x24, "outbytes":     0, "name": 'SetDeviceTimeZoneLocationName', "args": 'nn::time::LocationName const&', "arginfo": 'InRaw<0x24,1,0>'},
       55: {"inbytes":     0, "outbytes":     8, "name": 'GetWirelessCertificationFileSize', "args": 'Out<unsigned long, void>', "arginfo": 'OutRaw<8,8,0>'},
       56: {"inbytes":     0, "outbytes":     8, "name": 'GetWirelessCertificationFile', "args": 'Out<unsigned long, void>, OutBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>'},
       57: {"inbytes":     4, "outbytes":     0, "name": 'SetRegionCode', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       58: {"inbytes":     0, "outbytes":  0x20, "name": 'GetNetworkSystemClockContext', "args": 'Out<nn::time::SystemClockContext, void>', "arginfo": 'OutRaw<0x20,8,0>'},
       59: {"inbytes":  0x20, "outbytes":     0, "name": 'SetNetworkSystemClockContext', "args": 'nn::time::SystemClockContext const&', "arginfo": 'InRaw<0x20,8,0>'},
       60: {"inbytes":     0, "outbytes":     1, "name": 'IsUserSystemClockAutomaticCorrectionEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       61: {"inbytes":     1, "outbytes":     0, "name": 'SetUserSystemClockAutomaticCorrectionEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       62: {"inbytes":     0, "outbytes":     1, "name": 'GetDebugModeFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       63: {"inbytes":     0, "outbytes":     4, "name": 'GetPrimaryAlbumStorage', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
       64: {"inbytes":     4, "outbytes":     0, "name": 'SetPrimaryAlbumStorage', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       65: {"inbytes":     0, "outbytes":     1, "name": 'GetUsb30EnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       66: {"inbytes":     1, "outbytes":     0, "name": 'SetUsb30EnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       67: {"inbytes":     0, "outbytes":  0x18, "name": 'GetBatteryLot', "args": 'Out<nn::settings::system::BatteryLot, void>', "arginfo": 'OutRaw<0x18,1,0>'},
       68: {"inbytes":     0, "outbytes":  0x18, "name": 'GetSerialNumber', "args": 'Out<nn::settings::system::SerialNumber, void>', "arginfo": 'OutRaw<0x18,1,0>'},
       69: {"inbytes":     0, "outbytes":     1, "name": 'GetNfcEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       70: {"inbytes":     1, "outbytes":     0, "name": 'SetNfcEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       71: {"inbytes":     0, "outbytes":   0xC, "name": 'GetSleepSettings', "args": 'Out<nn::settings::system::SleepSettings, void>', "arginfo": 'OutRaw<0xC,4,0>'},
       72: {"inbytes":   0xC, "outbytes":     0, "name": 'SetSleepSettings', "args": 'nn::settings::system::SleepSettings const&', "arginfo": 'InRaw<0xC,4,0>'},
       73: {"inbytes":     0, "outbytes":     1, "name": 'GetWirelessLanEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       74: {"inbytes":     1, "outbytes":     0, "name": 'SetWirelessLanEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       75: {"inbytes":     0, "outbytes":  0x20, "name": 'GetInitialLaunchSettings', "args": 'Out<nn::settings::system::InitialLaunchSettings, void>', "arginfo": 'OutRaw<0x20,8,0>'},
       76: {"inbytes":  0x20, "outbytes":     0, "name": 'SetInitialLaunchSettings', "args": 'nn::settings::system::InitialLaunchSettings const&', "arginfo": 'InRaw<0x20,8,0>'},
       77: {"inbytes":     0, "outbytes":     0, "name": 'GetDeviceNickName', "args": 'Out<nn::settings::system::DeviceNickName, void>', "arginfo": 'Buffer<0,0x16,0x80>'},
       78: {"inbytes":     0, "outbytes":     0, "name": 'SetDeviceNickName', "args": 'nn::settings::system::DeviceNickName const&', "arginfo": 'Buffer<0,0x15,0x80>'},
       79: {"inbytes":     0, "outbytes":     4, "name": 'GetProductModel', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
       80: {"inbytes":     0, "outbytes":     4, "name": 'GetLdnChannel', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
       81: {"inbytes":     4, "outbytes":     0, "name": 'SetLdnChannel', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       82: {"inbytes":     0, "outbytes":     0, "name": 'AcquireTelemetryDirtyFlagEventHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       83: {"inbytes":     0, "outbytes":  0x10, "name": 'GetTelemetryDirtyFlags', "args": 'Out<nn::util::BitFlagSet<128, nn::settings::system::TelemetryDirtyFlag>, void>', "arginfo": 'OutRaw<0x10,8,0>'},
       84: {"inbytes":     0, "outbytes":  0x18, "name": 'GetPtmBatteryLot', "args": 'Out<nn::settings::factory::BatteryLot, void>', "arginfo": 'OutRaw<0x18,1,0>'},
       85: {"inbytes":  0x18, "outbytes":     0, "name": 'SetPtmBatteryLot', "args": 'nn::settings::factory::BatteryLot const&', "arginfo": 'InRaw<0x18,1,0>'},
       86: {"inbytes":     0, "outbytes":  0x18, "name": 'GetPtmFuelGaugeParameter', "args": 'Out<nn::settings::system::PtmFuelGaugeParameter, void>', "arginfo": 'OutRaw<0x18,4,0>'},
       87: {"inbytes":  0x18, "outbytes":     0, "name": 'SetPtmFuelGaugeParameter', "args": 'nn::settings::system::PtmFuelGaugeParameter const&', "arginfo": 'InRaw<0x18,4,0>'},
       88: {"inbytes":     0, "outbytes":     1, "name": 'GetBluetoothEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       89: {"inbytes":     1, "outbytes":     0, "name": 'SetBluetoothEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       90: {"inbytes":     0, "outbytes":  0x10, "name": 'GetMiiAuthorId', "args": 'Out<nn::util::Uuid, void>', "arginfo": 'OutRaw<0x10,1,0>'},
       91: {"inbytes":     8, "outbytes":     0, "name": 'SetShutdownRtcValue', "args": 'long', "arginfo": 'InRaw<8,8,0>'},
       92: {"inbytes":     0, "outbytes":     8, "name": 'GetShutdownRtcValue', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
       93: {"inbytes":     0, "outbytes":     0, "name": 'AcquireFatalDirtyFlagEventHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       94: {"inbytes":     0, "outbytes":  0x10, "name": 'GetFatalDirtyFlags', "args": 'Out<nn::util::BitFlagSet<128, nn::settings::system::FatalDirtyFlag>, void>', "arginfo": 'OutRaw<0x10,8,0>'},
       95: {"inbytes":     0, "outbytes":     1, "name": 'GetAutoUpdateEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       96: {"inbytes":     1, "outbytes":     0, "name": 'SetAutoUpdateEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
       97: {"inbytes":     0, "outbytes":     4, "name": 'GetNxControllerSettings', "args": 'Out<int, void>, OutArray<nn::settings::system::NxControllerSettings> const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       98: {"inbytes":     0, "outbytes":     0, "name": 'SetNxControllerSettings', "args": 'InArray<nn::settings::system::NxControllerSettings> const&', "arginfo": 'Buffer<0,5,0>'},
       99: {"inbytes":     0, "outbytes":     1, "name": 'GetBatteryPercentageFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      100: {"inbytes":     1, "outbytes":     0, "name": 'SetBatteryPercentageFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      101: {"inbytes":     0, "outbytes":     1, "name": 'GetExternalRtcResetFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      102: {"inbytes":     1, "outbytes":     0, "name": 'SetExternalRtcResetFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      103: {"inbytes":     0, "outbytes":     1, "name": 'GetUsbFullKeyEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      104: {"inbytes":     1, "outbytes":     0, "name": 'SetUsbFullKeyEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      105: {"inbytes":     8, "outbytes":     0, "name": 'SetExternalSteadyClockInternalOffset', "args": 'long', "arginfo": 'InRaw<8,8,0>'},
      106: {"inbytes":     0, "outbytes":     8, "name": 'GetExternalSteadyClockInternalOffset', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
      107: {"inbytes":     0, "outbytes":  0x2C, "name": 'GetBacklightSettingsEx', "args": 'Out<nn::settings::system::BacklightSettingsEx, void>', "arginfo": 'OutRaw<0x2C,4,0>'},
      108: {"inbytes":  0x2C, "outbytes":     0, "name": 'SetBacklightSettingsEx', "args": 'nn::settings::system::BacklightSettingsEx const&', "arginfo": 'InRaw<0x2C,4,0>'},
      109: {"inbytes":     0, "outbytes":     4, "name": 'GetHeadphoneVolumeWarningCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
      110: {"inbytes":     4, "outbytes":     0, "name": 'SetHeadphoneVolumeWarningCount', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
      111: {"inbytes":     0, "outbytes":     1, "name": 'GetBluetoothAfhEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      112: {"inbytes":     1, "outbytes":     0, "name": 'SetBluetoothAfhEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      113: {"inbytes":     0, "outbytes":     1, "name": 'GetBluetoothBoostEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      114: {"inbytes":     1, "outbytes":     0, "name": 'SetBluetoothBoostEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      115: {"inbytes":     0, "outbytes":     1, "name": 'GetInRepairProcessEnableFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      116: {"inbytes":     1, "outbytes":     0, "name": 'SetInRepairProcessEnableFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      117: {"inbytes":     0, "outbytes":     1, "name": 'GetHeadphoneVolumeUpdateFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      118: {"inbytes":     1, "outbytes":     0, "name": 'SetHeadphoneVolumeUpdateFlag', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      119: {"inbytes":     1, "outbytes":     3, "name": 'NeedsToUpdateHeadphoneVolume', "args": 'Out<bool, void>, Out<bool, void>, Out<signed char, void>, bool', "arginfo": 'OutRaw<1,1,0>, OutRaw<1,1,1>, OutRaw<1,1,2>, InRaw<1,1,0>'},
      120: {"inbytes":     0, "outbytes":     4, "name": 'GetPushNotificationActivityModeOnSleep', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
      121: {"inbytes":     4, "outbytes":     0, "name": 'SetPushNotificationActivityModeOnSleep', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::ssl::sf::ISslService': {
        0: {"inbytes":  0x10, "outbytes":     0, "name": 'CreateContext', "pid": True, "args": 'Out<SharedPointer<nn::ssl::sf::ISslContext>, void>, nn::ssl::sf::SslVersion, unsigned long', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>, InRaw<8,8,8>'},
        1: {"inbytes":     0, "outbytes":     4, "name": 'GetContextCount', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     4, "name": 'GetCertificates', "args": 'OutBuffer const&, Out<unsigned int, void>, InBuffer const&', "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, Buffer<1,5,0>'},
        3: {"inbytes":     0, "outbytes":     4, "name": 'GetCertificateBufSize', "args": 'Out<unsigned int, void>, InBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,5,0>'},
        4: {"inbytes":     8, "outbytes":     0, "name": 'DebugIoctl', "args": 'OutBuffer const&, InBuffer const&, unsigned long', "arginfo": 'Buffer<0,6,0>, Buffer<1,5,0>, InRaw<8,8,0>'},
        5: {"inbytes":     4, "outbytes":     0, "name": 'SetInterfaceVersion', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::ssl::sf::ISslContext': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'SetOption', "args": 'nn::ssl::sf::ContextOption, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
        1: {"inbytes":     4, "outbytes":     4, "name": 'GetOption', "args": 'Out<int, void>, nn::ssl::sf::ContextOption', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'CreateConnection', "args": 'Out<SharedPointer<nn::ssl::sf::ISslConnection>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     4, "name": 'GetConnectionCount', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
        4: {"inbytes":     4, "outbytes":     8, "name": 'ImportServerPki', "args": 'Out<unsigned long, void>, InBuffer const&, nn::ssl::sf::CertificateFormat', "arginfo": 'OutRaw<8,8,0>, Buffer<0,5,0>, InRaw<4,4,0>'},
        5: {"inbytes":     0, "outbytes":     8, "name": 'ImportClientPki', "args": 'Out<unsigned long, void>, InBuffer const&, InBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,5,0>, Buffer<1,5,0>'},
        6: {"inbytes":     8, "outbytes":     0, "name": 'RemoveServerPki', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
        7: {"inbytes":     8, "outbytes":     0, "name": 'RemoveClientPki', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
        8: {"inbytes":     4, "outbytes":     8, "name": 'RegisterInternalPki', "args": 'Out<unsigned long, void>, nn::ssl::sf::InternalPki', "arginfo": 'OutRaw<8,8,0>, InRaw<4,4,0>'},
        9: {"inbytes":     0, "outbytes":     0, "name": 'AddPolicyOid', "args": 'InBuffer const&', "arginfo": 'Buffer<0,5,0>'},
       10: {"inbytes":     0, "outbytes":     8, "name": 'ImportCrl', "args": 'Out<unsigned long, void>, InBuffer const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,5,0>'},
       11: {"inbytes":     8, "outbytes":     0, "name": 'RemoveCrl', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::ssl::sf::ISslConnection': {
        0: {"inbytes":     4, "outbytes":     4, "name": 'SetSocketDescriptor', "args": 'int, Out<int, void>', "arginfo": 'InRaw<4,4,0>, OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'SetHostName', "args": 'InBuffer const&', "arginfo": 'Buffer<0,5,0>'},
        2: {"inbytes":     4, "outbytes":     0, "name": 'SetVerifyOption', "args": 'nn::ssl::sf::VerifyOption', "arginfo": 'InRaw<4,4,0>'},
        3: {"inbytes":     4, "outbytes":     0, "name": 'SetIoMode', "args": 'nn::ssl::sf::IoMode', "arginfo": 'InRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":     4, "name": 'GetSocketDescriptor', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        5: {"inbytes":     0, "outbytes":     4, "name": 'GetHostName', "args": 'OutBuffer const&, Out<unsigned int, void>', "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
        6: {"inbytes":     0, "outbytes":     4, "name": 'GetVerifyOption', "args": 'Out<nn::ssl::sf::VerifyOption, void>', "arginfo": 'OutRaw<4,4,0>'},
        7: {"inbytes":     0, "outbytes":     4, "name": 'GetIoMode', "args": 'Out<nn::ssl::sf::IoMode, void>', "arginfo": 'OutRaw<4,4,0>'},
        8: {"inbytes":     0, "outbytes":     0, "name": 'DoHandshake', "args": '', "arginfo": ''},
        9: {"inbytes":     0, "outbytes":     8, "name": 'DoHandshakeGetServerCert', "args": 'Out<unsigned int, void>, Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, Buffer<0,6,0>'},
       10: {"inbytes":     0, "outbytes":     4, "name": 'Read', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       11: {"inbytes":     0, "outbytes":     4, "name": 'Write', "args": 'Out<unsigned int, void>, InBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,5,0>'},
       12: {"inbytes":     0, "outbytes":     4, "name": 'Pending', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
       13: {"inbytes":     0, "outbytes":     4, "name": 'Peek', "args": 'Out<unsigned int, void>, OutBuffer const&', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>'},
       14: {"inbytes":     8, "outbytes":     4, "name": 'Poll', "args": 'Out<nn::ssl::sf::PollEvent, void>, nn::ssl::sf::PollEvent, unsigned int', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
       15: {"inbytes":     0, "outbytes":     0, "name": 'GetVerifyCertError', "args": '', "arginfo": ''},
       16: {"inbytes":     0, "outbytes":     4, "name": 'GetNeededServerCertBufferSize', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
       17: {"inbytes":     4, "outbytes":     0, "name": 'SetSessionCacheMode', "args": 'nn::ssl::sf::SessionCacheMode', "arginfo": 'InRaw<4,4,0>'},
       18: {"inbytes":     0, "outbytes":     4, "name": 'GetSessionCacheMode', "args": 'Out<nn::ssl::sf::SessionCacheMode, void>', "arginfo": 'OutRaw<4,4,0>'},
       19: {"inbytes":     0, "outbytes":     0, "name": 'FlushSessionCache', "args": '', "arginfo": ''},
       20: {"inbytes":     4, "outbytes":     0, "name": 'SetRenegotiationMode', "args": 'nn::ssl::sf::RenegotiationMode', "arginfo": 'InRaw<4,4,0>'},
       21: {"inbytes":     0, "outbytes":     4, "name": 'GetRenegotiationMode', "args": 'Out<nn::ssl::sf::RenegotiationMode, void>', "arginfo": 'OutRaw<4,4,0>'},
       22: {"inbytes":     8, "outbytes":     0, "name": 'SetOption', "args": 'nn::ssl::sf::OptionType, bool', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
       23: {"inbytes":     4, "outbytes":     1, "name": 'GetOption', "args": 'Out<bool, void>, nn::ssl::sf::OptionType', "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
       24: {"inbytes":     0, "outbytes":     8, "name": 'GetVerifyCertErrors', "args": 'OutBuffer const&, Out<unsigned int, void>, Out<unsigned int, void>', "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, OutRaw<4,4,4>'},
  },
  'nn::timesrv::detail::service::IStaticService': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetStandardUserSystemClock', "args": 'Out<SharedPointer<nn::timesrv::detail::service::ISystemClock>, void>', "arginfo": 'OutObject<0,0>'},
        1: {"inbytes":     0, "outbytes":     0, "name": 'GetStandardNetworkSystemClock', "args": 'Out<SharedPointer<nn::timesrv::detail::service::ISystemClock>, void>', "arginfo": 'OutObject<0,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'GetStandardSteadyClock', "args": 'Out<SharedPointer<nn::timesrv::detail::service::ISteadyClock>, void>', "arginfo": 'OutObject<0,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'GetTimeZoneService', "args": 'Out<SharedPointer<nn::timesrv::detail::service::ITimeZoneService>, void>', "arginfo": 'OutObject<0,0>'},
        4: {"inbytes":     0, "outbytes":     0, "name": 'GetStandardLocalSystemClock', "args": 'Out<SharedPointer<nn::timesrv::detail::service::ISystemClock>, void>', "arginfo": 'OutObject<0,0>'},
      100: {"inbytes":     0, "outbytes":     1, "name": 'IsStandardUserSystemClockAutomaticCorrectionEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      101: {"inbytes":     1, "outbytes":     0, "name": 'SetStandardUserSystemClockAutomaticCorrectionEnabled', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      200: {"inbytes":     0, "outbytes":     1, "name": 'IsStandardNetworkSystemClockAccuracySufficient', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
  },
  'nn::timesrv::detail::service::ISystemClock': {
        0: {"inbytes":     0, "outbytes":     8, "name": 'GetCurrentTime', "args": 'Out<nn::time::PosixTime, void>', "arginfo": 'OutRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "name": 'SetCurrentTime', "args": 'nn::time::PosixTime', "arginfo": 'InRaw<8,8,0>'},
        2: {"inbytes":     0, "outbytes":  0x20, "name": 'GetSystemClockContext', "args": 'Out<nn::time::SystemClockContext, void>', "arginfo": 'OutRaw<0x20,8,0>'},
        3: {"inbytes":  0x20, "outbytes":     0, "name": 'SetSystemClockContext', "args": 'nn::time::SystemClockContext const&', "arginfo": 'InRaw<0x20,8,0>'},
  },
  'nn::timesrv::detail::service::ISteadyClock': {
        0: {"inbytes":     0, "outbytes":  0x18, "name": 'GetCurrentTimePoint', "args": 'Out<nn::time::SteadyClockTimePoint, void>', "arginfo": 'OutRaw<0x18,8,0>'},
        2: {"inbytes":     0, "outbytes":     8, "name": 'GetTestOffset', "args": 'Out<nn::TimeSpanType, void>', "arginfo": 'OutRaw<8,8,0>'},
        3: {"inbytes":     8, "outbytes":     0, "name": 'SetTestOffset', "args": 'nn::TimeSpanType', "arginfo": 'InRaw<8,8,0>'},
      100: {"inbytes":     0, "outbytes":     8, "name": 'GetRtcValue', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
      101: {"inbytes":     0, "outbytes":     1, "name": 'IsRtcResetDetected', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      102: {"inbytes":     0, "outbytes":     4, "name": 'GetSetupResutltValue', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
      200: {"inbytes":     0, "outbytes":     8, "name": 'GetInternalOffset', "args": 'Out<nn::TimeSpanType, void>', "arginfo": 'OutRaw<8,8,0>'},
      201: {"inbytes":     8, "outbytes":     0, "name": 'SetInternalOffset', "args": 'nn::TimeSpanType', "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::timesrv::detail::service::ITimeZoneService': {
        0: {"inbytes":     0, "outbytes":  0x24, "name": 'GetDeviceLocationName', "args": 'Out<nn::time::LocationName, void>', "arginfo": 'OutRaw<0x24,1,0>'},
        1: {"inbytes":  0x24, "outbytes":     0, "name": 'SetDeviceLocationName', "args": 'nn::time::LocationName const&', "arginfo": 'InRaw<0x24,1,0>'},
        2: {"inbytes":     0, "outbytes":     4, "name": 'GetTotalLocationNameCount', "args": 'Out<int, void>', "arginfo": 'OutRaw<4,4,0>'},
        3: {"inbytes":     4, "outbytes":     4, "name": 'LoadLocationNameList', "args": 'Out<int, void>, OutArray<nn::time::LocationName> const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
        4: {"inbytes":  0x24, "outbytes":     0, "name": 'LoadTimeZoneRule', "args": 'Out<nn::time::TimeZoneRule, void>, nn::time::LocationName const&', "arginfo": 'Buffer<0,0x16,0x4000>, InRaw<0x24,1,0>'},
        5: {"inbytes":     0, "outbytes":  0x10, "name": 'GetTimeZoneRuleVersion', "args": 'Out<nn::time::TimeZoneRuleVersion, void>', "arginfo": 'OutRaw<0x10,1,0>'},
      100: {"inbytes":     8, "outbytes":  0x20, "name": 'ToCalendarTime', "args": 'Out<nn::time::CalendarTime, void>, Out<nn::time::sf::CalendarAdditionalInfo, void>, nn::time::PosixTime, nn::time::TimeZoneRule const&', "arginfo": 'OutRaw<8,2,0>, OutRaw<0x18,4,8>, InRaw<8,8,0>, Buffer<0,0x15,0x4000>'},
      101: {"inbytes":     8, "outbytes":  0x20, "name": 'ToCalendarTimeWithMyRule', "args": 'Out<nn::time::CalendarTime, void>, Out<nn::time::sf::CalendarAdditionalInfo, void>, nn::time::PosixTime', "arginfo": 'OutRaw<8,2,0>, OutRaw<0x18,4,8>, InRaw<8,8,0>'},
      201: {"inbytes":     8, "outbytes":     4, "name": 'ToPosixTime', "args": 'Out<int, void>, OutArray<nn::time::PosixTime> const&, nn::time::CalendarTime, nn::time::TimeZoneRule const&', "arginfo": 'OutRaw<4,4,0>, Buffer<1,0xA,0>, InRaw<8,2,0>, Buffer<0,0x15,0x4000>'},
      202: {"inbytes":     8, "outbytes":     4, "name": 'ToPosixTimeWithMyRule', "args": 'Out<int, void>, OutArray<nn::time::PosixTime> const&, nn::time::CalendarTime', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>, InRaw<8,2,0>'},
  },
  'nn::ntc::detail::service::IStaticService': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
      100: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      101: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nn::ntc::detail::service::IEnsureNetworkClockAvailabilityService': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        4: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
        5: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
  },
  'nn::aocsrv::detail::IAddOnContentManager': {
        0: {"inbytes":     8, "outbytes":     4, "name": 'CountAddOnContentByApplicationId', "args": 'Out<int, void>, nn::ncm::ApplicationId', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
        1: {"inbytes":  0x10, "outbytes":     4, "name": 'ListAddOnContentByApplicationId', "args": 'Out<int, void>, OutArray<int> const&, int, int, nn::ncm::ApplicationId', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<8,8,8>'},
        2: {"inbytes":     8, "outbytes":     4, "name": 'CountAddOnContent', "pid": True, "args": 'Out<int, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
        3: {"inbytes":  0x10, "outbytes":     4, "name": 'ListAddOnContent', "pid": True, "args": 'Out<int, void>, OutArray<int> const&, unsigned long, int, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
        4: {"inbytes":     8, "outbytes":     8, "name": 'GetAddOnContentBaseIdByApplicationId', "args": 'Out<unsigned long, void>, nn::ncm::ApplicationId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
        5: {"inbytes":     8, "outbytes":     8, "name": 'GetAddOnContentBaseId', "pid": True, "args": 'Out<unsigned long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
        6: {"inbytes":  0x10, "outbytes":     0, "name": 'PrepareAddOnContentByApplicationId', "args": 'int, nn::ncm::ApplicationId', "arginfo": 'InRaw<4,4,0>, InRaw<8,8,8>'},
        7: {"inbytes":  0x10, "outbytes":     0, "name": 'PrepareAddOnContent', "pid": True, "args": 'int, unsigned long', "arginfo": 'InRaw<4,4,0>, InRaw<8,8,8>'},
  },
  'nn::audio::detail::IAudioDebugManager': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'InHandle<0,1>, InRaw<8,8,8>, InRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nn::audio::detail::IAudioInManager': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
        1: {"inbytes":  0x10, "outbytes":  0x10, "pid": True, "arginfo": 'OutObject<0,0>, Buffer<0,5,0>, InRaw<8,4,0>, InHandle<0,1>, OutRaw<0x10,4,0>, Buffer<1,6,0>, InRaw<8,8,8>'},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>'},
        3: {"inbytes":  0x10, "outbytes":  0x10, "pid": True, "arginfo": 'OutObject<0,0>, Buffer<0,0x21,0>, InRaw<8,4,0>, InHandle<0,1>, OutRaw<0x10,4,0>, Buffer<1,0x22,0>, InRaw<8,8,8>'},
        4: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>'},
  },
  'nn::audio::detail::IAudioIn': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<8,8,0>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        5: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
        6: {"inbytes":     8, "outbytes":     1, "arginfo": 'InRaw<8,8,0>, OutRaw<1,1,0>'},
        7: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<8,8,0>, InHandle<0,1>'},
        8: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>, InRaw<8,8,0>'},
        9: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>'},
       10: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>, InRaw<8,8,0>, InHandle<0,1>'},
  },
  'nn::audio::detail::IAudioInManagerForApplet': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        1: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        2: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
        3: {"inbytes":  0x18, "outbytes":     0, "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<8,8,0x10>'},
  },
  'nn::audio::detail::IAudioInManagerForDebugger': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::audio::detail::IAudioOutManager': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
        1: {"inbytes":  0x10, "outbytes":  0x10, "pid": True, "arginfo": 'OutObject<0,0>, Buffer<0,5,0>, InRaw<8,4,0>, InHandle<0,1>, OutRaw<0x10,4,0>, Buffer<1,6,0>, InRaw<8,8,8>'},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>'},
        3: {"inbytes":  0x10, "outbytes":  0x10, "pid": True, "arginfo": 'OutObject<0,0>, Buffer<0,0x21,0>, InRaw<8,4,0>, InHandle<0,1>, OutRaw<0x10,4,0>, Buffer<1,0x22,0>, InRaw<8,8,8>'},
  },
  'nn::audio::detail::IAudioOut': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<8,8,0>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        5: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
        6: {"inbytes":     8, "outbytes":     1, "arginfo": 'InRaw<8,8,0>, OutRaw<1,1,0>'},
        7: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>, InRaw<8,8,0>'},
        8: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>'},
  },
  'nn::audio::detail::IAudioOutManagerForApplet': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        1: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        2: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
        3: {"inbytes":  0x18, "outbytes":     0, "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<8,8,0x10>'},
  },
  'nn::audio::detail::IAudioOutManagerForDebugger': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::audio::detail::IAudioRendererManager': {
        0: {"inbytes":  0x48, "outbytes":     0, "pid": True, "arginfo": 'OutObject<0,0>, InRaw<0x34,4,0>, InHandle<0,1>, InHandle<1,1>, InRaw<8,8,0x38>, InRaw<8,8,0x40>'},
        1: {"inbytes":  0x34, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>, InRaw<0x34,4,0>'},
        2: {"inbytes":     8, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
        3: {"inbytes":  0x50, "outbytes":     0, "pid": True, "arginfo": 'OutObject<0,0>, InRaw<0x34,4,0>, InRaw<8,8,0x38>, InHandle<0,1>, InRaw<8,8,0x40>, InRaw<8,8,0x48>'},
  },
  'nn::audio::detail::IAudioRenderer': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, Buffer<1,6,0>, Buffer<2,5,0>'},
        5: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        6: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        7: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        8: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        9: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
       10: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x22,0>, Buffer<1,0x22,0>, Buffer<2,0x21,0>'},
       11: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nn::audio::detail::IAudioDevice': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,5,0>, OutRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,6,0>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        5: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        6: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>'},
        7: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>, InRaw<4,4,0>'},
        8: {"inbytes":     0, "outbytes":     4, "arginfo": 'Buffer<0,0x21,0>, OutRaw<4,4,0>'},
       10: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x22,0>'},
       11: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
       12: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
  },
  'nn::audio::detail::IAudioRendererManagerForApplet': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        1: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        2: {"inbytes":     8, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
        3: {"inbytes":  0x18, "outbytes":     0, "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<8,8,0x10>'},
        4: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        5: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::audio::detail::IAudioRendererManagerForDebugger': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::audio::detail::IFinalOutputRecorderManager': {
        0: {"inbytes":  0x10, "outbytes":  0x10, "arginfo": 'OutObject<0,0>, InRaw<8,4,0>, InHandle<0,1>, OutRaw<0x10,4,0>, InRaw<8,8,8>'},
  },
  'nn::audio::detail::IFinalOutputRecorder': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        3: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<8,8,0>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        5: {"inbytes":     0, "outbytes":  0x10, "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, OutRaw<8,8,8>'},
        6: {"inbytes":     8, "outbytes":     1, "arginfo": 'InRaw<8,8,0>, OutRaw<1,1,0>'},
        7: {"inbytes":     8, "outbytes":     8, "arginfo": 'InRaw<8,8,0>, OutRaw<8,8,0>'},
        8: {"inbytes":     8, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>, InRaw<8,8,0>'},
        9: {"inbytes":     0, "outbytes":  0x10, "arginfo": 'Buffer<0,0x22,0>, OutRaw<4,4,0>, OutRaw<8,8,8>'},
  },
  'nn::audio::detail::IFinalOutputRecorderManagerForDebugger': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
  },
  'nn::audio::detail::IFinalOutputRecorderManagerForApplet': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
        1: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>, InRaw<8,8,8>'},
  },
  'nn::mii::detail::IStaticService': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'GetDatabaseService', "args": 'Out<SharedPointer<nn::mii::detail::IDatabaseService>, void>, int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
  },
  'nn::mii::detail::IDatabaseService': {
        0: {"inbytes":     4, "outbytes":     1, "name": 'IsUpdated', "args": 'Out<bool, void>, int', "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     1, "name": 'IsFullDatabase', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
        2: {"inbytes":     4, "outbytes":     4, "name": 'GetCount', "args": 'Out<int, void>, int', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
        3: {"inbytes":     4, "outbytes":     4, "name": 'Get', "args": 'Out<int, void>, OutArray<nn::mii::CharInfoElement> const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
        4: {"inbytes":     4, "outbytes":     4, "name": 'Get1', "args": 'Out<int, void>, OutArray<nn::mii::CharInfo> const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
        5: {"inbytes":  0x5C, "outbytes":  0x58, "name": 'UpdateLatest', "args": 'Out<nn::mii::CharInfo, void>, nn::mii::CharInfo const&, int', "arginfo": 'OutRaw<0x58,4,0>, InRaw<0x58,4,0>, InRaw<4,4,0x58>'},
        6: {"inbytes":   0xC, "outbytes":  0x58, "name": 'BuildRandom', "args": 'Out<nn::mii::CharInfo, void>, int, int, int', "arginfo": 'OutRaw<0x58,4,0>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        7: {"inbytes":     4, "outbytes":  0x58, "name": 'BuildDefault', "args": 'Out<nn::mii::CharInfo, void>, int', "arginfo": 'OutRaw<0x58,4,0>, InRaw<4,4,0>'},
        8: {"inbytes":     4, "outbytes":     4, "name": 'Get2', "args": 'Out<int, void>, OutArray<nn::mii::StoreDataElement> const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
        9: {"inbytes":     4, "outbytes":     4, "name": 'Get3', "args": 'Out<int, void>, OutArray<nn::mii::StoreData> const&, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
       10: {"inbytes":  0x48, "outbytes":  0x44, "name": 'UpdateLatest1', "args": 'Out<nn::mii::StoreData, void>, nn::mii::StoreData const&, int', "arginfo": 'OutRaw<0x44,4,0>, InRaw<0x44,4,0>, InRaw<4,4,0x44>'},
       11: {"inbytes":  0x11, "outbytes":     4, "name": 'FindIndex', "args": 'Out<int, void>, nn::mii::CreateId const&, bool', "arginfo": 'OutRaw<4,4,0>, InRaw<0x10,1,0>, InRaw<1,1,0x10>'},
       12: {"inbytes":  0x14, "outbytes":     0, "name": 'Move', "args": 'int, nn::mii::CreateId const&', "arginfo": 'InRaw<4,4,0x10>, InRaw<0x10,1,0>'},
       13: {"inbytes":  0x44, "outbytes":     0, "name": 'AddOrReplace', "args": 'nn::mii::StoreData const&', "arginfo": 'InRaw<0x44,4,0>'},
       14: {"inbytes":  0x10, "outbytes":     0, "name": 'Delete', "args": 'nn::mii::CreateId const&', "arginfo": 'InRaw<0x10,1,0>'},
       15: {"inbytes":     0, "outbytes":     0, "name": 'DestroyFile', "args": '', "arginfo": ''},
       16: {"inbytes":     0, "outbytes":     0, "name": 'DeleteFile', "args": '', "arginfo": ''},
       17: {"inbytes":     0, "outbytes":     0, "name": 'Format', "args": '', "arginfo": ''},
       18: {"inbytes":     0, "outbytes":     0, "name": 'Import', "args": 'InBuffer const&', "arginfo": 'Buffer<0,5,0>'},
       19: {"inbytes":     0, "outbytes":     0, "name": 'Export', "args": 'OutBuffer const&', "arginfo": 'Buffer<0,6,0>'},
       20: {"inbytes":     0, "outbytes":     1, "name": 'IsBrokenDatabaseWithClearFlag', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       21: {"inbytes":  0x58, "outbytes":     4, "name": 'GetIndex', "args": 'Out<int, void>, nn::mii::CharInfo const&', "arginfo": 'OutRaw<4,4,0>, InRaw<0x58,4,0>'},
  },
  'nn::pl::detail::ISharedFontManager': {
        0: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     4, "arginfo": 'InRaw<4,4,0>, OutRaw<4,4,0>'},
        2: {"inbytes":     4, "outbytes":     4, "arginfo": 'InRaw<4,4,0>, OutRaw<4,4,0>'},
        3: {"inbytes":     4, "outbytes":     4, "arginfo": 'InRaw<4,4,0>, OutRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
        5: {"inbytes":     8, "outbytes":     8, "arginfo": 'OutRaw<1,1,0>, OutRaw<4,4,4>, Buffer<0,6,0>, Buffer<1,6,0>, Buffer<2,6,0>, InRaw<8,1,0>'},
  },
  'nn::visrv::sf::IManagerRootService': {
        2: {"inbytes":     4, "outbytes":     0, "name": 'GetDisplayService', "args": 'Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        3: {"inbytes":   0xC, "outbytes":     0, "name": 'GetDisplayServiceWithProxyNameExchange', "args": 'Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int, nn::vi::ProxyName', "arginfo": 'OutObject<0,0>, InRaw<4,4,8>, InRaw<8,1,0>'},
  },
  'nn::visrv::sf::IApplicationDisplayService': {
      100: {"inbytes":     0, "outbytes":     0, "name": 'GetRelayService', "args": 'Out<SharedPointer<nns::hosbinder::IHOSBinderDriver>, void>', "arginfo": 'OutObject<0,0>'},
      101: {"inbytes":     0, "outbytes":     0, "name": 'GetSystemDisplayService', "args": 'Out<SharedPointer<nn::visrv::sf::ISystemDisplayService>, void>', "arginfo": 'OutObject<0,0>'},
      102: {"inbytes":     0, "outbytes":     0, "name": 'GetManagerDisplayService', "args": 'Out<SharedPointer<nn::visrv::sf::IManagerDisplayService>, void>', "arginfo": 'OutObject<0,0>'},
      103: {"inbytes":     0, "outbytes":     0, "name": 'GetIndirectDisplayTransactionService', "args": 'Out<SharedPointer<nns::hosbinder::IHOSBinderDriver>, void>', "arginfo": 'OutObject<0,0>'},
     1000: {"inbytes":     0, "outbytes":     8, "name": 'ListDisplays', "args": 'Out<long, void>, OutArray<nn::vi::DisplayInfo> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>'},
     1010: {"inbytes":  0x40, "outbytes":     8, "name": 'OpenDisplay', "args": 'Out<unsigned long, void>, nn::vi::DisplayName const&', "arginfo": 'OutRaw<8,8,0>, InRaw<0x40,1,0>'},
     1011: {"inbytes":     0, "outbytes":     8, "name": 'OpenDefaultDisplay', "args": 'Out<unsigned long, void>', "arginfo": 'OutRaw<8,8,0>'},
     1020: {"inbytes":     8, "outbytes":     0, "name": 'CloseDisplay', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     1101: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayEnabled', "args": 'unsigned long, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
     1102: {"inbytes":     8, "outbytes":  0x10, "name": 'GetDisplayResolution', "args": 'Out<long, void>, Out<long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, InRaw<8,8,0>'},
     2020: {"inbytes":  0x50, "outbytes":     8, "name": 'OpenLayer', "pid": True, "args": 'Out<long, void>, OutBuffer const&, unsigned long, nn::vi::DisplayName const&, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,0x40>, InRaw<0x40,1,0>, InRaw<8,8,0x48>'},
     2021: {"inbytes":     8, "outbytes":     0, "name": 'CloseLayer', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2030: {"inbytes":  0x10, "outbytes":  0x10, "name": 'CreateStrayLayer', "args": 'Out<unsigned long, void>, Out<long, void>, OutBuffer const&, unsigned long, unsigned int', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, Buffer<0,6,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
     2031: {"inbytes":     8, "outbytes":     0, "name": 'DestroyStrayLayer', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2101: {"inbytes":  0x10, "outbytes":     0, "name": 'SetLayerScalingMode', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     2450: {"inbytes":  0x20, "outbytes":  0x10, "name": 'GetIndirectLayerImageMap', "pid": True, "args": 'Out<long, void>, Out<long, void>, OutBuffer const&, long, long, unsigned long, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, Buffer<0,0x46,0>, InRaw<8,8,0>, InRaw<8,8,8>, InRaw<8,8,0x10>, InRaw<8,8,0x18>'},
     2451: {"inbytes":  0x30, "outbytes":  0x10, "name": 'GetIndirectLayerImageCropMap', "pid": True, "args": 'Out<long, void>, Out<long, void>, OutBuffer const&, long, long, float, float, float, float, unsigned long, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, Buffer<0,0x46,0>, InRaw<8,8,0x10>, InRaw<8,8,0x18>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, InRaw<4,4,0xC>, InRaw<8,8,0x20>, InRaw<8,8,0x28>'},
     2460: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetIndirectLayerImageRequiredMemoryInfo', "args": 'Out<long, void>, Out<long, void>, long, long', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, InRaw<8,8,0>, InRaw<8,8,8>'},
     5202: {"inbytes":     8, "outbytes":     0, "name": 'GetDisplayVsyncEvent', "args": 'Out<NativeHandle, void>, unsigned long', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
     5203: {"inbytes":     8, "outbytes":     0, "name": 'GetDisplayVsyncEventForDebug', "args": 'Out<NativeHandle, void>, unsigned long', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
  },
  'nns::hosbinder::IHOSBinderDriver': {
        0: {"inbytes":   0xC, "outbytes":     0, "name": 'TransactParcel', "args": 'int, unsigned int, InBuffer const&, OutBuffer const&, unsigned int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, Buffer<0,5,0>, Buffer<1,6,0>, InRaw<4,4,8>'},
        1: {"inbytes":   0xC, "outbytes":     0, "name": 'AdjustRefcount', "args": 'int, int, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        2: {"inbytes":     8, "outbytes":     0, "name": 'GetNativeHandle', "args": 'int, unsigned int, Out<NativeHandle, void>', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, OutHandle<0,1>'},
        3: {"inbytes":   0xC, "outbytes":     0, "name": 'TransactParcelAuto', "args": 'int, unsigned int, InBuffer const&, OutBuffer const&, unsigned int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, Buffer<0,0x21,0>, Buffer<1,0x22,0>, InRaw<4,4,8>'},
  },
  'nn::visrv::sf::ISystemDisplayService': {
     1200: {"inbytes":     8, "outbytes":     8, "name": 'GetZOrderCountMin', "args": 'Out<long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
     1202: {"inbytes":     8, "outbytes":     8, "name": 'GetZOrderCountMax', "args": 'Out<long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
     1203: {"inbytes":     8, "outbytes":     8, "name": 'GetDisplayLogicalResolution', "args": 'Out<int, void>, Out<int, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<8,8,0>'},
     1204: {"inbytes":  0x18, "outbytes":     0, "name": 'SetDisplayMagnification', "args": 'unsigned long, int, int, int, int', "arginfo": 'InRaw<8,8,0x10>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
     2201: {"inbytes":  0x10, "outbytes":     0, "name": 'SetLayerPosition', "args": 'unsigned long, float, float', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
     2203: {"inbytes":  0x18, "outbytes":     0, "name": 'SetLayerSize', "args": 'unsigned long, long, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, InRaw<8,8,0x10>'},
     2204: {"inbytes":     8, "outbytes":     8, "name": 'GetLayerZ', "args": 'Out<long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
     2205: {"inbytes":  0x10, "outbytes":     0, "name": 'SetLayerZ', "args": 'unsigned long, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
     2207: {"inbytes":  0x10, "outbytes":     0, "name": 'SetLayerVisibility', "args": 'unsigned long, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
     2209: {"inbytes":  0x10, "outbytes":     0, "name": 'SetLayerAlpha', "args": 'unsigned long, float', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     2312: {"inbytes":  0x10, "outbytes":  0x10, "name": 'CreateStrayLayer', "args": 'Out<unsigned long, void>, Out<long, void>, OutBuffer const&, unsigned long, unsigned int', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, Buffer<0,6,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
     2400: {"inbytes":  0x10, "outbytes":     8, "name": 'OpenIndirectLayer', "pid": True, "args": 'Out<long, void>, OutBuffer const&, unsigned long, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,0>, InRaw<8,8,8>'},
     2401: {"inbytes":     8, "outbytes":     0, "name": 'CloseIndirectLayer', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2402: {"inbytes":     8, "outbytes":     0, "name": 'FlipIndirectLayer', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     3000: {"inbytes":     8, "outbytes":     8, "name": 'ListDisplayModes', "args": 'Out<long, void>, OutArray<nn::vi::DisplayModeInfo> const&, unsigned long', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,0>'},
     3001: {"inbytes":     8, "outbytes":     8, "name": 'ListDisplayRgbRanges', "args": 'Out<long, void>, OutArray<unsigned int> const&, unsigned long', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,0>'},
     3002: {"inbytes":     8, "outbytes":     8, "name": 'ListDisplayContentTypes', "args": 'Out<long, void>, OutArray<unsigned int> const&, unsigned long', "arginfo": 'OutRaw<8,8,0>, Buffer<0,6,0>, InRaw<8,8,0>'},
     3200: {"inbytes":     8, "outbytes":  0x10, "name": 'GetDisplayMode', "args": 'Out<nn::vi::DisplayModeInfo, void>, unsigned long', "arginfo": 'OutRaw<0x10,4,0>, InRaw<8,8,0>'},
     3201: {"inbytes":  0x18, "outbytes":     0, "name": 'SetDisplayMode', "args": 'unsigned long, nn::vi::DisplayModeInfo const&', "arginfo": 'InRaw<8,8,0>, InRaw<0x10,4,8>'},
     3202: {"inbytes":     8, "outbytes":     8, "name": 'GetDisplayUnderscan', "args": 'Out<long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
     3203: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayUnderscan', "args": 'unsigned long, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
     3204: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayContentType', "args": 'Out<unsigned int, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     3205: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayContentType', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     3206: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayRgbRange', "args": 'Out<unsigned int, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     3207: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayRgbRange', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     3208: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayCmuMode', "args": 'Out<unsigned int, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     3209: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayCmuMode', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     3210: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayContrastRatio', "args": 'Out<float, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     3211: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayContrastRatio', "args": 'unsigned long, float', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     3214: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayGamma', "args": 'Out<float, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     3215: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayGamma', "args": 'unsigned long, float', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     3216: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayCmuLuma', "args": 'Out<float, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     3217: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayCmuLuma', "args": 'unsigned long, float', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
  },
  'nn::visrv::sf::IManagerDisplayService': {
     1102: {"inbytes":     8, "outbytes":  0x10, "name": 'GetDisplayResolution', "args": 'Out<long, void>, Out<long, void>, unsigned long', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, InRaw<8,8,0>'},
     2010: {"inbytes":  0x18, "outbytes":     8, "name": 'CreateManagedLayer', "args": 'Out<unsigned long, void>, unsigned long, unsigned int, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,8>, InRaw<4,4,0>, InRaw<8,8,0x10>'},
     2011: {"inbytes":     8, "outbytes":     0, "name": 'DestroyManagedLayer', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2050: {"inbytes":     0, "outbytes":     8, "name": 'CreateIndirectLayer', "args": 'Out<unsigned long, void>', "arginfo": 'OutRaw<8,8,0>'},
     2051: {"inbytes":     8, "outbytes":     0, "name": 'DestroyIndirectLayer', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2052: {"inbytes":  0x10, "outbytes":     8, "name": 'CreateIndirectProducerEndPoint', "args": 'Out<unsigned long, void>, unsigned long, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>, InRaw<8,8,8>'},
     2053: {"inbytes":     8, "outbytes":     0, "name": 'DestroyIndirectProducerEndPoint', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2054: {"inbytes":  0x10, "outbytes":     8, "name": 'CreateIndirectConsumerEndPoint', "args": 'Out<unsigned long, void>, unsigned long, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>, InRaw<8,8,8>'},
     2055: {"inbytes":     8, "outbytes":     0, "name": 'DestroyIndirectConsumerEndPoint', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2300: {"inbytes":     8, "outbytes":     0, "name": 'AcquireLayerTexturePresentingEvent', "args": 'Out<NativeHandle, void>, unsigned long', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
     2301: {"inbytes":     8, "outbytes":     0, "name": 'ReleaseLayerTexturePresentingEvent', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
     2302: {"inbytes":     8, "outbytes":     0, "name": 'GetDisplayHotplugEvent', "args": 'Out<NativeHandle, void>, unsigned long', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
     2402: {"inbytes":     8, "outbytes":     4, "name": 'GetDisplayHotplugState', "args": 'Out<unsigned int, void>, unsigned long', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,0>'},
     4201: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayAlpha', "args": 'unsigned long, float', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     4203: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayLayerStack', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     4205: {"inbytes":  0x10, "outbytes":     0, "name": 'SetDisplayPowerState', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     6000: {"inbytes":  0x10, "outbytes":     0, "name": 'AddToLayerStack', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     6001: {"inbytes":  0x10, "outbytes":     0, "name": 'RemoveFromLayerStack', "args": 'unsigned long, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
     6002: {"inbytes":  0x10, "outbytes":     0, "name": 'SetLayerVisibility', "args": 'unsigned long, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
     7000: {"inbytes":     1, "outbytes":     0, "name": 'SetContentVisibility', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
     8000: {"inbytes":  0x10, "outbytes":     0, "name": 'SetConductorLayer', "args": 'unsigned long, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
     8100: {"inbytes":  0x18, "outbytes":     0, "name": 'SetIndirectProducerFlipOffset', "args": 'unsigned long, unsigned long, nn::TimeSpan', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>, InRaw<8,8,0x10>'},
  },
  'nn::visrv::sf::ISystemRootService': {
        1: {"inbytes":     4, "outbytes":     0, "name": 'GetDisplayService', "args": 'Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        3: {"inbytes":   0xC, "outbytes":     0, "name": 'GetDisplayServiceWithProxyNameExchange', "args": 'Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int, nn::vi::ProxyName', "arginfo": 'OutObject<0,0>, InRaw<4,4,8>, InRaw<8,1,0>'},
  },
  'nn::visrv::sf::IApplicationRootService': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'GetDisplayService', "args": 'Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int', "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
  },
  'nn::hid::IHidDebugServer': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateDebugPad', "args": '', "arginfo": ''},
        1: {"inbytes":  0x18, "outbytes":     0, "name": 'SetDebugPadAutoPilotState', "args": 'nn::hid::debug::DebugPadAutoPilotState const&', "arginfo": 'InRaw<0x18,4,0>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'UnsetDebugPadAutoPilotState', "args": '', "arginfo": ''},
       10: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateTouchScreen', "args": '', "arginfo": ''},
       11: {"inbytes":     0, "outbytes":     0, "name": 'SetTouchScreenAutoPilotState', "args": 'InArray<nn::hid::TouchState> const&', "arginfo": 'Buffer<0,5,0>'},
       12: {"inbytes":     0, "outbytes":     0, "name": 'UnsetTouchScreenAutoPilotState', "args": '', "arginfo": ''},
       20: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateMouse', "args": '', "arginfo": ''},
       21: {"inbytes":  0x1C, "outbytes":     0, "name": 'SetMouseAutoPilotState', "args": 'nn::hid::debug::MouseAutoPilotState const&', "arginfo": 'InRaw<0x1C,4,0>'},
       22: {"inbytes":     0, "outbytes":     0, "name": 'UnsetMouseAutoPilotState', "args": '', "arginfo": ''},
       30: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateKeyboard', "args": '', "arginfo": ''},
       31: {"inbytes":  0x28, "outbytes":     0, "name": 'SetKeyboardAutoPilotState', "args": 'nn::hid::debug::KeyboardAutoPilotState const&', "arginfo": 'InRaw<0x28,8,0>'},
       32: {"inbytes":     0, "outbytes":     0, "name": 'UnsetKeyboardAutoPilotState', "args": '', "arginfo": ''},
       50: {"inbytes":     4, "outbytes":     0, "name": 'DeactivateXpad', "args": 'nn::hid::BasicXpadId', "arginfo": 'InRaw<4,4,0>'},
       51: {"inbytes":  0x20, "outbytes":     0, "name": 'SetXpadAutoPilotState', "args": 'nn::hid::BasicXpadId, nn::hid::debug::BasicXpadAutoPilotState const&', "arginfo": 'InRaw<4,4,0>, InRaw<0x1C,4,4>'},
       52: {"inbytes":     4, "outbytes":     0, "name": 'UnsetXpadAutoPilotState', "args": 'nn::hid::BasicXpadId', "arginfo": 'InRaw<4,4,0>'},
       60: {"inbytes":     4, "outbytes":     0, "name": 'DeactivateJoyXpad', "args": 'nn::hid::JoyXpadId', "arginfo": 'InRaw<4,4,0>'},
       91: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateGesture', "args": '', "arginfo": ''},
      110: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateHomeButton', "args": '', "arginfo": ''},
      111: {"inbytes":     8, "outbytes":     0, "name": 'SetHomeButtonAutoPilotState', "args": 'nn::hid::debug::HomeButtonAutoPilotState', "arginfo": 'InRaw<8,8,0>'},
      112: {"inbytes":     0, "outbytes":     0, "name": 'UnsetHomeButtonAutoPilotState', "args": '', "arginfo": ''},
      120: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateSleepButton', "args": '', "arginfo": ''},
      121: {"inbytes":     8, "outbytes":     0, "name": 'SetSleepButtonAutoPilotState', "args": 'nn::hid::debug::SleepButtonAutoPilotState', "arginfo": 'InRaw<8,8,0>'},
      122: {"inbytes":     0, "outbytes":     0, "name": 'UnsetSleepButtonAutoPilotState', "args": '', "arginfo": ''},
      123: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateInputDetector', "args": '', "arginfo": ''},
      130: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateCaptureButton', "args": '', "arginfo": ''},
      131: {"inbytes":     8, "outbytes":     0, "name": 'SetCaptureButtonAutoPilotState', "args": 'nn::hid::debug::CaptureButtonAutoPilotState', "arginfo": 'InRaw<8,8,0>'},
      132: {"inbytes":     0, "outbytes":     0, "name": 'UnsetCaptureButtonAutoPilotState', "args": '', "arginfo": ''},
      133: {"inbytes":  0x18, "outbytes":     0, "name": 'SetShiftAccelerometerCalibrationValue', "pid": True, "args": 'nn::hid::SixAxisSensorHandle, nn::applet::AppletResourceUserId, float, float', "arginfo": 'InRaw<4,4,0>, InRaw<8,8,0x10>, InRaw<4,4,4>, InRaw<4,4,8>'},
      134: {"inbytes":  0x10, "outbytes":     8, "name": 'GetShiftAccelerometerCalibrationValue', "pid": True, "args": 'Out<float, void>, Out<float, void>, nn::hid::SixAxisSensorHandle, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<8,8,8>'},
      135: {"inbytes":  0x18, "outbytes":     0, "name": 'SetShiftGyroscopeCalibrationValue', "pid": True, "args": 'nn::hid::SixAxisSensorHandle, nn::applet::AppletResourceUserId, float, float', "arginfo": 'InRaw<4,4,0>, InRaw<8,8,0x10>, InRaw<4,4,4>, InRaw<4,4,8>'},
      136: {"inbytes":  0x10, "outbytes":     8, "name": 'GetShiftGyroscopeCalibrationValue', "pid": True, "args": 'Out<float, void>, Out<float, void>, nn::hid::SixAxisSensorHandle, nn::applet::AppletResourceUserId', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<8,8,8>'},
      140: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateConsoleSixAxisSensor', "args": '', "arginfo": ''},
      201: {"inbytes":     0, "outbytes":     0, "name": 'ActivateFirmwareUpdate', "args": '', "arginfo": ''},
      202: {"inbytes":     0, "outbytes":     0, "name": 'DeactivateFirmwareUpdate', "args": '', "arginfo": ''},
      203: {"inbytes":     8, "outbytes":     0, "name": 'StartFirmwareUpdate', "args": 'nn::hid::system::UniquePadId', "arginfo": 'InRaw<8,8,0>'},
      204: {"inbytes":     0, "outbytes":  0x10, "name": 'GetFirmwareUpdateStage', "args": 'Out<long, void>, Out<long, void>', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>'},
      205: {"inbytes":     8, "outbytes":  0x10, "name": 'GetFirmwareVersion', "args": 'Out<nn::hid::system::FirmwareVersion, void>, unsigned int, nn::util::BitFlagSet<32, nn::hid::system::DeviceType>', "arginfo": 'OutRaw<0x10,1,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
      206: {"inbytes":     8, "outbytes":  0x10, "name": 'GetDestinationFirmwareVersion', "args": 'Out<nn::hid::system::FirmwareVersion, void>, unsigned int, nn::util::BitFlagSet<32, nn::hid::system::DeviceType>', "arginfo": 'OutRaw<0x10,1,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
      207: {"inbytes":     0, "outbytes":     0, "name": 'DiscardFirmwareInfoCacheForRevert', "args": '', "arginfo": ''},
      208: {"inbytes":     8, "outbytes":     0, "name": 'StartFirmwareUpdateForRevert', "args": 'nn::hid::system::UniquePadId', "arginfo": 'InRaw<8,8,0>'},
      209: {"inbytes":     8, "outbytes":  0x10, "name": 'GetAvailableFirmwareVersionForRevert', "args": 'Out<nn::hid::system::FirmwareVersion, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<0x10,1,0>, InRaw<8,8,0>'},
      221: {"inbytes":  0x10, "outbytes":     0, "name": 'UpdateControllerColor', "args": 'nn::util::Unorm8x4, nn::util::Unorm8x4, nn::hid::system::UniquePadId', "arginfo": 'InRaw<4,1,0>, InRaw<4,1,4>, InRaw<8,8,8>'},
  },
  'nn::hid::IHidServer': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'CreateAppletResource', "pid": True, "args": 'Out<SharedPointer<nn::hid::IAppletResource>, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutObject<0,0>, InRaw<8,8,0>'},
        1: {"inbytes":     8, "outbytes":     0, "name": 'ActivateDebugPad', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
       11: {"inbytes":     8, "outbytes":     0, "name": 'ActivateTouchScreen', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
       21: {"inbytes":     8, "outbytes":     0, "name": 'ActivateMouse', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
       31: {"inbytes":     8, "outbytes":     0, "name": 'ActivateKeyboard', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
       40: {"inbytes":     8, "outbytes":     0, "name": 'AcquireXpadIdEventHandle', "args": 'Out<NativeHandle, void>, unsigned long', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
       41: {"inbytes":     8, "outbytes":     0, "name": 'ReleaseXpadIdEventHandle', "args": 'unsigned long', "arginfo": 'InRaw<8,8,0>'},
       51: {"inbytes":  0x10, "outbytes":     0, "name": 'ActivateXpad', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::BasicXpadId', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       55: {"inbytes":     0, "outbytes":     8, "name": 'GetXpadIds', "args": 'Out<long, void>, OutArray<nn::hid::BasicXpadId> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>'},
       56: {"inbytes":     4, "outbytes":     0, "name": 'ActivateJoyXpad', "args": 'nn::hid::JoyXpadId', "arginfo": 'InRaw<4,4,0>'},
       58: {"inbytes":     4, "outbytes":     0, "name": 'GetJoyXpadLifoHandle', "args": 'Out<NativeHandle, void>, nn::hid::JoyXpadId', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>'},
       59: {"inbytes":     0, "outbytes":     8, "name": 'GetJoyXpadIds', "args": 'Out<long, void>, OutArray<nn::hid::JoyXpadId> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>'},
       60: {"inbytes":     4, "outbytes":     0, "name": 'ActivateSixAxisSensor', "args": 'nn::hid::BasicXpadId', "arginfo": 'InRaw<4,4,0>'},
       61: {"inbytes":     4, "outbytes":     0, "name": 'DeactivateSixAxisSensor', "args": 'nn::hid::BasicXpadId', "arginfo": 'InRaw<4,4,0>'},
       62: {"inbytes":     4, "outbytes":     0, "name": 'GetSixAxisSensorLifoHandle', "args": 'Out<NativeHandle, void>, nn::hid::BasicXpadId', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>'},
       63: {"inbytes":     4, "outbytes":     0, "name": 'ActivateJoySixAxisSensor', "args": 'nn::hid::JoyXpadId', "arginfo": 'InRaw<4,4,0>'},
       64: {"inbytes":     4, "outbytes":     0, "name": 'DeactivateJoySixAxisSensor', "args": 'nn::hid::JoyXpadId', "arginfo": 'InRaw<4,4,0>'},
       65: {"inbytes":     4, "outbytes":     0, "name": 'GetJoySixAxisSensorLifoHandle', "args": 'Out<NativeHandle, void>, nn::hid::JoyXpadId', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>'},
       66: {"inbytes":  0x10, "outbytes":     0, "name": 'StartSixAxisSensor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       67: {"inbytes":  0x10, "outbytes":     0, "name": 'StopSixAxisSensor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       68: {"inbytes":  0x10, "outbytes":     1, "name": 'IsSixAxisSensorFusionEnabled', "pid": True, "args": 'Out<bool, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
       69: {"inbytes":  0x10, "outbytes":     0, "name": 'EnableSixAxisSensorFusion', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, bool', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,4>, InRaw<1,1,0>'},
       70: {"inbytes":  0x18, "outbytes":     0, "name": 'SetSixAxisSensorFusionParameters', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, float, float', "arginfo": 'InRaw<8,8,0x10>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
       71: {"inbytes":  0x10, "outbytes":     8, "name": 'GetSixAxisSensorFusionParameters', "pid": True, "args": 'Out<float, void>, Out<float, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<8,8,8>, InRaw<4,4,0>'},
       72: {"inbytes":  0x10, "outbytes":     0, "name": 'ResetSixAxisSensorFusionParameters', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       73: {"inbytes":  0x18, "outbytes":     0, "name": 'SetAccelerometerParameters', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, float, float', "arginfo": 'InRaw<8,8,0x10>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
       74: {"inbytes":  0x10, "outbytes":     8, "name": 'GetAccelerometerParameters', "pid": True, "args": 'Out<float, void>, Out<float, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, InRaw<8,8,8>, InRaw<4,4,0>'},
       75: {"inbytes":  0x10, "outbytes":     0, "name": 'ResetAccelerometerParameters', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       76: {"inbytes":  0x10, "outbytes":     0, "name": 'SetAccelerometerPlayMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
       77: {"inbytes":  0x10, "outbytes":     4, "name": 'GetAccelerometerPlayMode', "pid": True, "args": 'Out<unsigned int, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
       78: {"inbytes":  0x10, "outbytes":     0, "name": 'ResetAccelerometerPlayMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       79: {"inbytes":  0x10, "outbytes":     0, "name": 'SetGyroscopeZeroDriftMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
       80: {"inbytes":  0x10, "outbytes":     4, "name": 'GetGyroscopeZeroDriftMode', "pid": True, "args": 'Out<unsigned int, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'OutRaw<4,4,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
       81: {"inbytes":  0x10, "outbytes":     0, "name": 'ResetGyroscopeZeroDriftMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
       82: {"inbytes":  0x10, "outbytes":     1, "name": 'IsSixAxisSensorAtRest', "pid": True, "args": 'Out<bool, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
       91: {"inbytes":  0x10, "outbytes":     0, "name": 'ActivateGesture', "pid": True, "args": 'nn::applet::AppletResourceUserId, int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      100: {"inbytes":  0x10, "outbytes":     0, "name": 'SetSupportedNpadStyleSet', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::util::BitFlagSet<32, nn::hid::NpadStyleTag>', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      101: {"inbytes":     8, "outbytes":     4, "name": 'GetSupportedNpadStyleSet', "pid": True, "args": 'nn::applet::AppletResourceUserId, Out<nn::util::BitFlagSet<32, nn::hid::NpadStyleTag>, void>', "arginfo": 'InRaw<8,8,0>, OutRaw<4,4,0>'},
      102: {"inbytes":     8, "outbytes":     0, "name": 'SetSupportedNpadIdType', "pid": True, "args": 'nn::applet::AppletResourceUserId, InArray<unsigned int> const&', "arginfo": 'InRaw<8,8,0>, Buffer<0,9,0>'},
      103: {"inbytes":     8, "outbytes":     0, "name": 'ActivateNpad', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      104: {"inbytes":     8, "outbytes":     0, "name": 'DeactivateNpad', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      106: {"inbytes":  0x18, "outbytes":     0, "name": 'AcquireNpadStyleSetUpdateEventHandle', "pid": True, "args": 'nn::applet::AppletResourceUserId, Out<NativeHandle, void>, unsigned int, unsigned long', "arginfo": 'InRaw<8,8,8>, OutHandle<0,1>, InRaw<4,4,0>, InRaw<8,8,0x10>'},
      107: {"inbytes":  0x10, "outbytes":     0, "name": 'DisconnectNpad', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      108: {"inbytes":     4, "outbytes":     8, "name": 'GetPlayerLedPattern', "args": 'Out<unsigned long, void>, unsigned int', "arginfo": 'OutRaw<8,8,0>, InRaw<4,4,0>'},
      120: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNpadJoyHoldType', "pid": True, "args": 'nn::applet::AppletResourceUserId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      121: {"inbytes":     8, "outbytes":     8, "name": 'GetNpadJoyHoldType', "pid": True, "args": 'nn::applet::AppletResourceUserId, Out<long, void>', "arginfo": 'InRaw<8,8,0>, OutRaw<8,8,0>'},
      122: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNpadJoyAssignmentModeSingleByDefault', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      123: {"inbytes":  0x18, "outbytes":     0, "name": 'SetNpadJoyAssignmentModeSingle', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int, long', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<8,8,0x10>'},
      124: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNpadJoyAssignmentModeDual', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      125: {"inbytes":  0x10, "outbytes":     0, "name": 'MergeSingleJoyAsDualJoy', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
      126: {"inbytes":     8, "outbytes":     0, "name": 'StartLrAssignmentMode', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      127: {"inbytes":     8, "outbytes":     0, "name": 'StopLrAssignmentMode', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      128: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNpadHandheldActivationMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      129: {"inbytes":     8, "outbytes":     8, "name": 'GetNpadHandheldActivationMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, Out<long, void>', "arginfo": 'InRaw<8,8,0>, OutRaw<8,8,0>'},
      130: {"inbytes":  0x10, "outbytes":     0, "name": 'SwapNpadAssignment', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int, unsigned int', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
      131: {"inbytes":  0x10, "outbytes":     1, "name": 'IsUnintendedHomeButtonInputProtectionEnabled', "pid": True, "args": 'Out<bool, void>, nn::applet::AppletResourceUserId, unsigned int', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
      132: {"inbytes":  0x10, "outbytes":     0, "name": 'EnableUnintendedHomeButtonInputProtection', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int, bool', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,4>, InRaw<1,1,0>'},
      200: {"inbytes":     4, "outbytes":     8, "name": 'GetVibrationDeviceInfo', "args": 'Out<nn::hid::VibrationDeviceInfoForIpc, void>, nn::hid::VibrationDeviceHandle', "arginfo": 'OutRaw<8,4,0>, InRaw<4,4,0>'},
      201: {"inbytes":  0x20, "outbytes":     0, "name": 'SendVibrationValue', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::VibrationDeviceHandle, nn::hid::VibrationValue const&', "arginfo": 'InRaw<8,8,0x18>, InRaw<4,4,0>, InRaw<0x10,4,4>'},
      202: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetActualVibrationValue', "pid": True, "args": 'Out<nn::hid::VibrationValue, void>, nn::applet::AppletResourceUserId, nn::hid::VibrationDeviceHandle', "arginfo": 'OutRaw<0x10,4,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
      203: {"inbytes":     0, "outbytes":     0, "name": 'CreateActiveVibrationDeviceList', "args": 'Out<SharedPointer<nn::hid::IActiveVibrationDeviceList>, void>', "arginfo": 'OutObject<0,0>'},
      204: {"inbytes":     1, "outbytes":     0, "name": 'PermitVibration', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      205: {"inbytes":     0, "outbytes":     1, "name": 'IsVibrationPermitted', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      206: {"inbytes":     8, "outbytes":     0, "name": 'SendVibrationValues', "args": 'nn::applet::AppletResourceUserId, InArray<nn::hid::VibrationDeviceHandle> const&, InArray<nn::hid::VibrationValue> const&', "arginfo": 'InRaw<8,8,0>, Buffer<0,9,0>, Buffer<1,9,0>'},
      300: {"inbytes":     8, "outbytes":     0, "name": 'ActivateConsoleSixAxisSensor', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      301: {"inbytes":  0x10, "outbytes":     0, "name": 'StartConsoleSixAxisSensor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::ConsoleSixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      302: {"inbytes":  0x10, "outbytes":     0, "name": 'StopConsoleSixAxisSensor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::ConsoleSixAxisSensorHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      400: {"inbytes":     0, "outbytes":     1, "name": 'IsUsbFullKeyControllerEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      401: {"inbytes":     1, "outbytes":     0, "name": 'EnableUsbFullKeyController', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      402: {"inbytes":     4, "outbytes":     1, "name": 'IsUsbFullKeyControllerConnected', "args": 'Out<bool, void>, unsigned int', "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
     1000: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNpadCommunicationMode', "pid": True, "args": 'nn::applet::AppletResourceUserId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
     1001: {"inbytes":     0, "outbytes":     8, "name": 'GetNpadCommunicationMode', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
  },
  'nn::hid::IAppletResource': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'GetSharedMemoryHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
  },
  'nn::hid::IActiveVibrationDeviceList': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'ActivateVibrationDevice', "args": 'nn::hid::VibrationDeviceHandle', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::hid::IHidSystemServer': {
       31: {"inbytes":     4, "outbytes":     0, "name": 'SendKeyboardLockKeyEvent', "args": 'nn::util::BitFlagSet<32, nn::hid::system::KeyboardLockKeyEvent>', "arginfo": 'InRaw<4,4,0>'},
      101: {"inbytes":     8, "outbytes":     0, "name": 'AcquireHomeButtonEventHandle', "pid": True, "args": 'Out<NativeHandle, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
      111: {"inbytes":     8, "outbytes":     0, "name": 'ActivateHomeButton', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      121: {"inbytes":     8, "outbytes":     0, "name": 'AcquireSleepButtonEventHandle', "pid": True, "args": 'Out<NativeHandle, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
      131: {"inbytes":     8, "outbytes":     0, "name": 'ActivateSleepButton', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      141: {"inbytes":     8, "outbytes":     0, "name": 'AcquireCaptureButtonEventHandle', "pid": True, "args": 'Out<NativeHandle, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
      151: {"inbytes":     8, "outbytes":     0, "name": 'ActivateCaptureButton', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      210: {"inbytes":     0, "outbytes":     0, "name": 'AcquireNfcDeviceUpdateEventHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      211: {"inbytes":     0, "outbytes":     8, "name": 'GetNpadsWithNfc', "args": 'Out<long, void>, OutArray<unsigned int> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>'},
      212: {"inbytes":     4, "outbytes":     0, "name": 'AcquireNfcActivateEventHandle', "args": 'Out<NativeHandle, void>, unsigned int', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>'},
      213: {"inbytes":  0x10, "outbytes":     0, "name": 'ActivateNfc', "pid": True, "args": 'unsigned int, bool, nn::applet::AppletResourceUserId', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>, InRaw<8,8,8>'},
      230: {"inbytes":     4, "outbytes":     0, "name": 'AcquireIrSensorEventHandle', "args": 'Out<NativeHandle, void>, unsigned int', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>'},
      231: {"inbytes":  0x10, "outbytes":     0, "name": 'ActivateIrSensor', "pid": True, "args": 'unsigned int, bool, nn::applet::AppletResourceUserId', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>, InRaw<8,8,8>'},
      301: {"inbytes":     4, "outbytes":     0, "name": 'ActivateNpadSystem', "args": 'unsigned int', "arginfo": 'InRaw<4,4,0>'},
      303: {"inbytes":     8, "outbytes":     0, "name": 'ApplyNpadSystemCommonPolicy', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      304: {"inbytes":     8, "outbytes":     0, "name": 'EnableAssigningSingleOnSlSrPress', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      305: {"inbytes":     8, "outbytes":     0, "name": 'DisableAssigningSingleOnSlSrPress', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      306: {"inbytes":     0, "outbytes":     4, "name": 'GetLastActiveNpad', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
      307: {"inbytes":     4, "outbytes":  0x10, "name": 'GetNpadSystemExtStyle', "args": 'Out<long, void>, Out<long, void>, unsigned int', "arginfo": 'OutRaw<8,8,0>, OutRaw<8,8,8>, InRaw<4,4,0>'},
      311: {"inbytes":  0x10, "outbytes":     0, "name": 'SetNpadPlayerLedBlinkingDevice', "pid": True, "args": 'nn::applet::AppletResourceUserId, unsigned int, nn::util::BitFlagSet<32, nn::hid::system::DeviceType>', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,4,4>'},
      321: {"inbytes":     4, "outbytes":     8, "name": 'GetUniquePadsFromNpad', "args": 'Out<long, void>, OutArray<nn::hid::system::UniquePadId> const&, unsigned int', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>, InRaw<4,4,0>'},
      322: {"inbytes":  0x10, "outbytes":     8, "name": 'GetIrSensorState', "pid": True, "args": 'unsigned int, Out<long, void>, nn::applet::AppletResourceUserId', "arginfo": 'InRaw<4,4,0>, OutRaw<8,8,0>, InRaw<8,8,8>'},
      323: {"inbytes":  0x10, "outbytes":     8, "name": 'GetXcdHandleForNpadWithIrSensor', "pid": True, "args": 'unsigned int, Out<unsigned long, void>, nn::applet::AppletResourceUserId', "arginfo": 'InRaw<4,4,0>, OutRaw<8,8,0>, InRaw<8,8,8>'},
      500: {"inbytes":     8, "outbytes":     0, "name": 'SetAppletResourceUserId', "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      501: {"inbytes":  0x10, "outbytes":     0, "name": 'RegisterAppletResourceUserId', "args": 'nn::applet::AppletResourceUserId, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
      502: {"inbytes":     8, "outbytes":     0, "name": 'UnregisterAppletResourceUserId', "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      503: {"inbytes":  0x10, "outbytes":     0, "name": 'EnableAppletToGetInput', "args": 'nn::applet::AppletResourceUserId, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
      504: {"inbytes":  0x10, "outbytes":     0, "name": 'SetAruidValidForVibration', "args": 'nn::applet::AppletResourceUserId, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
      505: {"inbytes":  0x10, "outbytes":     0, "name": 'EnableAppletToGetSixAxisSensor', "args": 'nn::applet::AppletResourceUserId, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
      510: {"inbytes":     4, "outbytes":     0, "name": 'SetVibrationMasterVolume', "args": 'float', "arginfo": 'InRaw<4,4,0>'},
      511: {"inbytes":     0, "outbytes":     4, "name": 'GetVibrationMasterVolume', "args": 'Out<float, void>', "arginfo": 'OutRaw<4,4,0>'},
      512: {"inbytes":     8, "outbytes":     0, "name": 'BeginPermitVibrationSession', "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      513: {"inbytes":     0, "outbytes":     0, "name": 'EndPermitVibrationSession', "args": '', "arginfo": ''},
      520: {"inbytes":     0, "outbytes":     0, "name": 'EnableHandheldHids', "args": '', "arginfo": ''},
      521: {"inbytes":     0, "outbytes":     0, "name": 'DisableHandheldHids', "args": '', "arginfo": ''},
      540: {"inbytes":     0, "outbytes":     0, "name": 'AcquirePlayReportControllerUsageUpdateEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      541: {"inbytes":     0, "outbytes":     8, "name": 'GetPlayReportControllerUsages', "args": 'Out<long, void>, OutArray<nn::hid::system::PlayReportControllerUsage> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>'},
      542: {"inbytes":     0, "outbytes":     0, "name": 'AcquirePlayReportRegisteredDeviceUpdateEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      543: {"inbytes":     0, "outbytes":     8, "name": 'GetRegisteredDevices', "args": 'Out<long, void>, OutArray<nn::hid::system::RegisteredDevice> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>'},
      544: {"inbytes":     0, "outbytes":     0, "name": 'AcquireConnectionTriggerTimeoutEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      545: {"inbytes":     6, "outbytes":     0, "name": 'SendConnectionTrigger', "args": 'nn::bluetooth::Address', "arginfo": 'InRaw<6,1,0>'},
      546: {"inbytes":     0, "outbytes":     0, "name": 'AcquireDeviceRegisteredEventForControllerSupport', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      547: {"inbytes":     0, "outbytes":     8, "name": 'GetAllowedBluetoothLinksCount', "args": 'Out<long, void>', "arginfo": 'OutRaw<8,8,0>'},
      700: {"inbytes":  0x10, "outbytes":     0, "name": 'ActivateUniquePad', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::hid::system::UniquePadId', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      702: {"inbytes":     0, "outbytes":     0, "name": 'AcquireUniquePadConnectionEventHandle', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
      703: {"inbytes":     0, "outbytes":     8, "name": 'GetUniquePadIds', "args": 'Out<long, void>, OutArray<nn::hid::system::UniquePadId> const&', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>'},
      751: {"inbytes":     8, "outbytes":     0, "name": 'AcquireJoyDetachOnBluetoothOffEventHandle', "pid": True, "args": 'Out<NativeHandle, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
      800: {"inbytes":     8, "outbytes":     8, "name": 'ListSixAxisSensorHandles', "args": 'Out<long, void>, OutArray<nn::hid::system::UniqueSixAxisSensorHandle> const&, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<8,8,0>, Buffer<0,0xA,0>, InRaw<8,8,0>'},
      801: {"inbytes":     4, "outbytes":     1, "name": 'IsSixAxisSensorUserCalibrationSupported', "args": 'Out<bool, void>, nn::hid::system::UniqueSixAxisSensorHandle', "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
      802: {"inbytes":     4, "outbytes":     0, "name": 'ResetSixAxisSensorCalibrationValues', "args": 'nn::hid::system::UniqueSixAxisSensorHandle', "arginfo": 'InRaw<4,4,0>'},
      803: {"inbytes":     4, "outbytes":     0, "name": 'StartSixAxisSensorUserCalibration', "args": 'nn::hid::system::UniqueSixAxisSensorHandle', "arginfo": 'InRaw<4,4,0>'},
      804: {"inbytes":     4, "outbytes":     0, "name": 'CancelSixAxisSensorUserCalibration', "args": 'nn::hid::system::UniqueSixAxisSensorHandle', "arginfo": 'InRaw<4,4,0>'},
      805: {"inbytes":     8, "outbytes":     6, "name": 'GetUniquePadBluetoothAddress', "args": 'Out<nn::bluetooth::Address, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<6,1,0>, InRaw<8,8,0>'},
      806: {"inbytes":     8, "outbytes":     0, "name": 'DisconnectUniquePad', "args": 'nn::hid::system::UniquePadId', "arginfo": 'InRaw<8,8,0>'},
      821: {"inbytes":  0x10, "outbytes":     0, "name": 'StartAnalogStickManualCalibration', "args": 'nn::hid::system::UniquePadId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      822: {"inbytes":  0x10, "outbytes":     0, "name": 'RetryCurrentAnalogStickManualCalibrationStage', "args": 'nn::hid::system::UniquePadId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      823: {"inbytes":  0x10, "outbytes":     0, "name": 'CancelAnalogStickManualCalibration', "args": 'nn::hid::system::UniquePadId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      824: {"inbytes":  0x10, "outbytes":     0, "name": 'ResetAnalogStickManualCalibration', "args": 'nn::hid::system::UniquePadId, long', "arginfo": 'InRaw<8,8,0>, InRaw<8,8,8>'},
      850: {"inbytes":     0, "outbytes":     1, "name": 'IsUsbFullKeyControllerEnabled', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
      851: {"inbytes":     1, "outbytes":     0, "name": 'EnableUsbFullKeyController', "args": 'bool', "arginfo": 'InRaw<1,1,0>'},
      852: {"inbytes":     8, "outbytes":     1, "name": 'IsUsbConnected', "args": 'Out<bool, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,0>'},
      900: {"inbytes":     8, "outbytes":     0, "name": 'ActivateInputDetector', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      901: {"inbytes":     4, "outbytes":     0, "name": 'NotifyInputDetector', "args": 'nn::util::BitFlagSet<32, nn::hid::system::InputSourceId>', "arginfo": 'InRaw<4,4,0>'},
     1000: {"inbytes":     0, "outbytes":     0, "name": 'InitializeFirmwareUpdate', "args": '', "arginfo": ''},
     1001: {"inbytes":     8, "outbytes":  0x10, "name": 'GetFirmwareVersion', "args": 'Out<nn::hid::system::FirmwareVersion, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<0x10,1,0>, InRaw<8,8,0>'},
     1002: {"inbytes":     8, "outbytes":  0x10, "name": 'GetAvailableFirmwareVersion', "args": 'Out<nn::hid::system::FirmwareVersion, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<0x10,1,0>, InRaw<8,8,0>'},
     1003: {"inbytes":     8, "outbytes":     1, "name": 'IsFirmwareUpdateAvailable', "args": 'Out<bool, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<1,1,0>, InRaw<8,8,0>'},
     1004: {"inbytes":     8, "outbytes":     8, "name": 'CheckFirmwareUpdateRequired', "args": 'Out<long, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
     1005: {"inbytes":     8, "outbytes":     8, "name": 'StartFirmwareUpdate', "args": 'Out<nn::hid::system::FirmwareUpdateDeviceHandle, void>, nn::hid::system::UniquePadId', "arginfo": 'OutRaw<8,8,0>, InRaw<8,8,0>'},
     1006: {"inbytes":     0, "outbytes":     0, "name": 'AbortFirmwareUpdate', "args": '', "arginfo": ''},
     1007: {"inbytes":     8, "outbytes":     4, "name": 'GetFirmwareUpdateState', "args": 'Out<nn::hid::system::FirmwareUpdateState, void>, nn::hid::system::FirmwareUpdateDeviceHandle', "arginfo": 'OutRaw<4,1,0>, InRaw<8,8,0>'},
  },
  'nn::hid::IHidTemporaryServer': {
        0: {"inbytes":  0x10, "outbytes":  0x18, "name": 'GetConsoleSixAxisSensorCalibrationValues', "pid": True, "args": 'Out<nn::hid::tmp::ConsoleSixAxisSensorCalibrationValues, void>, nn::applet::AppletResourceUserId, nn::hid::ConsoleSixAxisSensorHandle', "arginfo": 'OutRaw<0x18,2,0>, InRaw<8,8,8>, InRaw<4,4,0>'},
  },
  'nn::irsensor::IIrSensorServer': {
      302: {"inbytes":     8, "outbytes":     0, "name": 'ActivateIrsensor', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      303: {"inbytes":     8, "outbytes":     0, "name": 'DeactivateIrsensor', "pid": True, "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      304: {"inbytes":     8, "outbytes":     0, "name": 'GetIrsensorSharedMemoryHandle', "pid": True, "args": 'Out<NativeHandle, void>, nn::applet::AppletResourceUserId', "arginfo": 'OutHandle<0,1>, InRaw<8,8,0>'},
      305: {"inbytes":  0x10, "outbytes":     0, "name": 'StopImageProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      306: {"inbytes":  0x30, "outbytes":     0, "name": 'RunMomentProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle, nn::irsensor::PackedMomentProcessorConfig const&', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<0x20,8,0x10>'},
      307: {"inbytes":  0x38, "outbytes":     0, "name": 'RunClusteringProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle, nn::irsensor::PackedClusteringProcessorConfig const&', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<0x28,8,0x10>'},
      308: {"inbytes":  0x30, "outbytes":     0, "name": 'RunImageTransferProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle, nn::irsensor::PackedImageTransferProcessorConfig const&, NativeHandle&&, unsigned long', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<0x18,8,0x10>, InHandle<0,1>, InRaw<8,8,0x28>'},
      309: {"inbytes":  0x10, "outbytes":  0x10, "name": 'GetImageTransferProcessorState', "pid": True, "args": 'nn::applet::AppletResourceUserId, Out<nn::irsensor::ImageTransferProcessorState, void>, OutBuffer const&, nn::irsensor::IrCameraHandle', "arginfo": 'InRaw<8,8,8>, OutRaw<0x10,8,0>, Buffer<0,6,0>, InRaw<4,4,0>'},
      310: {"inbytes":  0x18, "outbytes":     0, "name": 'RunTeraPluginProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle, nn::irsensor::PackedTeraPluginProcessorConfig', "arginfo": 'InRaw<8,8,0x10>, InRaw<4,4,0>, InRaw<8,2,4>'},
      311: {"inbytes":     4, "outbytes":     4, "name": 'GetNpadIrCameraHandle', "args": 'Out<nn::irsensor::IrCameraHandle, void>, unsigned int', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
      312: {"inbytes":  0x18, "outbytes":     0, "name": 'RunDpdProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle, nn::irsensor::PackedDpdProcessorConfig const&', "arginfo": 'InRaw<8,8,0x10>, InRaw<4,4,0>, InRaw<0xC,2,4>'},
      313: {"inbytes":  0x10, "outbytes":     0, "name": 'SuspendImageProcessor', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>'},
      314: {"inbytes":  0x10, "outbytes":     0, "name": 'CheckFirmwareVersion', "pid": True, "args": 'nn::applet::AppletResourceUserId, nn::irsensor::IrCameraHandle, nn::irsensor::PackedMcuVersion', "arginfo": 'InRaw<8,8,8>, InRaw<4,4,0>, InRaw<4,2,4>'},
  },
  'nn::irsensor::IIrSensorSystemServer': {
      500: {"inbytes":     8, "outbytes":     0, "name": 'SetAppletResourceUserId', "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      501: {"inbytes":  0x10, "outbytes":     0, "name": 'RegisterAppletResourceUserId', "args": 'nn::applet::AppletResourceUserId, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
      502: {"inbytes":     8, "outbytes":     0, "name": 'UnregisterAppletResourceUserId', "args": 'nn::applet::AppletResourceUserId', "arginfo": 'InRaw<8,8,0>'},
      503: {"inbytes":  0x10, "outbytes":     0, "name": 'EnableAppletToGetInput', "args": 'nn::applet::AppletResourceUserId, bool', "arginfo": 'InRaw<8,8,8>, InRaw<1,1,0>'},
  },
  'nn::capsrv::sf::IScreenShotApplicationService': {
      201: {"inbytes":  0x10, "outbytes":  0x20, "name": 'SaveScreenShot', "pid": True, "args": 'Out<nn::capsrv::ApplicationAlbumEntry, void>, InBuffer const&, unsigned int, nn::applet::AppletResourceUserId, unsigned int', "arginfo": 'OutRaw<0x20,1,0>, Buffer<0,0x45,0>, InRaw<4,4,0>, InRaw<8,8,8>, InRaw<4,4,4>'},
      203: {"inbytes":  0x50, "outbytes":  0x20, "name": 'SaveScreenShotEx0', "pid": True, "args": 'Out<nn::capsrv::ApplicationAlbumEntry, void>, InBuffer const&, nn::capsrv::detail::ScreenShotAttributeEx0 const&, nn::applet::AppletResourceUserId, unsigned int', "arginfo": 'OutRaw<0x20,1,0>, Buffer<0,0x45,0>, InRaw<0x40,4,0>, InRaw<8,8,0x48>, InRaw<4,4,0x40>'},
  },
  'nn::ldn::detail::IUserServiceCreator': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::ldn::detail::IUserLocalCommunicationService': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x480>'},
        2: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        3: {"inbytes":     0, "outbytes":     2, "arginfo": 'OutRaw<2,2,0>'},
        4: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
        5: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,8,0>'},
      100: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
      101: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x480>, Buffer<1,0xA,0>'},
      102: {"inbytes":  0x68, "outbytes":     2, "arginfo": 'Buffer<0,0x22,0>, OutRaw<2,2,0>, InRaw<0x60,8,8>, InRaw<2,2,0>'},
      103: {"inbytes":  0x68, "outbytes":     2, "arginfo": 'Buffer<0,0x22,0>, OutRaw<2,2,0>, InRaw<0x60,8,8>, InRaw<2,2,0>'},
      200: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      201: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      202: {"inbytes":  0x98, "outbytes":     0, "arginfo": 'InRaw<0x20,8,0x78>, InRaw<0x44,2,0>, InRaw<0x30,1,0x44>'},
      203: {"inbytes":  0xB8, "outbytes":     0, "arginfo": 'InRaw<0x20,8,0x98>, InRaw<0x44,2,0>, InRaw<0x20,1,0x44>, InRaw<0x30,1,0x64>, Buffer<0,9,0>'},
      204: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      205: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
      206: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>'},
      207: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
      208: {"inbytes":     6, "outbytes":     0, "arginfo": 'InRaw<6,1,0>'},
      209: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      300: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      301: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      302: {"inbytes":  0x7C, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x480>, InRaw<0x44,2,0>, InRaw<0x30,1,0x44>, InRaw<4,4,0x74>, InRaw<4,4,0x78>'},
      303: {"inbytes":  0xC0, "outbytes":     0, "arginfo": 'InRaw<0x20,8,0xA0>, InRaw<0x44,2,0>, InRaw<0x20,1,0x44>, InRaw<0x30,1,0x64>, InRaw<4,4,0x94>, InRaw<4,4,0x98>'},
      304: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      400: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
      401: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nn::ldn::detail::IMonitorServiceCreator': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::ldn::detail::IMonitorService': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x480>'},
        2: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        3: {"inbytes":     0, "outbytes":     2, "arginfo": 'OutRaw<2,2,0>'},
        4: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
        5: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,8,0>'},
      100: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      101: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nn::ldn::detail::ISystemServiceCreator': {
        0: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutObject<0,0>'},
  },
  'nn::ldn::detail::ISystemLocalCommunicationService': {
        0: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x480>'},
        2: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>'},
        3: {"inbytes":     0, "outbytes":     2, "arginfo": 'OutRaw<2,2,0>'},
        4: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,1,0>'},
        5: {"inbytes":     0, "outbytes":  0x20, "arginfo": 'OutRaw<0x20,8,0>'},
      100: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
      101: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x1A,0x480>, Buffer<1,0xA,0>'},
      102: {"inbytes":  0x68, "outbytes":     2, "arginfo": 'Buffer<0,0x22,0>, OutRaw<2,2,0>, InRaw<0x60,8,8>, InRaw<2,2,0>'},
      103: {"inbytes":  0x68, "outbytes":     2, "arginfo": 'Buffer<0,0x22,0>, OutRaw<2,2,0>, InRaw<0x60,8,8>, InRaw<2,2,0>'},
      200: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      201: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      202: {"inbytes":  0x98, "outbytes":     0, "arginfo": 'InRaw<0x20,8,0x78>, InRaw<0x44,2,0>, InRaw<0x30,1,0x44>'},
      203: {"inbytes":  0xB8, "outbytes":     0, "arginfo": 'InRaw<0x20,8,0x98>, InRaw<0x44,2,0>, InRaw<0x20,1,0x44>, InRaw<0x30,1,0x64>, Buffer<0,9,0>'},
      204: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      205: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
      206: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>'},
      207: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
      208: {"inbytes":     6, "outbytes":     0, "arginfo": 'InRaw<6,1,0>'},
      209: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      300: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      301: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      302: {"inbytes":  0x7C, "outbytes":     0, "arginfo": 'Buffer<0,0x19,0x480>, InRaw<0x44,2,0>, InRaw<0x30,1,0x44>, InRaw<4,4,0x74>, InRaw<4,4,0x78>'},
      303: {"inbytes":  0xC0, "outbytes":     0, "arginfo": 'InRaw<0x20,8,0xA0>, InRaw<0x44,2,0>, InRaw<0x20,1,0x44>, InRaw<0x30,1,0x64>, InRaw<4,4,0x94>, InRaw<4,4,0x98>'},
      304: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
      400: {"inbytes":     8, "outbytes":     0, "pid": True, "arginfo": 'InRaw<8,8,0>'},
      401: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
  },
  'nv::MemoryProfiler::IMemoryProfiler': {
        0: {},
        1: {},
  },
  'nns::nvdrv::INvDrvServices': {
        0: {},
        1: {},
        2: {},
        3: {},
        4: {},
        5: {},
        6: {},
        7: {},
        8: {},
        9: {},
       10: {},
       11: {},
       12: {},
       13: {},
  },
  'nns::hosbinder::IHOSBinderDriver': {
        0: {},
        1: {},
        2: {},
        3: {},
  },
  'nn::fgm::sf::ISession': {
        0: {"inbytes":     0, "outbytes":     0, "name": 'Initialize', "args": 'Out<SharedPointer<nn::fgm::sf::IRequest>, void>', "arginfo": 'OutObject<0,0>'},
  },
  'nn::fgm::sf::IRequest': {
        0: {"inbytes":  0x10, "outbytes":     0, "name": 'Initialize', "pid": True, "args": 'Out<NativeHandle, void>, nn::fgm::Module, unsigned long', "arginfo": 'OutHandle<0,1>, InRaw<4,4,0>, InRaw<8,8,8>'},
        1: {"inbytes":     8, "outbytes":     0, "name": 'Set', "args": 'unsigned int, unsigned int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
        2: {"inbytes":     0, "outbytes":     4, "name": 'Get', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     0, "name": 'Cancel', "args": '', "arginfo": ''},
  },
  'nn::fgm::sf::IDebugger': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'Initialize', "args": 'Out<NativeHandle, void>, NativeHandle&&, unsigned long', "arginfo": 'OutHandle<0,1>, InHandle<0,1>, InRaw<8,8,0>'},
        1: {"inbytes":     0, "outbytes":   0xC, "name": 'Read', "args": 'OutBuffer const&, Out<unsigned int, void>, Out<unsigned int, void>, Out<unsigned int, void>', "arginfo": 'Buffer<0,6,0>, OutRaw<4,4,0>, OutRaw<4,4,4>, OutRaw<4,4,8>'},
        2: {"inbytes":     0, "outbytes":     0, "name": 'Cancel', "args": '', "arginfo": ''},
  },
  'nn::gpio::IManager': {
        0: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        2: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        3: {"inbytes":     4, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
        4: {"inbytes":     0, "outbytes":  0x10, "arginfo": 'OutRaw<0x10,8,0>'},
        5: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
        6: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
  },
  'nn::gpio::IPadSession': {
        0: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        1: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        2: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        4: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
        5: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
        6: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        7: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
        8: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        9: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
       10: {"inbytes":     0, "outbytes":     0, "arginfo": 'OutHandle<0,1>'},
       11: {"inbytes":     0, "outbytes":     0, "arginfo": ''},
       12: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
       13: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
       14: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
       15: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
  },
  'nn::i2c::IManager': {
        0: {"inbytes":  0x10, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,4>, InRaw<2,2,0>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        2: {"inbytes":     4, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
        3: {"inbytes":  0x10, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,4>, InRaw<2,2,0>, InRaw<4,4,8>, InRaw<4,4,0xC>'},
  },
  'nn::i2c::ISession': {
        0: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,5,0>, InRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, InRaw<4,4,0>'},
        2: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,6,0>, Buffer<1,9,0>'},
       10: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,0x21,0>, InRaw<4,4,0>'},
       11: {"inbytes":     4, "outbytes":     0, "arginfo": 'Buffer<0,0x22,0>, InRaw<4,4,0>'},
       12: {"inbytes":     0, "outbytes":     0, "arginfo": 'Buffer<0,0x22,0>, Buffer<1,9,0>'},
  },
  'nn::pcv::detail::IPcvService': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'SetPowerEnabled', "args": 'int, bool', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
        1: {"inbytes":     8, "outbytes":     0, "name": 'SetClockEnabled', "args": 'int, bool', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
        2: {"inbytes":     8, "outbytes":     0, "name": 'SetClockRate', "args": 'int, unsigned int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
        3: {"inbytes":     4, "outbytes":     4, "name": 'GetClockRate', "args": 'Out<unsigned int, void>, int', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
        4: {"inbytes":     4, "outbytes":   0xC, "name": 'GetState', "args": 'Out<nn::pcv::ModuleState, void>, int', "arginfo": 'OutRaw<0xC,4,0>, InRaw<4,4,0>'},
        5: {"inbytes":     8, "outbytes":     8, "name": 'GetPossibleClockRates', "args": 'Out<int, void>, OutArray<unsigned int> const&, Out<int, void>, int, int', "arginfo": 'OutRaw<4,4,0>, Buffer<0,0xA,0>, OutRaw<4,4,4>, InRaw<4,4,0>, InRaw<4,4,4>'},
        6: {"inbytes":     8, "outbytes":     0, "name": 'SetMinVClockRate', "args": 'int, unsigned int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
        7: {"inbytes":     8, "outbytes":     0, "name": 'SetReset', "args": 'int, bool', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
        8: {"inbytes":     8, "outbytes":     0, "name": 'SetVoltageEnabled', "args": 'int, bool', "arginfo": 'InRaw<4,4,4>, InRaw<1,1,0>'},
        9: {"inbytes":     4, "outbytes":     1, "name": 'GetVoltageEnabled', "args": 'Out<bool, void>, int', "arginfo": 'OutRaw<1,1,0>, InRaw<4,4,0>'},
       10: {"inbytes":     4, "outbytes":   0xC, "name": 'GetVoltageRange', "args": 'Out<int, void>, Out<int, void>, Out<int, void>, int', "arginfo": 'OutRaw<4,4,0>, OutRaw<4,4,4>, OutRaw<4,4,8>, InRaw<4,4,0>'},
       11: {"inbytes":     8, "outbytes":     0, "name": 'SetVoltageValue', "args": 'int, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
       12: {"inbytes":     4, "outbytes":     4, "name": 'GetVoltageValue', "args": 'Out<int, void>, int', "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
       13: {"inbytes":     4, "outbytes":     4, "name": 'GetTemperatureThresholds', "args": 'OutArray<nn::pcv::TemperatureThreshold> const&, Out<int, void>, int', "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>, InRaw<4,4,0>'},
       14: {"inbytes":     4, "outbytes":     0, "name": 'SetTemperature', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
       15: {"inbytes":     0, "outbytes":     0, "name": 'Initialize', "args": '', "arginfo": ''},
       16: {"inbytes":     0, "outbytes":     1, "name": 'IsInitialized', "args": 'Out<bool, void>', "arginfo": 'OutRaw<1,1,0>'},
       17: {"inbytes":     0, "outbytes":     0, "name": 'Finalize', "args": '', "arginfo": ''},
       18: {"inbytes":     8, "outbytes":     0, "name": 'PowerOn', "args": 'nn::pcv::PowerControlTarget, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
       19: {"inbytes":     4, "outbytes":     0, "name": 'PowerOff', "args": 'nn::pcv::PowerControlTarget', "arginfo": 'InRaw<4,4,0>'},
       20: {"inbytes":     8, "outbytes":     0, "name": 'ChangeVoltage', "args": 'nn::pcv::PowerControlTarget, int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
       21: {"inbytes":     0, "outbytes":     0, "name": 'GetPowerClockInfoEvent', "args": 'Out<NativeHandle, void>', "arginfo": 'OutHandle<0,1>'},
       22: {"inbytes":     0, "outbytes":     4, "name": 'GetOscillatorClock', "args": 'Out<unsigned int, void>', "arginfo": 'OutRaw<4,4,0>'},
       23: {"inbytes":     8, "outbytes":     4, "name": 'GetDvfsTable', "args": 'OutArray<unsigned int> const&, OutArray<int> const&, Out<int, void>, int, int', "arginfo": 'Buffer<0,0xA,0>, Buffer<1,0xA,0>, OutRaw<4,4,0>, InRaw<4,4,0>, InRaw<4,4,4>'},
       24: {"inbytes":     4, "outbytes":     4, "name": 'GetModuleStateTable', "args": 'OutArray<nn::pcv::ModuleState> const&, Out<int, void>, int', "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>, InRaw<4,4,0>'},
       25: {"inbytes":     4, "outbytes":     4, "name": 'GetPowerDomainStateTable', "args": 'OutArray<nn::pcv::PowerDomainState> const&, Out<int, void>, int', "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>, InRaw<4,4,0>'},
       26: {"inbytes":     4, "outbytes":     4, "name": 'GetFuseInfo', "args": 'OutArray<unsigned int> const&, Out<int, void>, int', "arginfo": 'Buffer<0,0xA,0>, OutRaw<4,4,0>, InRaw<4,4,0>'},
  },
  'nn::pcv::IImmediateManager': {
        0: {"inbytes":     8, "outbytes":     0, "name": 'SetClockRate', "args": 'int, unsigned int', "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>'},
  },
  'nn::pcv::IArbitrationManager': {
        0: {"inbytes":     4, "outbytes":     0, "name": 'ReleaseControl', "args": 'int', "arginfo": 'InRaw<4,4,0>'},
  },
  'nn::pwm::IManager': {
        0: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'OutObject<0,0>, InRaw<4,4,0>'},
  },
  'nn::pwm::IChannelSession': {
        0: {"inbytes":     8, "outbytes":     0, "arginfo": 'InRaw<8,8,0>'},
        1: {"inbytes":     0, "outbytes":     8, "arginfo": 'OutRaw<8,8,0>'},
        2: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        3: {"inbytes":     0, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>'},
        4: {"inbytes":     1, "outbytes":     0, "arginfo": 'InRaw<1,1,0>'},
        5: {"inbytes":     0, "outbytes":     1, "arginfo": 'OutRaw<1,1,0>'},
  },

  # multimedia
  'nn::mmnv::IRequest': {
        0: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        1: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        2: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        3: {"inbytes":     4, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
        4: {"inbytes":   0xC, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        5: {"inbytes":     4, "outbytes":     0, "arginfo": 'InRaw<4,4,0>'},
        6: {"inbytes":   0xC, "outbytes":     0, "arginfo": 'InRaw<4,4,0>, InRaw<4,4,4>, InRaw<4,4,8>'},
        7: {"inbytes":     4, "outbytes":     4, "arginfo": 'OutRaw<4,4,0>, InRaw<4,4,0>'},
  },
}