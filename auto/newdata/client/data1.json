{"nn::timesrv::detail::service::ISystemClock": {"0": {"args": "Out<nn::time::PosixTime, void>", "name": "GetCurrentTime"}, "1": {"args": "nn::time::PosixTime", "name": "SetCurrentTime"}, "2": {"args": "Out<nn::time::SystemClockContext, void>", "name": "GetSystemClockContext"}, "3": {"args": "nn::time::SystemClockContext const&", "name": "SetSystemClockContext"}}, "nn::ldn::detail::ISystemServiceCreator": {"0": {}}, "nn::am::service::IAudioController": {"0": {"args": "float, float", "name": "SetExpectedMasterVolume"}, "1": {"args": "Out<float, void>", "name": "GetMainAppletExpectedMasterVolume"}, "2": {"args": "Out<float, void>", "name": "GetLibraryAppletExpectedMasterVolume"}, "3": {"args": "float, long", "name": "ChangeMainAppletMasterVolume"}, "4": {"args": "float", "name": "SetTransparentVolumeRate"}}, "nn::account::http::IOAuthProcedure": {"0": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "PrepareAsync"}, "1": {"args": "Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>", "name": "GetRequest"}, "2": {"args": "InArray<char> const&", "name": "ApplyResponse"}, "3": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, InArray<char> const&", "name": "ApplyResponseAsync"}, "10": {"args": "Out<nn::account::detail::Uuid, void>", "name": "Suspend"}}, "nn::account::profile::IProfile": {"0": {"args": "Out<nn::account::profile::ProfileBase, void>, Out<nn::account::profile::UserData, void>", "name": "Get"}, "1": {"args": "Out<nn::account::profile::ProfileBase, void>", "name": "GetBase"}, "10": {"args": "Out<unsigned int, void>", "name": "GetImageSize"}, "11": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "LoadImage"}}, "nn::fssrv::sf::IDirectory": {"0": {}, "1": {}}, "nn::account::baas::IGuestLoginRequest": {"0": {"args": "Out<nn::account::detail::Uuid, void>", "name": "GetSessionId"}, "11": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "GetIdTokenCache"}, "12": {"args": "Out<nn::account::NetworkServiceAccountId, void>", "name": "GetAccountId"}, "13": {"args": "Out<nn::account::NintendoAccountId, void>", "name": "GetLinkedNintendoAccountId"}, "14": {"args": "OutArray<char> const&", "name": "GetNickname"}, "15": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "GetProfileImage"}}, "nn::codec::detail::IHardwareOpusDecoderManager": {"0": {}, "1": {}}, "nn::hid::IHidDebugServer": {"0": {"args": "", "name": "DeactivateDebugPad"}, "1": {"args": "nn::hid::debug::DebugPadAutoPilotState const&", "name": "SetDebugPadAutoPilotState"}, "2": {"args": "", "name": "UnsetDebugPadAutoPilotState"}, "131": {"args": "nn::hid::debug::CaptureButtonAutoPilotState", "name": "SetCaptureButtonAutoPilotState"}, "132": {"args": "", "name": "UnsetCaptureButtonAutoPilotState"}, "204": {"args": "Out<long, void>, Out<long, void>", "name": "GetFirmwareUpdateStage"}, "201": {"args": "", "name": "ActivateFirmwareUpdate"}, "10": {"args": "", "name": "DeactivateTouchScreen"}, "11": {"args": "InArray<nn::hid::TouchState> const&", "name": "SetTouchScreenAutoPilotState"}, "12": {"args": "", "name": "UnsetTouchScreenAutoPilotState"}, "130": {"args": "", "name": "DeactivateCaptureButton"}, "206": {"args": "Out<nn::hid::debug::FirmwareVersion, void>, unsigned int, nn::util::BitFlagSet<32, nn::hid::system::NpadDeviceType>", "name": "GetDestinationFirmwareVersion"}, "205": {"args": "Out<nn::hid::debug::FirmwareVersion, void>, unsigned int, nn::util::BitFlagSet<32, nn::hid::system::NpadDeviceType>", "name": "GetFirmwareVersion"}, "20": {"args": "", "name": "DeactivateMouse"}, "21": {"args": "nn::hid::debug::MouseAutoPilotState const&", "name": "SetMouseAutoPilotState"}, "22": {"args": "", "name": "UnsetMouseAutoPilotState"}, "30": {"args": "", "name": "DeactivateKeyboard"}, "31": {"args": "nn::hid::debug::KeyboardAutoPilotState const&", "name": "SetKeyboardAutoPilotState"}, "32": {"args": "", "name": "UnsetKeyboardAutoPilotState"}, "203": {"args": "Out<NativeHandle, void>, unsigned int, nn::util::BitFlagSet<32, nn::hid::system::NpadDeviceType>", "name": "StartFirmwareUpdate"}, "110": {"args": "", "name": "DeactivateHomeButton"}, "111": {"args": "nn::hid::debug::HomeButtonAutoPilotState", "name": "SetHomeButtonAutoPilotState"}, "112": {"args": "", "name": "UnsetHomeButtonAutoPilotState"}, "50": {"args": "nn::hid::BasicXpadId", "name": "DeactivateXpad"}, "51": {"args": "nn::hid::BasicXpadId, nn::hid::debug::BasicXpadAutoPilotState const&", "name": "SetXpadAutoPilotState"}, "52": {"args": "nn::hid::BasicXpadId", "name": "UnsetXpadAutoPilotState"}, "120": {"args": "", "name": "DeactivateSleepButton"}, "121": {"args": "nn::hid::debug::SleepButtonAutoPilotState", "name": "SetSleepButtonAutoPilotState"}, "122": {"args": "", "name": "UnsetSleepButtonAutoPilotState"}, "123": {"args": "", "name": "DeactivateInputDetector"}, "60": {"args": "nn::hid::JoyXpadId", "name": "DeactivateJoyXpad"}, "202": {"args": "", "name": "DeactivateFirmwareUpdate"}}, "nn::audio::detail::IFinalOutputRecorderManagerForApplet": {"0": {}, "1": {}}, "nn::account::IAccountServiceForSystemService": {"0": {"args": "Out<int, void>", "name": "GetUserCount"}, "1": {"args": "Out<bool, void>, nn::account::Uid const&", "name": "GetUserExistence"}, "2": {"args": "OutArray<nn::account::Uid> const&", "name": "ListAllUsers"}, "3": {"args": "OutArray<nn::account::Uid> const&", "name": "ListOpenUsers"}, "4": {"args": "Out<nn::account::Uid, void>", "name": "GetLastOpenedUser"}, "5": {"args": "Out<SharedPointer<nn::account::profile::IProfile>, void>, nn::account::Uid const&", "name": "GetProfile"}, "102": {"args": "Out<SharedPointer<nn::account::baas::IManagerForSystemService>, void>, nn::account::Uid const&", "name": "GetBaasAccountManagerForSystemService"}, "103": {"args": "Out<SharedPointer<nn::account::detail::INotifier>, void>", "name": "GetBaasUserAvailabilityChangeNotifier"}, "999": {"args": "nn::account::Uid const&", "name": "DebugSetUserStateOpen"}, "110": {"args": "nn::account::Uid const&, nn::ApplicationId, InBuffer const&", "name": "StoreSaveDataThumbnail"}, "111": {"args": "nn::account::Uid const&, nn::ApplicationId", "name": "ClearSaveDataThumbnail"}, "112": {"args": "Out<unsigned int, void>, OutBuffer const&, nn::account::Uid const&, nn::ApplicationId", "name": "LoadSaveDataThumbnail"}, "50": {"args": "Out<bool, void>, unsigned long", "name": "IsUserRegistrationRequestPermitted"}, "51": {"args": "Out<nn::account::Uid, void>, bool", "name": "TrySelectUserWithoutInteraction"}, "998": {"args": "nn::account::Uid const&", "name": "DebugSetUserStateClose"}, "100": {"args": "Out<SharedPointer<nn::account::detail::INotifier>, void>", "name": "GetUserRegistrationNotifier"}, "190": {"args": "Out<nn::ApplicationId, void>, Out<unsigned int, void>, nn::account::Uid const&", "name": "GetUserLastOpenedApplication"}, "101": {"args": "Out<SharedPointer<nn::account::detail::INotifier>, void>", "name": "GetUserStateChangeNotifier"}}, "nn::settings::IFactorySettingsServer": {"0": {"args": "Out<nn::settings::factory::BdAddress, void>", "name": "GetBluetoothBdAddress"}, "1": {"args": "Out<nn::settings::factory::ConfigurationId1, void>", "name": "GetConfigurationId1"}, "2": {"args": "Out<nn::settings::factory::AccelerometerOffset, void>", "name": "GetAccelerometerOffset"}, "3": {"args": "Out<nn::settings::factory::AccelerometerScale, void>", "name": "GetAccelerometerScale"}, "4": {"args": "Out<nn::settings::factory::GyroscopeOffset, void>", "name": "GetGyroscopeOffset"}, "5": {"args": "Out<nn::settings::factory::GyroscopeScale, void>", "name": "GetGyroscopeScale"}, "6": {"args": "Out<nn::settings::factory::MacAddress, void>", "name": "GetWirelessLanMacAddress"}, "7": {"args": "Out<int, void>", "name": "GetWirelessLanCountryCodeCount"}, "8": {"args": "Out<int, void>, OutArray<nn::settings::factory::CountryCode> const&", "name": "GetWirelessLanCountryCodes"}, "9": {"args": "Out<nn::settings::factory::SerialNumber, void>", "name": "GetSerialNumber"}, "10": {"args": "nn::ncm::ProgramId", "name": "SetInitialSystemAppletProgramId"}, "11": {"args": "nn::ncm::ProgramId", "name": "SetOverlayDispProgramId"}, "12": {"args": "Out<nn::settings::factory::BatteryLot, void>", "name": "GetBatteryLot"}, "14": {"args": "Out<nn::settings::factory::EccB233DeviceCertificate, void>", "name": "GetEciDeviceCertificate"}, "15": {"args": "Out<nn::settings::factory::Rsa2048DeviceCertificate, void>", "name": "GetEticketDeviceCertificate"}, "16": {"args": "Out<nn::settings::factory::SslKey, void>", "name": "GetSslKey"}, "17": {"args": "Out<nn::settings::factory::SslCertificate, void>", "name": "GetSslCertificate"}, "18": {"args": "Out<nn::settings::factory::GameCardKey, void>", "name": "GetGameCardKey"}, "19": {"args": "Out<nn::settings::factory::GameCardCertificate, void>", "name": "GetGameCardCertificate"}, "20": {"args": "Out<nn::settings::factory::EccB233DeviceKey, void>", "name": "GetEciDeviceKey"}, "21": {"args": "Out<nn::settings::factory::Rsa2048DeviceKey, void>", "name": "GetEticketDeviceKey"}, "22": {"args": "Out<nn::settings::factory::SpeakerParameter, void>", "name": "GetSpeakerParameter"}}, "nv::MemoryProfiler::IMemoryProfiler": {"0": {}, "1": {}}, "nn::account::baas::IAdministrator": {"0": {"args": "", "name": "CheckAvailability"}, "1": {"args": "Out<nn::account::NetworkServiceAccountId, void>", "name": "GetAccountId"}, "2": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "EnsureIdTokenCacheAsync"}, "3": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "LoadIdTokenCache"}, "132": {"args": "Out<bool, void>, Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, unsigned int", "name": "RefreshNintendoAccountUserResourceCacheAsyncIfSecondsElapsed"}, "130": {"args": "Out<nn::account::NintendoAccountId, void>, Out<nn::account::nas::NasUserBase, void>, OutBuffer const&", "name": "GetNintendoAccountUserResourceCache"}, "256": {"args": "Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>, nn::account::detail::Uuid const&", "name": "ResumeProcedureToUpdateLinkageStateOfNintendoAccount"}, "131": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "RefreshNintendoAccountUserResourceCacheAsync"}, "150": {"args": "Out<SharedPointer<nn::account::nas::IAuthorizationRequest>, void>, nn::account::nas::NasClientInfo const&, nn::account::NintendoAccountAuthorizationRequestParameters const&, NativeHandle&&, unsigned int", "name": "CreateAuthorizationRequest"}, "280": {"args": "Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>, nn::account::detail::Uuid const&", "name": "ProxyProcedureToAcquireApplicationAuthorizationForNintendoAccount"}, "200": {"args": "Out<bool, void>", "name": "IsRegistered"}, "201": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "RegisterAsync"}, "202": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "UnregisterAsync"}, "203": {"args": "", "name": "DeleteRegistrationInfoLocally"}, "220": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "SynchronizeProfileAsync"}, "100": {"args": "nn::account::SystemProgramIdentification const&, unsigned long", "name": "SetSystemProgramIdentification"}, "997": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "DebugUnlinkNintendoAccountAsync"}, "998": {"args": "unsigned int", "name": "DebugSetAvailabilityErrorDetail"}, "999": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "DebugUploadProfileAsync"}, "120": {"args": "Out<nn::account::NintendoAccountId, void>", "name": "GetNintendoAccountId"}, "250": {"args": "Out<bool, void>", "name": "IsLinkedWithNintendoAccount"}, "251": {"args": "Out<SharedPointer<nn::account::nas::IOAuthProcedureForNintendoAccountLinkage>, void>", "name": "CreateProcedureToLinkWithNintendoAccount"}, "252": {"args": "Out<SharedPointer<nn::account::nas::IOAuthProcedureForNintendoAccountLinkage>, void>, nn::account::detail::Uuid const&", "name": "ResumeProcedureToLinkWithNintendoAccount"}, "255": {"args": "Out<SharedPointer<nn::account::http::IOAuthProcedure>, void>", "name": "CreateProcedureToUpdateLinkageStateOfNintendoAccount"}}, "nn::account::baas::IManagerForSystemService": {"0": {"args": "", "name": "CheckAvailability"}, "1": {"args": "Out<nn::account::NetworkServiceAccountId, void>", "name": "GetAccountId"}, "2": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "EnsureIdTokenCacheAsync"}, "3": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "LoadIdTokenCache"}, "100": {"args": "nn::account::SystemProgramIdentification const&, unsigned long", "name": "SetSystemProgramIdentification"}, "131": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "RefreshNintendoAccountUserResourceCacheAsync"}, "150": {"args": "Out<SharedPointer<nn::account::nas::IAuthorizationRequest>, void>, nn::account::nas::NasClientInfo const&, nn::account::NintendoAccountAuthorizationRequestParameters const&, NativeHandle&&, unsigned int", "name": "CreateAuthorizationRequest"}, "120": {"args": "Out<nn::account::NintendoAccountId, void>", "name": "GetNintendoAccountId"}, "132": {"args": "Out<bool, void>, Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, unsigned int", "name": "RefreshNintendoAccountUserResourceCacheAsyncIfSecondsElapsed"}, "130": {"args": "Out<nn::account::NintendoAccountId, void>, Out<nn::account::nas::NasUserBase, void>, OutBuffer const&", "name": "GetNintendoAccountUserResourceCache"}}, "nn::am::service::IAppletAccessor": {"0": {"args": "Out<NativeHandle, void>", "name": "GetAppletStateChangedEvent"}, "1": {"args": "Out<bool, void>", "name": "IsCompleted"}, "10": {"args": "", "name": "Start"}, "20": {"args": "", "name": "RequestExit"}, "25": {"args": "", "name": "Terminate"}, "30": {"args": "", "name": "GetResult"}}, "nn::pwm::IChannelSession": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}}, "nn::settings::ISettingsServer": {"0": {"args": "Out<nn::settings::LanguageCode, void>", "name": "GetLanguageCode"}, "1": {"args": "Out<int, void>, OutArray<nn::settings::LanguageCode> const&", "name": "GetAvailableLanguageCodes"}, "3": {"args": "Out<int, void>", "name": "GetAvailableLanguageCodeCount"}, "4": {"args": "Out<int, void>", "name": "GetRegionCode"}}, "nn::audio::detail::IAudioInManagerForDebugger": {"0": {}, "1": {}}, "nn::am::service::IStorageAccessor": {"0": {"args": "Out<long, void>", "name": "GetSize"}, "10": {"args": "long, InBuffer const&", "name": "Write"}, "11": {"args": "long, OutBuffer const&", "name": "Read"}}, "nn::pcv::IImmediateManager": {"0": {"args": "int, unsigned int", "name": "SetClockRate"}}, "nn::am::service::ILibraryAppletAccessor": {"0": {"args": "Out<NativeHandle, void>", "name": "GetAppletStateChangedEvent"}, "1": {"args": "Out<bool, void>", "name": "IsCompleted"}, "100": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushInData"}, "101": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopOutData"}, "102": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushExtraStorage"}, "103": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushInteractiveInData"}, "104": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopInteractiveOutData"}, "105": {"args": "Out<NativeHandle, void>", "name": "GetPopOutDataEvent"}, "10": {"args": "", "name": "Start"}, "110": {"args": "Out<bool, void>", "name": "NeedsToExitProcess"}, "20": {"args": "", "name": "RequestExit"}, "150": {"args": "", "name": "RequestForAppletToGetForeground"}, "120": {"args": "Out<nn::am::service::LibraryAppletInfo, void>", "name": "GetLibraryAppletInfo"}, "25": {"args": "", "name": "Terminate"}, "106": {"args": "Out<NativeHandle, void>", "name": "GetPopInteractiveOutDataEvent"}, "30": {"args": "", "name": "GetResult"}}, "nn::audio::detail::IAudioRenderer": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}}, "nn::i2c::ISession": {"0": {}, "1": {}, "2": {}, "10": {}, "11": {}, "12": {}}, "nn::audio::detail::IAudioOutManagerForDebugger": {"0": {}, "1": {}}, "nn::fssrv::sf::IFile": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}}, "nn::fssrv::sf::ISaveDataInfoReader": {"0": {}}, "nn::visrv::sf::IManagerDisplayService": {"8000": {"args": "unsigned long, bool", "name": "SetConductorLayer"}, "7000": {"args": "bool", "name": "SetContentVisibility"}, "2010": {"args": "Out<unsigned long, void>, unsigned long, unsigned int, nn::applet::AppletResourceUserId", "name": "CreateManagedLayer"}, "2011": {"args": "unsigned long", "name": "DestroyManagedLayer"}, "2402": {"args": "Out<unsigned int, void>, unsigned long", "name": "GetDisplayHotplugState"}, "4201": {"args": "unsigned long, float", "name": "SetDisplayAlpha"}, "4203": {"args": "unsigned long, unsigned int", "name": "SetDisplayLayerStack"}, "4205": {"args": "unsigned long, unsigned int", "name": "SetDisplayPowerState"}, "6000": {"args": "unsigned long, unsigned int", "name": "AddToLayerStack"}, "6001": {"args": "unsigned long, unsigned int", "name": "RemoveFromLayerStack"}, "2300": {"args": "Out<NativeHandle, void>, unsigned long", "name": "AcquireLayerTexturePresentingEvent"}, "2301": {"args": "unsigned long", "name": "ReleaseLayerTexturePresentingEvent"}, "2302": {"args": "Out<NativeHandle, void>, unsigned long", "name": "GetDisplayHotplugEvent"}}, "nn::account::nas::IOAuthProcedureForGuestLogin": {"0": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "PrepareAsync"}, "1": {"args": "Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>", "name": "GetRequest"}, "2": {"args": "InArray<char> const&", "name": "ApplyResponse"}, "3": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, InArray<char> const&", "name": "ApplyResponseAsync"}, "100": {"args": "Out<nn::account::NetworkServiceAccountId, void>", "name": "GetAccountId"}, "101": {"args": "Out<nn::account::NintendoAccountId, void>", "name": "GetLinkedNintendoAccountId"}, "102": {"args": "OutArray<char> const&", "name": "GetNickname"}, "103": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "GetProfileImage"}, "10": {"args": "Out<nn::account::detail::Uuid, void>", "name": "Suspend"}}, "nn::account::detail::IAsyncContext": {"0": {"args": "Out<NativeHandle, void>", "name": "GetSystemEvent"}, "1": {"args": "", "name": "Cancel"}, "2": {"args": "Out<bool, void>", "name": "HasDone"}, "3": {"args": "", "name": "GetResult"}}, "nn::am::service::IDisplayController": {"0": {"args": "OutBuffer const&", "name": "GetLastForegroundCaptureImage"}, "1": {"args": "", "name": "UpdateLastForegroundCaptureImage"}, "2": {"args": "OutBuffer const&", "name": "GetLastApplicationCaptureImage"}, "3": {"args": "OutBuffer const&", "name": "GetCallerAppletCaptureImage"}, "4": {"args": "", "name": "UpdateCallerAppletCaptureImage"}, "5": {"args": "Out<bool, void>, OutBuffer const&", "name": "GetLastForegroundCaptureImageEx"}, "6": {"args": "Out<bool, void>, OutBuffer const&", "name": "GetLastApplicationCaptureImageEx"}, "7": {"args": "Out<bool, void>, OutBuffer const&", "name": "GetCallerAppletCaptureImageEx"}, "10": {"args": "Out<NativeHandle, void>", "name": "AcquireLastApplicationCaptureBuffer"}, "11": {"args": "", "name": "ReleaseLastApplicationCaptureBuffer"}, "12": {"args": "Out<NativeHandle, void>", "name": "AcquireLastForegroundCaptureBuffer"}, "13": {"args": "", "name": "ReleaseLastForegroundCaptureBuffer"}, "14": {"args": "Out<NativeHandle, void>", "name": "AcquireCallerAppletCaptureBuffer"}, "15": {"args": "", "name": "ReleaseCallerAppletCaptureBuffer"}, "16": {"args": "Out<bool, void>, Out<NativeHandle, void>", "name": "AcquireLastApplicationCaptureBufferEx"}, "17": {"args": "Out<bool, void>, Out<NativeHandle, void>", "name": "AcquireLastForegroundCaptureBufferEx"}, "18": {"args": "Out<bool, void>, Out<NativeHandle, void>", "name": "AcquireCallerAppletCaptureBufferEx"}}, "nn::pl::detail::ISharedFontManager": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}}, "nn::am::service::IWindow": {}, "nn::fssrv::sf::IEventNotifier": {"0": {}}, "nn::settings::IFirmwareDebugSettingsServer": {"2": {"args": "nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&, InBuffer const&", "name": "SetSettingsItemValue"}, "3": {"args": "nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&", "name": "ResetSettingsItemValue"}, "4": {"args": "Out<SharedPointer<nn::settings::ISettingsItemKeyIterator>, void>, nn::settings::SettingsName const&", "name": "CreateSettingsItemKeyIterator"}}, "nn::fssrv::sf::IProgramRegistry": {"0": {}, "1": {}, "256": {}}, "nn::settings::ISystemSettingsServer": {"0": {"args": "nn::settings::LanguageCode", "name": "SetLanguageCode"}, "1": {"args": "InArray<nn::settings::system::NetworkSettings> const&", "name": "SetNetworkSettings"}, "2": {"args": "Out<int, void>, OutArray<nn::settings::system::NetworkSettings> const&", "name": "GetNetworkSettings"}, "3": {"args": "Out<nn::settings::system::FirmwareVersion, void>", "name": "GetFirmwareVersion"}, "7": {"args": "Out<bool, void>", "name": "GetLockScreenFlag"}, "8": {"args": "bool", "name": "SetLockScreenFlag"}, "9": {"args": "Out<nn::settings::system::BacklightSettings, void>", "name": "GetBacklightSettings"}, "10": {"args": "nn::settings::system::BacklightSettings const&", "name": "SetBacklightSettings"}, "11": {"args": "InArray<nn::settings::system::BluetoothDevicesSettings> const&", "name": "SetBluetoothDevicesSettings"}, "12": {"args": "Out<int, void>, OutArray<nn::settings::system::BluetoothDevicesSettings> const&", "name": "GetBluetoothDevicesSettings"}, "13": {"args": "Out<nn::util::Uuid, void>", "name": "GetExternalSteadyClockSourceId"}, "14": {"args": "nn::util::Uuid const&", "name": "SetExternalSteadyClockSourceId"}, "15": {"args": "Out<nn::settings::system::SystemClockContext, void>", "name": "GetUserSystemClockContext"}, "16": {"args": "nn::settings::system::SystemClockContext const&", "name": "SetUserSystemClockContext"}, "17": {"args": "Out<nn::settings::system::AccountSettings, void>", "name": "GetAccountSettings"}, "18": {"args": "nn::settings::system::AccountSettings", "name": "SetAccountSettings"}, "19": {"args": "Out<nn::settings::system::AudioVolume, void>, int", "name": "GetAudioVolume"}, "20": {"args": "nn::settings::system::AudioVolume, int", "name": "SetAudioVolume"}, "21": {"args": "Out<int, void>, OutArray<nn::settings::system::EulaVersion> const&", "name": "GetEulaVersions"}, "22": {"args": "InArray<nn::settings::system::EulaVersion> const&", "name": "SetEulaVersions"}, "23": {"args": "Out<int, void>", "name": "GetColorSetId"}, "24": {"args": "int", "name": "SetColorSetId"}, "25": {"args": "Out<bool, void>", "name": "GetConsoleInformationUploadFlag"}, "26": {"args": "bool", "name": "SetConsoleInformationUploadFlag"}, "27": {"args": "Out<bool, void>", "name": "GetAutomaticApplicationDownloadFlag"}, "28": {"args": "bool", "name": "SetAutomaticApplicationDownloadFlag"}, "29": {"args": "Out<nn::settings::system::NotificationSettings, void>", "name": "GetNotificationSettings"}, "30": {"args": "nn::settings::system::NotificationSettings const&", "name": "SetNotificationSettings"}, "31": {"args": "Out<int, void>, OutArray<nn::settings::system::AccountNotificationSettings> const&", "name": "GetAccountNotificationSettings"}, "32": {"args": "InArray<nn::settings::system::AccountNotificationSettings> const&", "name": "SetAccountNotificationSettings"}, "35": {"args": "Out<float, void>", "name": "GetVibrationMasterVolume"}, "36": {"args": "float", "name": "SetVibrationMasterVolume"}, "37": {"args": "Out<unsigned long, void>, nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&", "name": "GetSettingsItemValueSize"}, "38": {"args": "Out<unsigned long, void>, OutBuffer const&, nn::settings::SettingsName const&, nn::settings::SettingsItemKey const&", "name": "GetSettingsItemValue"}, "39": {"args": "Out<nn::settings::system::TvSettings, void>", "name": "GetTvSettings"}, "40": {"args": "nn::settings::system::TvSettings const&", "name": "SetTvSettings"}, "41": {"args": "Out<nn::settings::system::Edid, void>", "name": "GetEdid"}, "42": {"args": "nn::settings::system::Edid const&", "name": "SetEdid"}, "43": {"args": "Out<int, void>, int", "name": "GetAudioOutputMode"}, "44": {"args": "int, int", "name": "SetAudioOutputMode"}, "45": {"args": "Out<bool, void>", "name": "IsForceMuteOnHeadphoneRemoved"}, "46": {"args": "bool", "name": "SetForceMuteOnHeadphoneRemoved"}, "47": {"args": "Out<bool, void>", "name": "GetQuestFlag"}, "48": {"args": "bool", "name": "SetQuestFlag"}, "49": {"args": "Out<nn::settings::system::DataDeletionSettings, void>", "name": "GetDataDeletionSettings"}, "50": {"args": "nn::settings::system::DataDeletionSettings", "name": "SetDataDeletionSettings"}, "51": {"args": "Out<nn::ncm::ProgramId, void>", "name": "GetInitialSystemAppletProgramId"}, "52": {"args": "Out<nn::ncm::ProgramId, void>", "name": "GetOverlayDispProgramId"}, "53": {"args": "Out<nn::time::LocationName, void>", "name": "GetDeviceTimeZoneLocationName"}, "54": {"args": "nn::time::LocationName const&", "name": "SetDeviceTimeZoneLocationName"}, "55": {"args": "Out<unsigned long, void>", "name": "GetWirelessCertificationFileSize"}, "56": {"args": "Out<unsigned long, void>, OutBuffer const&", "name": "GetWirelessCertificationFile"}, "57": {"args": "int", "name": "SetRegionCode"}, "58": {"args": "Out<nn::settings::system::SystemClockContext, void>", "name": "GetNetworkSystemClockContext"}, "59": {"args": "nn::settings::system::SystemClockContext const&", "name": "SetNetworkSystemClockContext"}, "60": {"args": "Out<bool, void>", "name": "IsUserSystemClockAutomaticCorrectionEnabled"}, "61": {"args": "bool", "name": "SetUserSystemClockAutomaticCorrectionEnabled"}, "62": {"args": "Out<bool, void>", "name": "GetDebugModeFlag"}, "63": {"args": "Out<int, void>", "name": "GetPrimaryAlbumStorage"}, "64": {"args": "int", "name": "SetPrimaryAlbumStorage"}, "65": {"args": "Out<bool, void>", "name": "GetUsb30EnableFlag"}, "66": {"args": "bool", "name": "SetUsb30EnableFlag"}, "67": {"args": "Out<nn::settings::system::BatteryLot, void>", "name": "GetBatteryLot"}, "68": {"args": "Out<nn::settings::system::SerialNumber, void>", "name": "GetSerialNumber"}, "69": {"args": "Out<bool, void>", "name": "GetNfcEnableFlag"}, "70": {"args": "bool", "name": "SetNfcEnableFlag"}, "71": {"args": "Out<nn::settings::system::SleepSettings, void>", "name": "GetSleepSettings"}, "72": {"args": "nn::settings::system::SleepSettings const&", "name": "SetSleepSettings"}, "73": {"args": "Out<bool, void>", "name": "GetWirelessLanEnableFlag"}, "74": {"args": "bool", "name": "SetWirelessLanEnableFlag"}, "75": {"args": "Out<nn::settings::system::InitialLaunchSettings, void>", "name": "GetInitialLaunchSettings"}, "76": {"args": "nn::settings::system::InitialLaunchSettings const&", "name": "SetInitialLaunchSettings"}, "77": {"args": "Out<nn::settings::system::DeviceNickName, void>", "name": "GetDeviceNickName"}, "78": {"args": "nn::settings::system::DeviceNickName const&", "name": "SetDeviceNickName"}, "79": {"args": "Out<int, void>", "name": "GetProductModel"}, "80": {"args": "Out<int, void>", "name": "GetLdnChannel"}, "81": {"args": "int", "name": "SetLdnChannel"}, "82": {"args": "Out<NativeHandle, void>", "name": "AcquireTelemetryDirtyFlagEventHandle"}, "83": {"args": "Out<nn::util::BitFlagSet<128, nn::settings::system::TelemetryDirtyFlag>, void>", "name": "GetTelemetryDirtyFlags"}, "84": {"args": "Out<nn::settings::factory::BatteryLot, void>", "name": "GetPtmBatteryLot"}, "85": {"args": "nn::settings::factory::BatteryLot const&", "name": "SetPtmBatteryLot"}, "86": {"args": "Out<nn::settings::system::PtmFuelGaugeParameter, void>", "name": "GetPtmFuelGaugeParameter"}, "87": {"args": "nn::settings::system::PtmFuelGaugeParameter const&", "name": "SetPtmFuelGaugeParameter"}, "88": {"args": "Out<bool, void>", "name": "GetBluetoothEnableFlag"}, "89": {"args": "bool", "name": "SetBluetoothEnableFlag"}, "90": {"args": "Out<nn::util::Uuid, void>", "name": "GetMiiAuthorId"}, "91": {"args": "long", "name": "SetShutdownRtcValue"}, "92": {"args": "Out<long, void>", "name": "GetShutdownRtcValue"}, "93": {"args": "Out<NativeHandle, void>", "name": "AcquireFatalDirtyFlagEventHandle"}, "94": {"args": "Out<nn::util::BitFlagSet<128, nn::settings::system::FatalDirtyFlag>, void>", "name": "GetFatalDirtyFlags"}}, "nn::pcm::IManager": {"0": {}, "1": {}}, "nn::nfp::detail::IDebugManager": {"0": {}}, "nn::am::service::IWindowController": {"0": {"args": "Out<SharedPointer<nn::am::service::IWindow>, void>, nn::am::service::WindowCreationOption", "name": "CreateWindow"}, "1": {"args": "Out<nn::applet::AppletResourceUserId, void>", "name": "GetAppletResourceUserId"}, "10": {"args": "", "name": "AcquireForegroundRights"}, "11": {"args": "", "name": "ReleaseForegroundRights"}, "12": {"args": "", "name": "RejectToChangeIntoBackground"}}, "nn::hid::IHidServer": {"0": {"args": "Out<SharedPointer<nn::hid::IAppletResource>, void>, nn::applet::AppletResourceUserId", "name": "CreateAppletResource"}, "1": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateDebugPad"}, "130": {"args": "nn::applet::AppletResourceUserId, unsigned int, unsigned int", "name": "SwapNpadAssignment"}, "131": {"args": "Out<bool, void>, nn::applet::AppletResourceUserId, unsigned int", "name": "IsUnintendedHomeButtonInputProtectionEnabled"}, "132": {"args": "nn::applet::AppletResourceUserId, unsigned int, bool", "name": "EnableUnintendedHomeButtonInputProtection"}, "129": {"args": "nn::applet::AppletResourceUserId, Out<long, void>", "name": "GetNpadHandheldActivationMode"}, "128": {"args": "nn::applet::AppletResourceUserId, long", "name": "SetNpadHandheldActivationMode"}, "11": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateTouchScreen"}, "205": {"args": "Out<bool, void>", "name": "IsVibrationPermitted"}, "21": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateMouse"}, "202": {"args": "Out<nn::hid::VibrationValue, void>, nn::applet::AppletResourceUserId, nn::hid::VibrationDeviceHandle", "name": "GetActualVibrationValue"}, "201": {"args": "nn::applet::AppletResourceUserId, nn::hid::VibrationDeviceHandle, nn::hid::VibrationValue const&", "name": "SendVibrationValue"}, "31": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateKeyboard"}, "40": {"args": "Out<NativeHandle, void>, unsigned long", "name": "AcquireXpadIdEventHandle"}, "41": {"args": "unsigned long", "name": "ReleaseXpadIdEventHandle"}, "200": {"args": "Out<nn::hid::VibrationDeviceInfoForIpc, void>, nn::hid::VibrationDeviceHandle", "name": "GetVibrationDeviceInfo"}, "51": {"args": "nn::applet::AppletResourceUserId, nn::hid::BasicXpadId", "name": "ActivateXpad"}, "55": {"args": "Out<long, void>, OutArray<nn::hid::BasicXpadId> const&", "name": "GetXpadIds"}, "56": {"args": "nn::hid::JoyXpadId", "name": "ActivateJoyXpad"}, "58": {"args": "Out<NativeHandle, void>, nn::hid::JoyXpadId", "name": "GetJoyXpadLifoHandle"}, "59": {"args": "Out<long, void>, OutArray<nn::hid::JoyXpadId> const&", "name": "GetJoyXpadIds"}, "60": {"args": "nn::hid::BasicXpadId", "name": "ActivateSixAxisSensor"}, "61": {"args": "nn::hid::BasicXpadId", "name": "DeactivateSixAxisSensor"}, "62": {"args": "Out<NativeHandle, void>, nn::hid::BasicXpadId", "name": "GetSixAxisSensorLifoHandle"}, "63": {"args": "nn::hid::JoyXpadId", "name": "ActivateJoySixAxisSensor"}, "64": {"args": "nn::hid::JoyXpadId", "name": "DeactivateJoySixAxisSensor"}, "65": {"args": "Out<NativeHandle, void>, nn::hid::JoyXpadId", "name": "GetJoySixAxisSensorLifoHandle"}, "66": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "StartSixAxisSensor"}, "67": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "StopSixAxisSensor"}, "68": {"args": "Out<bool, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "IsSixAxisSensorFusionEnabled"}, "69": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, bool", "name": "EnableSixAxisSensorFusion"}, "70": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, float, float", "name": "SetSixAxisSensorFusionParameters"}, "71": {"args": "Out<float, void>, Out<float, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "GetSixAxisSensorFusionParameters"}, "72": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "ResetSixAxisSensorFusionParameters"}, "73": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, float, float", "name": "SetAccelerometerParameters"}, "74": {"args": "Out<float, void>, Out<float, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "GetAccelerometerParameters"}, "75": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "ResetAccelerometerParameters"}, "76": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, unsigned int", "name": "SetAccelerometerPlayMode"}, "77": {"args": "Out<unsigned int, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "GetAccelerometerPlayMode"}, "78": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "ResetAccelerometerPlayMode"}, "79": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle, unsigned int", "name": "SetGyroscopeZeroDriftMode"}, "80": {"args": "Out<unsigned int, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "GetGyroscopeZeroDriftMode"}, "81": {"args": "nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "ResetGyroscopeZeroDriftMode"}, "82": {"args": "Out<bool, void>, nn::applet::AppletResourceUserId, nn::hid::SixAxisSensorHandle", "name": "IsSixAxisSensorAtRest"}, "206": {"args": "nn::applet::AppletResourceUserId, InArray<nn::hid::VibrationDeviceHandle> const&, InArray<nn::hid::VibrationValue> const&", "name": "SendVibrationValues"}, "203": {"args": "Out<SharedPointer<nn::hid::IActiveVibrationDeviceList>, void>", "name": "CreateActiveVibrationDeviceList"}, "100": {"args": "nn::applet::AppletResourceUserId, nn::util::BitFlagSet<32, nn::hid::NpadStyleTag>", "name": "SetSupportedNpadStyleSet"}, "101": {"args": "nn::applet::AppletResourceUserId, Out<nn::util::BitFlagSet<32, nn::hid::NpadStyleTag>, void>", "name": "GetSupportedNpadStyleSet"}, "102": {"args": "nn::applet::AppletResourceUserId, InArray<unsigned int> const&", "name": "SetSupportedNpadIdType"}, "103": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateNpad"}, "104": {"args": "nn::applet::AppletResourceUserId", "name": "DeactivateNpad"}, "1001": {"args": "Out<long, void>", "name": "GetNpadCommunicationMode"}, "106": {"args": "nn::applet::AppletResourceUserId, Out<NativeHandle, void>, unsigned int, unsigned long", "name": "AcquireNpadStyleSetUpdateEventHandle"}, "107": {"args": "nn::applet::AppletResourceUserId, unsigned int", "name": "DisconnectNpad"}, "108": {"args": "Out<unsigned long, void>, unsigned int", "name": "GetPlayerLedPattern"}, "1000": {"args": "nn::applet::AppletResourceUserId, long", "name": "SetNpadCommunicationMode"}, "204": {"args": "bool", "name": "PermitVibration"}, "120": {"args": "nn::applet::AppletResourceUserId, long", "name": "SetNpadJoyHoldType"}, "121": {"args": "nn::applet::AppletResourceUserId, Out<long, void>", "name": "GetNpadJoyHoldType"}, "122": {"args": "nn::applet::AppletResourceUserId, unsigned int", "name": "SetNpadJoyAssignmentModeSingleByDefault"}, "123": {"args": "nn::applet::AppletResourceUserId, unsigned int, long", "name": "SetNpadJoyAssignmentModeSingle"}, "124": {"args": "nn::applet::AppletResourceUserId, unsigned int", "name": "SetNpadJoyAssignmentModeDual"}, "125": {"args": "nn::applet::AppletResourceUserId, unsigned int, unsigned int", "name": "MergeSingleJoyAsDualJoy"}, "126": {"args": "nn::applet::AppletResourceUserId", "name": "StartLrAssignmentMode"}, "127": {"args": "nn::applet::AppletResourceUserId", "name": "StopLrAssignmentMode"}}, "nn::nfp::detail::IUserManager": {"0": {}}, "nn::nifm::detail::IGeneralService": {"1": {"args": "Out<nn::nifm::ClientId, void>", "name": "GetClientId"}, "2": {"args": "Out<SharedPointer<nn::nifm::detail::IScanRequest>, void>", "name": "CreateScanRequest"}, "4": {"args": "Out<SharedPointer<nn::nifm::detail::IRequest>, void>, int", "name": "CreateRequest"}, "5": {"args": "Out<nn::nifm::detail::sf::NetworkProfileData, void>", "name": "GetCurrentNetworkProfile"}, "6": {"args": "OutArray<nn::nifm::detail::sf::NetworkInterfaceInfo> const&, Out<int, void>, unsigned int", "name": "EnumerateNetworkInterfaces"}, "7": {"args": "OutArray<nn::nifm::detail::sf::NetworkProfileBasicInfo> const&, Out<int, void>, unsigned char", "name": "EnumerateNetworkProfiles"}, "8": {"args": "Out<nn::nifm::detail::sf::NetworkProfileData, void>, nn::util::Uuid const&", "name": "GetNetworkProfile"}, "9": {"args": "Out<nn::util::Uuid, void>, nn::nifm::detail::sf::NetworkProfileData const&", "name": "SetNetworkProfile"}, "10": {"args": "nn::util::Uuid const&", "name": "RemoveNetworkProfile"}, "11": {"args": "OutArray<nn::nifm::detail::sf::AccessPointData> const&, Out<int, void>", "name": "GetScanData"}, "12": {"args": "Out<nn::nifm::IpV4Address, void>", "name": "GetCurrentIpAddress"}, "13": {"args": "Out<nn::nifm::detail::sf::AccessPointData, void>", "name": "GetCurrentAccessPoint"}, "14": {"args": "Out<SharedPointer<nn::nifm::detail::INetworkProfile>, void>, Out<nn::util::Uuid, void>, nn::nifm::detail::sf::NetworkProfileData const&", "name": "CreateTemporaryNetworkProfile"}, "15": {"args": "Out<nn::nifm::IpAddressSetting, void>, Out<nn::nifm::DnsSetting, void>", "name": "GetCurrentIpConfigInfo"}, "16": {"args": "bool", "name": "SetWirelessCommunicationEnabled"}, "17": {"args": "Out<bool, void>", "name": "IsWirelessCommunicationEnabled"}, "18": {"args": "Out<nn::nifm::detail::sf::InternetConnectionStatus, void>", "name": "GetInternetConnectionStatus"}, "19": {"args": "bool", "name": "SetEthernetCommunicationEnabled"}, "20": {"args": "Out<bool, void>", "name": "IsEthernetCommunicationEnabled"}, "21": {"args": "Out<bool, void>, nn::nifm::ClientId", "name": "IsAnyInternetRequestAccepted"}, "22": {"args": "Out<bool, void>", "name": "IsAnyForegroundRequestAccepted"}, "23": {"args": "", "name": "PutToSleep"}, "24": {"args": "", "name": "WakeUp"}, "25": {"args": "Out<nn::nifm::SsidListVersion, void>", "name": "GetSsidListVersion"}, "26": {"args": "nn::nifm::ClientId", "name": "SetExclusiveClient"}, "27": {"args": "Out<nn::nifm::IpSettingData, void>", "name": "GetDefaultIpSetting"}, "28": {"args": "nn::nifm::IpSettingData const&", "name": "SetDefaultIpSetting"}, "29": {"args": "bool", "name": "SetWirelessCommunicationEnabledForTest"}, "30": {"args": "bool", "name": "SetEthernetCommunicationEnabledForTest"}}, "nn::ldn::detail::IMonitorService": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "100": {}, "101": {}}, "nn::apm::ISession": {"0": {"args": "nn::apm::PerformanceMode, nn::apm::PerformanceConfiguration", "name": "SetPerformanceConfiguration"}, "1": {"args": "Out<nn::apm::PerformanceConfiguration, void>, nn::apm::PerformanceMode", "name": "GetPerformanceConfiguration"}}, "nn::fgm::sf::ISession": {"0": {"args": "Out<SharedPointer<nn::fgm::sf::IRequest>, void>", "name": "Initialize"}}, "nn::lm::ILogger": {"0": {}}, "nn::nfp::detail::ISystem": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "10": {}, "11": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "19": {}, "20": {}, "21": {}, "100": {}, "101": {}, "102": {}, "103": {}, "104": {}, "105": {}, "106": {}}, "nn::pctl::detail::ipc::IParentalControlService": {"1411": {"args": "Out<nn::pctl::detail::PairingAccountInfoBase, void>, nn::pctl::detail::PairingInfoBase const&", "name": "GetPairingAccountInfo"}, "1031": {"args": "Out<bool, void>", "name": "IsRestrictionEnabled"}, "1032": {"args": "Out<int, void>", "name": "GetSafetyLevel"}, "1033": {"args": "int", "name": "SetSafetyLevel"}, "1034": {"args": "Out<nn::pctl::SafetyLevelSettings, void>, int", "name": "GetSafetyLevelSettings"}, "1035": {"args": "Out<nn::pctl::SafetyLevelSettings, void>", "name": "GetCurrentSettings"}, "1036": {"args": "nn::pctl::SafetyLevelSettings", "name": "SetCustomSafetyLevelSettings"}, "1037": {"args": "Out<int, void>", "name": "GetDefaultRatingOrganization"}, "1038": {"args": "int", "name": "SetDefaultRatingOrganization"}, "1039": {"args": "Out<int, void>", "name": "GetFreeCommunicationApplicationListCount"}, "1040": {"args": "Out<int, void>, OutArray<nn::pctl::FreeCommunicationApplicationInfo> const&, int", "name": "GetFreeCommunicationApplicationListOld"}, "1041": {"args": "InArray<nn::pctl::FreeCommunicationApplicationInfo> const&", "name": "UpdateFreeCommunicationApplicationListOld"}, "1042": {"args": "nn::ncm::ApplicationId", "name": "AddToFreeCommunicationApplicationList"}, "1043": {"args": "", "name": "DeleteSettings"}, "1044": {"args": "Out<int, void>, OutArray<nn::pctl::FreeCommunicationApplicationInfo> const&, int", "name": "GetFreeCommunicationApplicationList"}, "1045": {"args": "InArray<nn::pctl::FreeCommunicationApplicationInfo> const&", "name": "UpdateFreeCommunicationApplicationList"}, "1431": {"args": "", "name": "SynchronizeParentalControlSettings"}, "1432": {"args": "Out<NativeHandle, void>", "name": "GetSynchronizationEvent"}, "1951": {"args": "nn::pctl::PlayTimerSettings const&", "name": "SetPlayTimerSettingsForDebug"}, "2011": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::PairingAccountInfoBase const&", "name": "GetAccountMiiImageContentTypeAsync"}, "1901": {"args": "nn::ncm::ApplicationId", "name": "DeleteFromFreeCommunicationApplicationListForDebug"}, "1457": {"args": "Out<NativeHandle, void>", "name": "GetPlayTimerEventToRequestSuspension"}, "1451": {"args": "", "name": "StartPlayTimer"}, "1452": {"args": "", "name": "StopPlayTimer"}, "1453": {"args": "Out<bool, void>", "name": "IsPlayTimerEnabled"}, "1454": {"args": "Out<nn::TimeSpanType, void>", "name": "GetPlayTimerRemainingTime"}, "1455": {"args": "Out<bool, void>", "name": "IsRestrictedByPlayTimer"}, "1456": {"args": "Out<nn::pctl::PlayTimerSettings, void>", "name": "GetPlayTimerSettings"}, "1201": {"args": "InArray<char> const&", "name": "UnlockRestrictionTemporarily"}, "1202": {"args": "InArray<char> const&", "name": "UnlockSystemSettingsRestriction"}, "1203": {"args": "InArray<char> const&", "name": "SetPinCode"}, "1204": {"args": "Out<nn::pctl::InquiryCode, void>", "name": "GenerateInquiryCode"}, "1205": {"args": "Out<bool, void>, nn::pctl::InquiryCode const&, InArray<char> const&", "name": "CheckMasterKey"}, "1206": {"args": "Out<int, void>", "name": "GetPinCodeLength"}, "2005": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>", "name": "RetrievePairingInfoAsync"}, "1902": {"args": "", "name": "ClearFreeCommunicationApplicationListForDebug"}, "1471": {"args": "", "name": "NotifyWrongPinCodeInputManyTimes"}, "1472": {"args": "", "name": "CancelNetworkRequest"}, "1601": {"args": "Out<bool, void>", "name": "DisableAllFeatures"}, "1602": {"args": "Out<bool, void>", "name": "PostEnableAllFeatures"}, "1603": {"args": "Out<bool, void>, Out<bool, void>", "name": "IsAllFeaturesDisabled"}, "1421": {"args": "Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::PairingAccountInfoBase const&", "name": "GetAccountNickname"}, "2001": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, InArray<char> const&", "name": "RequestPairingAsync"}, "2002": {"args": "Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::AsyncData", "name": "FinishRequestPairing"}, "2003": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, nn::pctl::detail::PairingInfoBase const&", "name": "AuthorizePairingAsync"}, "2004": {"args": "Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::AsyncData", "name": "FinishAuthorizePairing"}, "1422": {"args": "Out<unsigned int, void>, OutBuffer const&, nn::pctl::detail::PairingAccountInfoBase const&", "name": "GetAccountMiiImage"}, "2006": {"args": "Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::AsyncData", "name": "FinishRetrievePairingInfo"}, "2007": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, bool", "name": "UnlinkPairingAsync"}, "2008": {"args": "nn::pctl::detail::AsyncData, bool", "name": "FinishUnlinkPairing"}, "2009": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>, Out<unsigned int, void>, OutBuffer const&, nn::pctl::detail::PairingAccountInfoBase const&", "name": "GetAccountMiiImageAsync"}, "2010": {"args": "Out<unsigned int, void>, OutBuffer const&, nn::pctl::detail::AsyncData", "name": "FinishGetAccountMiiImage"}, "1423": {"args": "Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::PairingAccountInfoBase const&", "name": "GetAccountMiiImageContentType"}, "2012": {"args": "Out<unsigned int, void>, OutArray<char> const&, nn::pctl::detail::AsyncData", "name": "FinishGetAccountMiiImageContentType"}, "2013": {"args": "Out<nn::pctl::detail::AsyncData, void>, Out<NativeHandle, void>", "name": "SynchronizeParentalControlSettingsAsync"}, "2014": {"args": "nn::pctl::detail::AsyncData", "name": "FinishSynchronizeParentalControlSettings"}, "1424": {"args": "Out<int, void>, nn::pctl::detail::PairingAccountInfoBase const&", "name": "GetAccountState"}, "1001": {"args": "", "name": "CheckFreeCommunicationPermission"}, "1002": {"args": "nn::ncm::ApplicationId, InArray<signed char> const&, bool", "name": "ConfirmLaunchApplicationPermission"}, "1003": {"args": "nn::ncm::ApplicationId, InArray<signed char> const&, bool", "name": "ConfirmResumeApplicationPermission"}, "1004": {"args": "", "name": "ConfirmSnsPostPermission"}, "1005": {"args": "", "name": "ConfirmSystemSettingsPermission"}, "1006": {"args": "Out<bool, void>", "name": "IsRestrictionTemporaryUnlocked"}, "1007": {"args": "", "name": "RevertRestrictionTemporaryUnlocked"}, "1008": {"args": "", "name": "EnterRestrictedSystemSettings"}, "1009": {"args": "", "name": "LeaveRestrictedSystemSettings"}, "1010": {"args": "Out<bool, void>", "name": "IsRestrictedSystemSettingsEntered"}, "1011": {"args": "", "name": "RevertRestrictedSystemSettingsEntered"}, "1012": {"args": "Out<int, void>", "name": "GetRestrictedFeatures"}, "1401": {"args": "Out<nn::pctl::detail::PairingInfoBase, void>, InArray<char> const&", "name": "RequestPairing"}, "1402": {"args": "Out<nn::pctl::detail::PairingInfoBase, void>, nn::pctl::detail::PairingInfoBase const&", "name": "AuthorizePairing"}, "1403": {"args": "Out<bool, void>", "name": "IsPairingActive"}, "1404": {"args": "Out<nn::pctl::detail::PairingInfoBase, void>", "name": "RetrievePairingInfo"}, "1405": {"args": "bool", "name": "UnlinkPairing"}, "1941": {"args": "", "name": "DeletePairing"}}, "nn::lm::ILogService": {"0": {}}, "nn::am::service::IAllSystemAppletProxiesService": {"200": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletProxy>, void>, unsigned long, NativeHandle&&", "name": "OpenLibraryAppletProxy"}, "300": {"args": "Out<SharedPointer<nn::am::service::IOverlayAppletProxy>, void>, unsigned long, NativeHandle&&", "name": "OpenOverlayAppletProxy"}, "400": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>, unsigned long", "name": "CreateSelfLibraryAppletCreatorForDevelop"}, "100": {"args": "Out<SharedPointer<nn::am::service::ISystemAppletProxy>, void>, unsigned long, NativeHandle&&", "name": "OpenSystemAppletProxy"}, "350": {"args": "Out<SharedPointer<nn::am::service::IApplicationProxy>, void>, unsigned long, NativeHandle&&", "name": "OpenSystemApplicationProxy"}}, "nn::codec::detail::IHardwareOpusDecoder": {"0": {}, "1": {}}, "nn::friends::detail::ipc::IFriendServiceCreator": {"0": {"args": "Out<SharedPointer<nn::friends::detail::ipc::IFriendService>, void>", "name": "Create"}}, "nn::account::IAccountServiceForAdministrator": {"0": {"args": "Out<int, void>", "name": "GetUserCount"}, "1": {"args": "Out<bool, void>, nn::account::Uid const&", "name": "GetUserExistence"}, "2": {"args": "OutArray<nn::account::Uid> const&", "name": "ListAllUsers"}, "3": {"args": "OutArray<nn::account::Uid> const&", "name": "ListOpenUsers"}, "4": {"args": "Out<nn::account::Uid, void>", "name": "GetLastOpenedUser"}, "5": {"args": "Out<SharedPointer<nn::account::profile::IProfile>, void>, nn::account::Uid const&", "name": "GetProfile"}, "230": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "AuthenticateServiceAsync"}, "290": {"args": "Out<SharedPointer<nn::account::nas::IOAuthProcedureForGuestLogin>, void>, nn::account::detail::Uuid const&", "name": "ProxyProcedureToLoginAsGuestWithNintendoAccount"}, "50": {"args": "Out<bool, void>, unsigned long", "name": "IsUserRegistrationRequestPermitted"}, "51": {"args": "Out<nn::account::Uid, void>, bool", "name": "TrySelectUserWithoutInteraction"}, "190": {"args": "Out<nn::ApplicationId, void>, Out<unsigned int, void>, nn::account::Uid const&", "name": "GetUserLastOpenedApplication"}, "200": {"args": "Out<nn::account::Uid, void>", "name": "BeginUserRegistration"}, "201": {"args": "nn::account::Uid const&", "name": "CompleteUserRegistration"}, "202": {"args": "nn::account::Uid const&", "name": "CancelUserRegistration"}, "203": {"args": "nn::account::Uid const&", "name": "DeleteUser"}, "204": {"args": "nn::account::Uid const&, int", "name": "SetUserPosition"}, "205": {"args": "Out<SharedPointer<nn::account::profile::IProfileEditor>, void>, nn::account::Uid const&", "name": "GetProfileEditor"}, "101": {"args": "Out<SharedPointer<nn::account::detail::INotifier>, void>", "name": "GetUserStateChangeNotifier"}, "100": {"args": "Out<SharedPointer<nn::account::detail::INotifier>, void>", "name": "GetUserRegistrationNotifier"}, "998": {"args": "nn::account::Uid const&", "name": "DebugSetUserStateClose"}, "102": {"args": "Out<SharedPointer<nn::account::baas::IManagerForSystemService>, void>, nn::account::Uid const&", "name": "GetBaasAccountManagerForSystemService"}, "103": {"args": "Out<SharedPointer<nn::account::detail::INotifier>, void>", "name": "GetBaasUserAvailabilityChangeNotifier"}, "999": {"args": "nn::account::Uid const&", "name": "DebugSetUserStateOpen"}, "110": {"args": "nn::account::Uid const&, nn::ApplicationId, InBuffer const&", "name": "StoreSaveDataThumbnail"}, "111": {"args": "nn::account::Uid const&, nn::ApplicationId", "name": "ClearSaveDataThumbnail"}, "112": {"args": "Out<unsigned int, void>, OutBuffer const&, nn::account::Uid const&, nn::ApplicationId", "name": "LoadSaveDataThumbnail"}, "250": {"args": "Out<SharedPointer<nn::account::baas::IAdministrator>, void>, nn::account::Uid const&", "name": "GetBaasAccountAdministrator"}}, "nn::apm::IDebugManager": {"0": {"args": "Out<nn::apm::ThrottlingState, void>", "name": "GetThrottlingState"}, "1": {"args": "Out<nn::apm::ThrottlingState, void>", "name": "GetLastThrottlingState"}, "2": {"args": "", "name": "ClearLastThrottlingState"}}, "nn::htc::tenv::IService": {"0": {}, "1": {}, "2": {}}, "nn::mii::detail::IStaticService": {"0": {"args": "Out<SharedPointer<nn::mii::detail::IDatabaseService>, void>, int", "name": "GetDatabaseService"}}, "nn::fssrv::sf::IStorage": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}}, "nn::audio::detail::IAudioRendererManagerForDebugger": {"0": {}, "1": {}}, "nn::audio::detail::IAudioRendererManager": {"0": {}, "1": {}, "2": {}}, "nn::sm::detail::IUserInterface": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::gpio::IManager": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}}, "nn::nfp::detail::IDebug": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "19": {}, "20": {}, "21": {}, "22": {}, "205": {}, "100": {}, "101": {}, "102": {}, "103": {}, "104": {}, "105": {}, "106": {}, "203": {}, "200": {}, "204": {}, "201": {}, "202": {}}, "nn::account::nas::IAuthorizationRequest": {"0": {"args": "Out<nn::account::detail::Uuid, void>", "name": "GetSessionId"}, "10": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "InvokeWithoutInteractionAsync"}, "20": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "GetAuthorizationCode"}, "21": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "GetIdToken"}, "22": {"args": "Out<nn::account::nas::State, void>", "name": "GetState"}}, "nn::apm::ISystemManager": {"0": {"args": "nn::apm::PerformanceMode", "name": "RequestPerformanceMode"}, "1": {"args": "Out<NativeHandle, void>, nn::apm::EventTarget", "name": "GetPerformanceEvent"}}, "nn::ntc::detail::service::IStaticService": {"0": {}}, "nn::mii::detail::IDatabaseService": {"0": {"args": "Out<bool, void>, int", "name": "IsUpdated"}, "1": {"args": "Out<bool, void>", "name": "IsFullDatabase"}, "2": {"args": "Out<int, void>, int", "name": "GetCount"}, "3": {"args": "Out<int, void>, OutArray<nn::mii::CharInfoElement> const&, int", "name": "Get"}, "4": {"args": "Out<int, void>, OutArray<nn::mii::CharInfo> const&, int", "name": "Get1"}, "5": {"args": "Out<nn::mii::CharInfo, void>, nn::mii::CharInfo const&, int", "name": "UpdateLatest"}, "6": {"args": "Out<nn::mii::CharInfo, void>, int, int, int", "name": "BuildRandom"}, "7": {"args": "Out<nn::mii::CharInfo, void>, int", "name": "BuildDefault"}, "8": {"args": "Out<int, void>, OutArray<nn::mii::StoreDataElement> const&, int", "name": "Get2"}, "9": {"args": "Out<int, void>, OutArray<nn::mii::StoreData> const&, int", "name": "Get3"}, "10": {"args": "Out<nn::mii::StoreData, void>, nn::mii::StoreData const&, int", "name": "UpdateLatest1"}, "11": {"args": "Out<int, void>, nn::mii::CreateId const&, bool", "name": "FindIndex"}, "12": {"args": "int, nn::mii::CreateId const&", "name": "Move"}, "13": {"args": "nn::mii::StoreData const&", "name": "AddOrReplace"}, "14": {"args": "nn::mii::CreateId const&", "name": "Delete"}, "15": {"args": "", "name": "DestroyFile"}, "16": {"args": "", "name": "DeleteFile"}, "17": {"args": "", "name": "Format"}, "18": {"args": "InBuffer const&", "name": "Import"}, "19": {"args": "OutBuffer const&", "name": "Export"}, "20": {"args": "Out<bool, void>", "name": "IsBrokenDatabaseWithClearFlag"}, "21": {"args": "Out<int, void>, nn::mii::CharInfo const&", "name": "GetIndex"}}, "nn::socket::resolver::IResolver": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}}, "nn::am::service::ILibraryAppletCreator": {"0": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletAccessor>, void>, unsigned int, unsigned int", "name": "CreateLibraryApplet"}, "1": {"args": "", "name": "TerminateAllLibraryApplets"}, "2": {"args": "Out<bool, void>", "name": "AreAnyLibraryAppletsLeft"}, "11": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>, NativeHandle&&, long, bool", "name": "CreateTransferMemoryStorage"}, "10": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>, long", "name": "CreateStorage"}}, "nn::am::service::IApplicationProxyService": {"0": {"args": "Out<SharedPointer<nn::am::service::IApplicationProxy>, void>, unsigned long, NativeHandle&&", "name": "OpenApplicationProxy"}}, "nn::account::profile::IProfileEditor": {"0": {"args": "Out<nn::account::profile::ProfileBase, void>, Out<nn::account::profile::UserData, void>", "name": "Get"}, "1": {"args": "Out<nn::account::profile::ProfileBase, void>", "name": "GetBase"}, "100": {"args": "nn::account::profile::ProfileBase const&, nn::account::profile::UserData const&", "name": "Store"}, "101": {"args": "nn::account::profile::ProfileBase const&, nn::account::profile::UserData const&, InBuffer const&", "name": "StoreWithImage"}, "10": {"args": "Out<unsigned int, void>", "name": "GetImageSize"}, "11": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "LoadImage"}}, "nn::audio::detail::IFinalOutputRecorderManagerForDebugger": {"0": {}, "1": {}}, "nn::am::service::ILibraryAppletProxy": {"0": {"args": "Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>", "name": "GetCommonStateGetter"}, "1": {"args": "Out<SharedPointer<nn::am::service::ISelfController>, void>", "name": "GetSelfController"}, "2": {"args": "Out<SharedPointer<nn::am::service::IWindowController>, void>", "name": "GetWindowController"}, "3": {"args": "Out<SharedPointer<nn::am::service::IAudioController>, void>", "name": "GetAudioController"}, "4": {"args": "Out<SharedPointer<nn::am::service::IDisplayController>, void>", "name": "GetDisplayController"}, "1000": {"args": "Out<SharedPointer<nn::am::service::IDebugFunctions>, void>", "name": "GetDebugFunctions"}, "20": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletSelfAccessor>, void>", "name": "OpenLibraryAppletSelfAccessor"}, "10": {"args": "Out<SharedPointer<nn::am::service::IProcessWindingController>, void>", "name": "GetProcessWindingController"}, "11": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>", "name": "GetLibraryAppletCreator"}}, "nn::friends::detail::ipc::IFriendService": {"0": {"args": "Out<NativeHandle, void>", "name": "GetCompletionEvent"}, "1": {"args": "", "name": "Cancel"}, "30210": {"args": "Out<nn::friends::FacedFriendRequestRegistrationKey, void>, nn::account::Uid const&", "name": "GetFacedFriendRequestRegistrationKey"}, "30211": {"args": "nn::account::Uid const&, nn::friends::FacedFriendRequestRegistrationKey const&, nn::account::Nickname const&, InBuffer const&", "name": "AddFacedFriendRequest"}, "10500": {"args": "OutArray<nn::friends::detail::ProfileImpl> const&, nn::account::Uid const&, InArray<nn::account::NetworkServiceAccountId> const&", "name": "GetProfileList"}, "30213": {"args": "Out<int, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId, OutBuffer const&", "name": "GetFacedFriendRequestProfileImage"}, "30214": {"args": "Out<int, void>, InArray<char> const&, OutBuffer const&", "name": "GetFacedFriendRequestProfileImageFromPath"}, "20500": {"args": "OutArray<nn::friends::detail::ProfileExtraImpl> const&, nn::account::Uid const&, InArray<nn::account::NetworkServiceAccountId> const&", "name": "GetProfileExtraList"}, "20501": {"args": "Out<nn::friends::Relationship, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "GetRelationship"}, "30212": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "CancelFacedFriendRequest"}, "30500": {"args": "Out<nn::friends::detail::ProfileExtraImpl, void>, nn::account::Uid const&, nn::friends::FriendCode const&", "name": "GetProfileExtraFromFriendCode"}, "20800": {"args": "Out<nn::friends::detail::UserSettingImpl, void>, nn::account::Uid const&", "name": "LoadUserSetting"}, "20801": {"args": "nn::account::Uid const&", "name": "SyncUserSetting"}, "20300": {"args": "Out<int, void>, OutArray<nn::friends::detail::FriendCandidateImpl> const&, nn::account::Uid const&, int", "name": "GetFriendCandidateList"}, "30810": {"args": "nn::account::Uid const&, int", "name": "ChangePresencePermission"}, "30811": {"args": "nn::account::Uid const&, bool", "name": "ChangeFriendRequestReception"}, "30812": {"args": "nn::account::Uid const&, int", "name": "ChangePlayLogPermission"}, "30820": {"args": "nn::account::Uid const&", "name": "IssueFriendCode"}, "10600": {"args": "nn::account::Uid const&", "name": "DeclareOpenOnlinePlaySession"}, "10601": {"args": "nn::account::Uid const&", "name": "DeclareCloseOnlinePlaySession"}, "30830": {"args": "nn::account::Uid const&", "name": "ClearPlayLog"}, "10610": {"args": "nn::account::Uid const&, nn::friends::detail::UserPresenceImpl const&, unsigned long", "name": "UpdateUserPresence"}, "10100": {"args": "Out<int, void>, OutArray<nn::account::NetworkServiceAccountId> const&, nn::account::Uid const&, int, nn::friends::detail::ipc::SizedFriendFilter const&, unsigned long", "name": "GetFriendListIds"}, "10101": {"args": "Out<int, void>, OutArray<nn::friends::detail::FriendImpl> const&, nn::account::Uid const&, int, nn::friends::detail::ipc::SizedFriendFilter const&, unsigned long", "name": "GetFriendList"}, "10102": {"args": "OutArray<nn::friends::detail::FriendImpl> const&, nn::account::Uid const&, InArray<nn::account::NetworkServiceAccountId> const&, unsigned long", "name": "UpdateFriendInfo"}, "20600": {"args": "Out<nn::friends::detail::UserPresenceViewImpl, void>, nn::account::Uid const&", "name": "GetUserPresenceView"}, "10110": {"args": "Out<int, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId, OutBuffer const&", "name": "GetFriendProfileImage"}, "20100": {"args": "Out<int, void>, nn::account::Uid const&, nn::friends::detail::ipc::SizedFriendFilter const&, unsigned long", "name": "GetFriendCount"}, "20101": {"args": "Out<int, void>, nn::account::Uid const&", "name": "GetNewlyFriendCount"}, "20102": {"args": "Out<nn::friends::detail::FriendDetailedInfoImpl, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "GetFriendDetailedInfo"}, "20103": {"args": "nn::account::Uid const&", "name": "SyncFriendList"}, "49900": {"args": "nn::account::Uid const&", "name": "DeleteNetworkServiceAccountCache"}, "20110": {"args": "Out<nn::friends::detail::FriendSettingImpl, void>, nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "LoadFriendSetting"}, "30100": {"args": "nn::account::Uid const&", "name": "DropFriendNewlyFlags"}, "30101": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "DeleteFriend"}, "30110": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "DropFriendNewlyFlag"}, "10400": {"args": "Out<int, void>, OutArray<nn::account::NetworkServiceAccountId> const&, nn::account::Uid const&, int", "name": "GetBlockedUserListIds"}, "20900": {"args": "", "name": "RequestListSummaryOverlayNotification"}, "30120": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId, bool", "name": "ChangeFriendFavoriteFlag"}, "30121": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId, bool", "name": "ChangeFriendOnlineNotificationFlag"}, "20400": {"args": "Out<int, void>, OutArray<nn::friends::detail::BlockedUserImpl> const&, nn::account::Uid const&, int", "name": "GetBlockedUserList"}, "20401": {"args": "nn::account::Uid const&", "name": "SyncBlockedUserList"}, "30400": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId, int", "name": "BlockUser"}, "30401": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId, int, nn::friends::ApplicationInfo const&, nn::friends::InAppScreenName const&", "name": "BlockUserWithApplicationInfo"}, "30402": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId", "name": "UnblockUser"}, "10700": {"args": "Out<nn::friends::PlayHistoryRegistrationKey, void>, nn::account::Uid const&, bool", "name": "GetPlayHistoryRegistrationKey"}, "10701": {"args": "Out<nn::friends::PlayHistoryRegistrationKey, void>, nn::account::NetworkServiceAccountId, bool", "name": "GetPlayHistoryRegistrationKeyWithNetworkServiceAccountId"}, "10702": {"args": "nn::account::Uid const&, nn::friends::PlayHistoryRegistrationKey const&, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&, unsigned long", "name": "AddPlayHistory"}, "11000": {"args": "Out<nn::friends::Url, void>, nn::friends::Url const&, int", "name": "GetProfileImageUrl"}, "20700": {"args": "Out<int, void>, OutArray<nn::friends::detail::PlayHistoryImpl> const&, nn::account::Uid const&, int", "name": "GetPlayHistoryList"}, "20701": {"args": "Out<nn::friends::PlayHistoryStatistics, void>, nn::account::Uid const&", "name": "GetPlayHistoryStatistics"}, "20200": {"args": "Out<int, void>, Out<int, void>, nn::account::Uid const&", "name": "GetReceivedFriendRequestCount"}, "20201": {"args": "Out<int, void>, OutArray<nn::friends::detail::FriendRequestImpl> const&, nn::account::Uid const&, int, int", "name": "GetFriendRequestList"}, "30700": {"args": "nn::account::Uid const&", "name": "DeletePlayHistory"}, "30200": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId, int", "name": "SendFriendRequest"}, "30201": {"args": "nn::account::Uid const&, nn::account::NetworkServiceAccountId, int, nn::friends::ApplicationInfo const&, nn::friends::InAppScreenName const&, nn::friends::InAppScreenName const&", "name": "SendFriendRequestWithApplicationInfo"}, "30202": {"args": "nn::account::Uid const&, nn::friends::RequestId", "name": "CancelFriendRequest"}, "30203": {"args": "nn::account::Uid const&, nn::friends::RequestId", "name": "AcceptFriendRequest"}, "30204": {"args": "nn::account::Uid const&, nn::friends::RequestId", "name": "RejectFriendRequest"}, "30205": {"args": "nn::account::Uid const&, nn::friends::RequestId", "name": "ReadFriendRequest"}}, "nn::account::IBaasAccessTokenAccessor": {"0": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&", "name": "EnsureCacheAsync"}, "1": {"args": "Out<unsigned int, void>, OutBuffer const&, nn::account::Uid const&", "name": "LoadCache"}, "2": {"args": "Out<unsigned long, void>, nn::account::Uid const&", "name": "GetDeviceAccountId"}, "51": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&", "name": "UnregisterNotificationTokenAsync"}, "50": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, nn::account::Uid const&, nn::npns::NotificationToken const&", "name": "RegisterNotificationTokenAsync"}}, "nn::socket::sf::IClient": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "19": {}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}}, "nn::nfc::mifare::detail::IUser": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}}, "nn::audio::detail::IAudioDebugManager": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::audio::detail::IAudioDevice": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}}, "nn::apm::IManagerPrivileged": {"0": {"args": "Out<SharedPointer<nn::apm::ISession>, void>", "name": "OpenSession"}}, "nn::sm::detail::IManagerInterface": {"0": {}, "1": {}}, "nn::audio::detail::IAudioRendererManagerForApplet": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}}, "nn::am::service::IOverlayAppletProxy": {"0": {"args": "Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>", "name": "GetCommonStateGetter"}, "1": {"args": "Out<SharedPointer<nn::am::service::ISelfController>, void>", "name": "GetSelfController"}, "2": {"args": "Out<SharedPointer<nn::am::service::IWindowController>, void>", "name": "GetWindowController"}, "3": {"args": "Out<SharedPointer<nn::am::service::IAudioController>, void>", "name": "GetAudioController"}, "4": {"args": "Out<SharedPointer<nn::am::service::IDisplayController>, void>", "name": "GetDisplayController"}, "1000": {"args": "Out<SharedPointer<nn::am::service::IDebugFunctions>, void>", "name": "GetDebugFunctions"}, "20": {"args": "Out<SharedPointer<nn::am::service::IOverlayFunctions>, void>", "name": "GetOverlayFunctions"}, "10": {"args": "Out<SharedPointer<nn::am::service::IProcessWindingController>, void>", "name": "GetProcessWindingController"}, "11": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>", "name": "GetLibraryAppletCreator"}}, "nn::visrv::sf::IApplicationRootService": {"0": {"args": "Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int", "name": "GetDisplayService"}}, "nn::am::service::ICommonStateGetter": {"0": {"args": "Out<NativeHandle, void>", "name": "GetEventHandle"}, "1": {"args": "Out<nn::am::AppletMessage, void>", "name": "ReceiveMessage"}, "2": {"args": "Out<nn::am::service::AppletKind, void>", "name": "GetThisAppletKind"}, "3": {"args": "", "name": "AllowToEnterSleep"}, "4": {"args": "", "name": "DisallowToEnterSleep"}, "5": {"args": "Out<unsigned char, void>", "name": "GetOperationMode"}, "6": {"args": "Out<unsigned int, void>", "name": "GetPerformanceMode"}, "7": {"args": "Out<unsigned char, void>", "name": "GetCradleStatus"}, "8": {"args": "Out<unsigned char, void>", "name": "GetBootMode"}, "9": {"args": "Out<unsigned char, void>", "name": "GetCurrentFocusState"}, "10": {"args": "", "name": "RequestToAcquireSleepLock"}, "11": {"args": "", "name": "ReleaseSleepLock"}, "12": {"args": "", "name": "ReleaseSleepLockTransiently"}, "13": {"args": "Out<NativeHandle, void>", "name": "GetAcquiredSleepLockEvent"}, "20": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushToGeneralChannel"}, "30": {"args": "Out<SharedPointer<nn::am::service::ILockAccessor>, void>", "name": "GetHomeButtonReaderLockAccessor"}}, "nn::fssrv::sf::IFileSystemProxyForLoader": {"0": {}, "1": {}}, "nn::pwm::IManager": {"0": {}, "1": {}}, "nn::nfp::detail::IUser": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "19": {}, "20": {}, "21": {}, "22": {}}, "nn::ldn::detail::IMonitorServiceCreator": {"0": {}}, "nn::nifm::detail::IScanRequest": {"0": {"args": "", "name": "Submit"}, "1": {"args": "Out<bool, void>", "name": "IsProcessing"}, "2": {"args": "", "name": "GetResult"}, "3": {"args": "Out<NativeHandle, void>", "name": "GetSystemEventReadableHandle"}}, "nn::visrv::sf::ISystemDisplayService": {"3200": {"args": "Out<nn::vi::DisplayModeInfo, void>, unsigned long", "name": "GetDisplayMode"}, "3201": {"args": "unsigned long, nn::vi::DisplayModeInfo const&", "name": "SetDisplayMode"}, "3202": {"args": "Out<long, void>, unsigned long", "name": "GetDisplayUnderscan"}, "3203": {"args": "unsigned long, long", "name": "SetDisplayUnderscan"}, "3204": {"args": "Out<unsigned int, void>, unsigned long", "name": "GetDisplayContentType"}, "3205": {"args": "unsigned long, unsigned int", "name": "SetDisplayContentType"}, "3206": {"args": "Out<unsigned int, void>, unsigned long", "name": "GetDisplayRgbRange"}, "3207": {"args": "unsigned long, unsigned int", "name": "SetDisplayRgbRange"}, "2312": {"args": "Out<unsigned long, void>, Out<long, void>, OutBuffer const&, unsigned long, unsigned int", "name": "CreateStrayLayer"}, "3209": {"args": "unsigned long, unsigned int", "name": "SetDisplayCmuMode"}, "3210": {"args": "Out<float, void>, unsigned long", "name": "GetDisplayContrastRatio"}, "3211": {"args": "unsigned long, float", "name": "SetDisplayContrastRatio"}, "3214": {"args": "Out<float, void>, unsigned long", "name": "GetDisplayGamma"}, "3215": {"args": "unsigned long, float", "name": "SetDisplayGamma"}, "3216": {"args": "Out<float, void>, unsigned long", "name": "GetDisplayCmuLuma"}, "3217": {"args": "unsigned long, float", "name": "SetDisplayCmuLuma"}, "2201": {"args": "unsigned long, float, float", "name": "SetLayerPosition"}, "2203": {"args": "unsigned long, long, long", "name": "SetLayerSize"}, "2204": {"args": "Out<long, void>, unsigned long", "name": "GetLayerZ"}, "2205": {"args": "unsigned long, long", "name": "SetLayerZ"}, "2207": {"args": "unsigned long, bool", "name": "SetLayerVisibility"}, "2209": {"args": "unsigned long, float", "name": "SetLayerAlpha"}, "1200": {"args": "Out<long, void>, unsigned long", "name": "GetZOrderCountMin"}, "3208": {"args": "Out<unsigned int, void>, unsigned long", "name": "GetDisplayCmuMode"}, "1202": {"args": "Out<long, void>, unsigned long", "name": "GetZOrderCountMax"}, "1203": {"args": "Out<int, void>, Out<int, void>, unsigned long", "name": "GetDisplayLogicalResolution"}, "3000": {"args": "Out<long, void>, OutArray<nn::vi::DisplayModeInfo> const&, unsigned long", "name": "ListDisplayModes"}, "3001": {"args": "Out<long, void>, OutArray<unsigned int> const&, unsigned long", "name": "ListDisplayRgbRanges"}, "3002": {"args": "Out<long, void>, OutArray<unsigned int> const&, unsigned long", "name": "ListDisplayContentTypes"}}, "nn::am::service::IApplicationFunctions": {"1": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>, unsigned int", "name": "PopLaunchParameter"}, "20": {"args": "Out<long, void>, nn::account::Uid const&", "name": "EnsureSaveData"}, "21": {"args": "Out<nn::settings::LanguageCode, void>", "name": "GetDesiredLanguage"}, "22": {"args": "unsigned int", "name": "SetTerminateResult"}, "23": {"args": "Out<nn::oe::DisplayVersion, void>", "name": "GetDisplayVersion"}, "40": {"args": "Out<bool, void>", "name": "NotifyRunning"}, "10": {"args": "nn::ncm::ApplicationId, SharedPointer<nn::am::service::IStorage>", "name": "CreateApplicationAndPushAndRequestToStart"}, "30": {"args": "long", "name": "BeginBlockingHomeButton"}, "31": {"args": "", "name": "EndBlockingHomeButton"}}, "nn::am::service::IHomeMenuFunctions": {"10": {"args": "", "name": "RequestToGetForeground"}, "11": {"args": "", "name": "LockForeground"}, "12": {"args": "", "name": "UnlockForeground"}, "20": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopFromGeneralChannel"}, "21": {"args": "Out<NativeHandle, void>", "name": "GetPopFromGeneralChannelEvent"}, "30": {"args": "Out<SharedPointer<nn::am::service::ILockAccessor>, void>", "name": "GetHomeButtonWriterLockAccessor"}}, "nn::am::service::IApplicationAccessor": {"0": {"args": "Out<NativeHandle, void>", "name": "GetAppletStateChangedEvent"}, "1": {"args": "Out<bool, void>", "name": "IsCompleted"}, "10": {"args": "", "name": "Start"}, "20": {"args": "", "name": "RequestExit"}, "25": {"args": "", "name": "Terminate"}, "30": {"args": "", "name": "GetResult"}, "101": {"args": "", "name": "RequestForApplicationToGetForeground"}, "110": {"args": "", "name": "TerminateAllLibraryApplets"}, "111": {"args": "Out<bool, void>", "name": "AreAnyLibraryAppletsLeft"}, "112": {"args": "Out<SharedPointer<nn::am::service::IAppletAccessor>, void>", "name": "GetCurrentLibraryApplet"}, "120": {"args": "Out<nn::ncm::ApplicationId, void>", "name": "GetApplicationId"}, "121": {"args": "unsigned int, SharedPointer<nn::am::service::IStorage>", "name": "PushLaunchParameter"}, "122": {"args": "OutBuffer const&", "name": "GetApplicationControlProperty"}}, "nn::ssl::sf::ISslConnection": {"0": {"args": "int, Out<int, void>", "name": "SetSocketDescriptor"}, "1": {"args": "InBuffer const&", "name": "SetHostName"}, "2": {"args": "nn::ssl::sf::VerifyOption", "name": "SetVerifyOption"}, "3": {"args": "nn::ssl::sf::IoMode", "name": "SetIoMode"}, "4": {"args": "Out<int, void>", "name": "GetSocketDescriptor"}, "5": {"args": "OutBuffer const&, Out<unsigned int, void>", "name": "GetHostName"}, "6": {"args": "Out<nn::ssl::sf::VerifyOption, void>", "name": "GetVerifyOption"}, "7": {"args": "Out<nn::ssl::sf::IoMode, void>", "name": "GetIoMode"}, "8": {"args": "", "name": "DoHandshake"}, "9": {"args": "Out<unsigned int, void>, Out<unsigned int, void>, OutBuffer const&", "name": "DoHandshakeGetServerCert"}, "10": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "Read"}, "11": {"args": "Out<unsigned int, void>, InBuffer const&", "name": "Write"}, "12": {"args": "Out<int, void>", "name": "Pending"}, "13": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "Peek"}, "14": {"args": "Out<nn::ssl::sf::PollEvent, void>, nn::ssl::sf::PollEvent, unsigned int", "name": "Poll"}, "15": {"args": "", "name": "GetVerifyCertError"}, "16": {"args": "Out<unsigned int, void>", "name": "GetNeededServerCertBufferSize"}, "17": {"args": "nn::ssl::sf::SessionCacheMode", "name": "SetSessionCacheMode"}, "18": {"args": "Out<nn::ssl::sf::SessionCacheMode, void>", "name": "GetSessionCacheMode"}, "19": {"args": "", "name": "FlushSessionCache"}, "20": {"args": "nn::ssl::sf::RenegotiationMode", "name": "SetRenegotiationMode"}, "21": {"args": "Out<nn::ssl::sf::RenegotiationMode, void>", "name": "GetRenegotiationMode"}}, "nn::am::service::IApplicationProxy": {"0": {"args": "Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>", "name": "GetCommonStateGetter"}, "1": {"args": "Out<SharedPointer<nn::am::service::ISelfController>, void>", "name": "GetSelfController"}, "2": {"args": "Out<SharedPointer<nn::am::service::IWindowController>, void>", "name": "GetWindowController"}, "3": {"args": "Out<SharedPointer<nn::am::service::IAudioController>, void>", "name": "GetAudioController"}, "4": {"args": "Out<SharedPointer<nn::am::service::IDisplayController>, void>", "name": "GetDisplayController"}, "1000": {"args": "Out<SharedPointer<nn::am::service::IDebugFunctions>, void>", "name": "GetDebugFunctions"}, "20": {"args": "Out<SharedPointer<nn::am::service::IApplicationFunctions>, void>", "name": "GetApplicationFunctions"}, "10": {"args": "Out<SharedPointer<nn::am::service::IProcessWindingController>, void>", "name": "GetProcessWindingController"}, "11": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>", "name": "GetLibraryAppletCreator"}}, "nn::mmnv::IRequest": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::timesrv::detail::service::IStaticService": {"0": {"args": "Out<SharedPointer<nn::timesrv::detail::service::ISystemClock>, void>", "name": "GetStandardUserSystemClock"}, "1": {"args": "Out<SharedPointer<nn::timesrv::detail::service::ISystemClock>, void>", "name": "GetStandardNetworkSystemClock"}, "2": {"args": "Out<SharedPointer<nn::timesrv::detail::service::ISteadyClock>, void>", "name": "GetStandardSteadyClock"}, "3": {"args": "Out<SharedPointer<nn::timesrv::detail::service::ITimeZoneService>, void>", "name": "GetTimeZoneService"}, "4": {"args": "Out<SharedPointer<nn::timesrv::detail::service::ISystemClock>, void>", "name": "GetStandardLocalSystemClock"}, "101": {"args": "bool", "name": "SetStandardUserSystemClockAutomaticCorrectionEnabled"}, "100": {"args": "Out<bool, void>", "name": "IsStandardUserSystemClockAutomaticCorrectionEnabled"}}, "nn::visrv::sf::IManagerRootService": {"2": {"args": "Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int", "name": "GetDisplayService"}, "3": {"args": "Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int, nn::vi::ProxyName", "name": "GetDisplayServiceWithProxyNameExchange"}}, "nn::am::service::ILockAccessor": {"1": {"args": "Out<bool, void>, Out<NativeHandle, void>, bool", "name": "TryLock"}, "2": {"args": "", "name": "Unlock"}, "3": {"args": "Out<NativeHandle, void>", "name": "GetEvent"}}, "nn::ldn::detail::IUserServiceCreator": {"0": {}}, "nn::audio::detail::IAudioInManagerForApplet": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::audio::detail::IFinalOutputRecorderManager": {"0": {}}, "nn::nsd::detail::IManager": {"43": {}, "40": {}, "41": {}, "10": {}, "11": {}, "12": {}, "13": {}, "14": {}, "61": {}, "50": {}, "20": {}, "21": {}, "62": {}, "60": {}, "42": {}, "30": {}, "31": {}}, "nn::am::service::IProcessWindingController": {"0": {"args": "Out<nn::am::service::AppletProcessLaunchReason, void>", "name": "GetLaunchReason"}, "40": {"args": "SharedPointer<nn::am::service::ILibraryAppletAccessor>", "name": "ReserveToStartAndWaitAndUnwindThis"}, "11": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletAccessor>, void>", "name": "OpenCallingLibraryApplet"}, "21": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushContext"}, "22": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopContext"}, "23": {"args": "", "name": "CancelWindingReservation"}, "30": {"args": "", "name": "WindAndDoReserved"}}, "nn::ldn::detail::ISystemLocalCommunicationService": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "400": {}, "401": {}, "300": {}, "301": {}, "302": {}, "303": {}, "304": {}, "200": {}, "201": {}, "202": {}, "203": {}, "204": {}, "205": {}, "206": {}, "207": {}, "208": {}, "209": {}, "100": {}, "101": {}, "102": {}, "103": {}}, "nn::htc::tenv::IServiceManager": {"0": {}}, "nn::tma::IHtcManager": {"0": {}, "1": {}, "2": {}}, "nn::fssrv::sf::IDeviceOperator": {"0": {}, "1": {}, "100": {}, "101": {}, "301": {}, "200": {}, "201": {}, "202": {}, "203": {}, "204": {}, "205": {}, "110": {}, "111": {}, "208": {}, "209": {}, "210": {}, "211": {}, "206": {}, "300": {}, "207": {}}, "nn::timesrv::detail::service::ITimeZoneService": {"0": {"args": "Out<nn::time::LocationName, void>", "name": "GetDeviceLocationName"}, "1": {"args": "nn::time::LocationName const&", "name": "SetDeviceLocationName"}, "2": {"args": "Out<int, void>", "name": "GetTotalLocationNameCount"}, "3": {"args": "Out<int, void>, OutArray<nn::time::LocationName> const&, int", "name": "LoadLocationNameList"}, "4": {"args": "Out<nn::time::TimeZoneRule, void>, nn::time::LocationName const&", "name": "LoadTimeZoneRule"}, "101": {"args": "Out<nn::time::CalendarTime, void>, Out<nn::time::sf::CalendarAdditionalInfo, void>, nn::time::PosixTime", "name": "ToCalendarTimeWithMyRule"}, "201": {"args": "Out<int, void>, OutArray<nn::time::PosixTime> const&, nn::time::CalendarTime, nn::time::TimeZoneRule const&", "name": "ToPosixTime"}, "100": {"args": "Out<nn::time::CalendarTime, void>, Out<nn::time::sf::CalendarAdditionalInfo, void>, nn::time::PosixTime, nn::time::TimeZoneRule const&", "name": "ToCalendarTime"}, "202": {"args": "Out<int, void>, OutArray<nn::time::PosixTime> const&, nn::time::CalendarTime", "name": "ToPosixTimeWithMyRule"}}, "nn::audio::detail::IAudioIn": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}}, "nn::account::detail::INotifier": {"0": {"args": "Out<NativeHandle, void>", "name": "GetSystemEvent"}}, "nn::nifm::detail::IRequest": {"0": {"args": "Out<int, void>", "name": "GetRequestState"}, "1": {"args": "", "name": "GetResult"}, "2": {"args": "Out<NativeHandle, void>, Out<NativeHandle, void>", "name": "GetSystemEventReadableHandles"}, "3": {"args": "", "name": "Cancel"}, "4": {"args": "", "name": "Submit"}, "5": {"args": "nn::nifm::Requirement const&", "name": "SetRequirement"}, "6": {"args": "int", "name": "SetRequirementPreset"}, "8": {"args": "unsigned char", "name": "SetPriority"}, "9": {"args": "nn::util::Uuid const&", "name": "SetNetworkProfileId"}, "10": {"args": "bool", "name": "SetRejectable"}, "11": {"args": "signed char", "name": "SetConnectionConfirmationOption"}, "12": {"args": "bool", "name": "SetPersistent"}, "13": {"args": "bool", "name": "SetInstant"}, "14": {"args": "bool, unsigned char", "name": "SetSustainable"}, "15": {"args": "unsigned char", "name": "SetRawPriority"}, "16": {"args": "bool", "name": "SetGreedy"}, "17": {"args": "bool", "name": "SetSharable"}, "18": {"args": "unsigned int", "name": "SetRequirementByRevision"}, "19": {"args": "Out<nn::nifm::Requirement, void>", "name": "GetRequirement"}, "20": {"args": "Out<unsigned int, void>", "name": "GetRevision"}, "21": {"args": "Out<unsigned int, void>, Out<unsigned int, void>, Out<unsigned int, void>, OutBuffer const&, unsigned int", "name": "GetAppletInfo"}, "22": {"args": "Out<nn::nifm::HotspotAuthInfo, void>, Out<unsigned int, void>", "name": "GetHotspotAuthInfo"}}, "nn::nfc::detail::IUser": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::settings::ISettingsItemKeyIterator": {"0": {"args": "", "name": "GoNext"}, "1": {"args": "Out<unsigned long, void>", "name": "GetKeySize"}, "2": {"args": "Out<unsigned long, void>, OutBuffer const&", "name": "GetKey"}}, "nns::hosbinder::IHOSBinderDriver": {"0": {"args": "int, unsigned int, InBuffer const&, OutBuffer const&, unsigned int", "name": "TransactParcel"}, "1": {"args": "int, int, int", "name": "AdjustRefcount"}, "2": {"args": "int, unsigned int, Out<NativeHandle, void>", "name": "GetNativeHandle"}}, "nn::hid::IAppletResource": {"0": {"args": "Out<NativeHandle, void>", "name": "GetSharedMemoryHandle"}}, "nn::audio::detail::IAudioInManager": {"0": {}, "1": {}}, "nn::am::service::IGlobalStateController": {"0": {"args": "", "name": "RequestToEnterSleep"}, "1": {"args": "", "name": "EnterSleep"}, "2": {"args": "bool", "name": "StartSleepSequence"}, "3": {"args": "", "name": "StartShutdownSequence"}, "4": {"args": "", "name": "StartRebootSequence"}, "10": {"args": "", "name": "LoadAndApplyIdlePolicySettings"}}, "nn::nifm::detail::INetworkProfile": {"0": {"args": "Out<nn::util::Uuid, void>, nn::nifm::detail::sf::NetworkProfileData const&", "name": "Update"}}, "nn::am::service::ISystemAppletProxy": {"0": {"args": "Out<SharedPointer<nn::am::service::ICommonStateGetter>, void>", "name": "GetCommonStateGetter"}, "1": {"args": "Out<SharedPointer<nn::am::service::ISelfController>, void>", "name": "GetSelfController"}, "2": {"args": "Out<SharedPointer<nn::am::service::IWindowController>, void>", "name": "GetWindowController"}, "3": {"args": "Out<SharedPointer<nn::am::service::IAudioController>, void>", "name": "GetAudioController"}, "4": {"args": "Out<SharedPointer<nn::am::service::IDisplayController>, void>", "name": "GetDisplayController"}, "10": {"args": "Out<SharedPointer<nn::am::service::IProcessWindingController>, void>", "name": "GetProcessWindingController"}, "11": {"args": "Out<SharedPointer<nn::am::service::ILibraryAppletCreator>, void>", "name": "GetLibraryAppletCreator"}, "20": {"args": "Out<SharedPointer<nn::am::service::IHomeMenuFunctions>, void>", "name": "GetHomeMenuFunctions"}, "21": {"args": "Out<SharedPointer<nn::am::service::IGlobalStateController>, void>", "name": "GetGlobalStateController"}, "22": {"args": "Out<SharedPointer<nn::am::service::IApplicationCreator>, void>", "name": "GetApplicationCreator"}, "1000": {"args": "Out<SharedPointer<nn::am::service::IDebugFunctions>, void>", "name": "GetDebugFunctions"}}, "nn::account::IAccountServiceForApplication": {"0": {"args": "Out<int, void>", "name": "GetUserCount"}, "1": {"args": "Out<bool, void>, nn::account::Uid const&", "name": "GetUserExistence"}, "2": {"args": "OutArray<nn::account::Uid> const&", "name": "ListAllUsers"}, "3": {"args": "OutArray<nn::account::Uid> const&", "name": "ListOpenUsers"}, "4": {"args": "Out<nn::account::Uid, void>", "name": "GetLastOpenedUser"}, "5": {"args": "Out<SharedPointer<nn::account::profile::IProfile>, void>, nn::account::Uid const&", "name": "GetProfile"}, "100": {"args": "unsigned long", "name": "InitializeApplicationInfo"}, "101": {"args": "Out<SharedPointer<nn::account::baas::IManagerForApplication>, void>, nn::account::Uid const&", "name": "GetBaasAccountManagerForApplication"}, "102": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "AuthenticateApplicationAsync"}, "110": {"args": "nn::account::Uid const&, InBuffer const&", "name": "StoreSaveDataThumbnail"}, "111": {"args": "nn::account::Uid const&", "name": "ClearSaveDataThumbnail"}, "50": {"args": "Out<bool, void>, unsigned long", "name": "IsUserRegistrationRequestPermitted"}, "51": {"args": "Out<nn::account::Uid, void>, bool", "name": "TrySelectUserWithoutInteraction"}, "120": {"args": "Out<SharedPointer<nn::account::baas::IGuestLoginRequest>, void>, NativeHandle&&, unsigned int", "name": "CreateGuestLoginRequest"}}, "nns::nvdrv::INvDrvServices": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}}, "nn::am::service::ILibraryAppletSelfAccessor": {"0": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopInData"}, "1": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushOutData"}, "2": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopInteractiveInData"}, "3": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "PushInteractiveOutData"}, "5": {"args": "Out<NativeHandle, void>", "name": "GetPopInDataEvent"}, "6": {"args": "Out<NativeHandle, void>", "name": "GetPopInteractiveInDataEvent"}, "10": {"args": "", "name": "ExitProcessAndReturn"}, "11": {"args": "Out<nn::am::service::LibraryAppletInfo, void>", "name": "GetLibraryAppletInfo"}, "12": {"args": "Out<nn::am::service::AppletIdentityInfo, void>", "name": "GetMainAppletIdentityInfo"}, "13": {"args": "Out<bool, void>", "name": "CanUseApplicationCore"}, "14": {"args": "Out<nn::am::service::AppletIdentityInfo, void>", "name": "GetCallerAppletIdentityInfo"}, "20": {"args": "Out<SharedPointer<nn::am::service::IStorage>, void>", "name": "PopExtraStorage"}, "25": {"args": "Out<NativeHandle, void>", "name": "GetPopExtraStorageEvent"}, "30": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "UnpopInData"}, "31": {"args": "SharedPointer<nn::am::service::IStorage>", "name": "UnpopExtraStorage"}}, "nn::nfc::detail::ISystem": {"0": {}, "1": {}, "2": {}, "3": {}, "100": {}}, "nn::nfp::detail::ISystemManager": {"0": {}}, "nn::nfc::detail::IUserManager": {"0": {}}, "nn::tma::IHtcsManager": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}, "13": {}, "100": {}, "101": {}}, "nn::am::service::IOverlayFunctions": {"0": {"args": "", "name": "BeginToWatchShortHomeButtonMessage"}, "1": {"args": "", "name": "EndToWatchShortHomeButtonMessage"}, "2": {"args": "Out<nn::ncm::ApplicationId, void>", "name": "GetApplicationIdForLogo"}, "3": {"args": "unsigned long", "name": "SetGpuTimeSliceBoost"}}, "nn::audio::detail::IAudioOutManager": {"0": {}, "1": {}}, "nn::pcv::detail::IPcvService": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}}, "nn::tma::ISocket": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}}, "nn::timesrv::detail::service::ISteadyClock": {"0": {"args": "Out<nn::time::SteadyClockTimePoint, void>", "name": "GetCurrentTimePoint"}, "2": {"args": "Out<nn::TimeSpanType, void>", "name": "GetTestOffset"}, "3": {"args": "nn::TimeSpanType", "name": "SetTestOffset"}}, "nn::nfc::detail::ISystemManager": {"0": {}}, "nn::audio::detail::IAudioOutManagerForApplet": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::account::nas::IOAuthProcedureForNintendoAccountLinkage": {"0": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "PrepareAsync"}, "1": {"args": "Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>", "name": "GetRequest"}, "2": {"args": "InArray<char> const&", "name": "ApplyResponse"}, "3": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>, InArray<char> const&", "name": "ApplyResponseAsync"}, "100": {"args": "Out<nn::account::RequestUrl, void>, Out<nn::account::CallbackUri, void>, int", "name": "GetRequestWithTheme"}, "101": {"args": "Out<bool, void>", "name": "IsNetworkServiceAccountReplaced"}, "10": {"args": "Out<nn::account::detail::Uuid, void>", "name": "Suspend"}}, "nn::ldr::detail::IRoInterface": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}}, "nn::gpio::IPadSession": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}, "13": {}, "14": {}, "15": {}}, "nn::nifm::detail::IStaticService": {"4": {"args": "Out<SharedPointer<nn::nifm::detail::IGeneralService>, void>", "name": "CreateGeneralService"}}, "nn::apm::IManager": {"0": {"args": "Out<SharedPointer<nn::apm::ISession>, void>", "name": "OpenSession"}, "1": {"args": "Out<nn::apm::PerformanceMode, void>", "name": "GetPerformanceMode"}}, "nn::fgm::sf::IRequest": {"0": {"args": "Out<NativeHandle, void>, nn::fgm::Module, unsigned long", "name": "Initialize"}, "1": {"args": "unsigned int, unsigned int", "name": "Set"}, "2": {"args": "Out<unsigned int, void>", "name": "Get"}, "3": {"args": "", "name": "Cancel"}}, "nn::audio::detail::IFinalOutputRecorder": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}}, "nn::i2c::IManager": {"0": {}, "1": {}, "2": {}, "3": {}}, "nn::fssrv::sf::IFileSystemProxy": {"0": {}, "1": {}, "2": {}, "203": {}, "200": {}, "1006": {}, "202": {}, "11": {}, "12": {}, "13": {}, "80": {}, "17": {}, "18": {}, "21": {}, "22": {}, "23": {}, "24": {}, "601": {}, "602": {}, "603": {}, "604": {}, "605": {}, "30": {}, "31": {}, "400": {}, "100": {}, "600": {}, "1001": {}, "1002": {}, "1003": {}, "1004": {}, "1005": {}, "110": {}, "1000": {}, "51": {}, "52": {}, "501": {}, "500": {}, "58": {}, "60": {}, "61": {}}, "nn::fssrv::sf::IFileSystem": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}}, "nn::am::service::IDebugFunctions": {"0": {"args": "nn::am::AppletMessage", "name": "NotifyMessageToHomeMenuForDebug"}, "1": {"args": "Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>", "name": "OpenMainApplication"}, "10": {"args": "nn::am::service::EmulatedButtonEvent", "name": "EmulateButtonEvent"}, "20": {"args": "", "name": "InvalidateTransitionLayer"}}, "nn::hid::IActiveVibrationDeviceList": {"0": {"args": "nn::hid::VibrationDeviceHandle", "name": "ActivateVibrationDevice"}}, "nn::nfc::mifare::detail::IUserManager": {"0": {}}, "nn::spl::detail::IRandomInterface": {"0": {}}, "nn::audio::detail::ICodecController": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}, "10": {}, "11": {}, "12": {}}, "nn::am::service::IApplicationCreator": {"0": {"args": "Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>, nn::ncm::ApplicationId", "name": "CreateApplication"}, "1": {"args": "Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>", "name": "PopLaunchRequestedApplication"}, "10": {"args": "Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>, nn::ncm::SystemApplicationId", "name": "CreateSystemApplication"}, "100": {"args": "Out<SharedPointer<nn::am::service::IApplicationAccessor>, void>", "name": "PopFloatingApplicationForDevelopment"}}, "nn::hid::IHidSystemServer": {"520": {"args": "", "name": "EnableHandheldHids"}, "521": {"args": "", "name": "DisableHandheldHids"}, "31": {"args": "nn::util::BitFlagSet<32, nn::hid::system::KeyboardLockKeyEvent>", "name": "SendKeyboardLockKeyEvent"}, "800": {"args": "Out<long, void>, OutArray<nn::hid::system::UniqueSixAxisSensorHandle> const&, nn::hid::system::UniquePadId", "name": "ListSixAxisSensorHandles"}, "801": {"args": "Out<bool, void>, nn::hid::system::UniqueSixAxisSensorHandle", "name": "IsSixAxisSensorUserCalibrationSupported"}, "802": {"args": "nn::hid::system::UniqueSixAxisSensorHandle", "name": "ResetSixAxisSensorCalibrationValues"}, "803": {"args": "nn::hid::system::UniqueSixAxisSensorHandle", "name": "StartSixAxisSensorUserCalibration"}, "804": {"args": "nn::hid::system::UniqueSixAxisSensorHandle", "name": "CancelSixAxisSensorUserCalibration"}, "301": {"args": "unsigned int", "name": "ActivateNpadSystem"}, "303": {"args": "nn::applet::AppletResourceUserId", "name": "ApplyNpadSystemCommonPolicy"}, "304": {"args": "nn::applet::AppletResourceUserId", "name": "EnableAssigningSingleOnSlSrPress"}, "305": {"args": "nn::applet::AppletResourceUserId", "name": "DisableAssigningSingleOnSlSrPress"}, "821": {"args": "nn::hid::system::UniquePadId, long", "name": "StartAnalogStickManualCalibration"}, "822": {"args": "nn::hid::system::UniquePadId, long", "name": "RetryCurrentAnalogStickManualCalibrationStage"}, "823": {"args": "nn::hid::system::UniquePadId, long", "name": "CancelAnalogStickManualCalibration"}, "824": {"args": "nn::hid::system::UniquePadId, long", "name": "ResetAnalogStickManualCalibration"}, "322": {"args": "unsigned int, Out<long, void>, nn::applet::AppletResourceUserId", "name": "GetIrSensorState"}, "323": {"args": "unsigned int, Out<unsigned long, void>, nn::applet::AppletResourceUserId", "name": "GetXcdHandleForNpadWithIrSensor"}, "101": {"args": "Out<NativeHandle, void>, nn::applet::AppletResourceUserId", "name": "AcquireHomeButtonEventHandle"}, "111": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateHomeButton"}, "121": {"args": "Out<NativeHandle, void>, nn::applet::AppletResourceUserId", "name": "AcquireSleepButtonEventHandle"}, "131": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateSleepButton"}, "900": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateInputDetector"}, "901": {"args": "nn::util::BitFlagSet<32, nn::hid::system::InputSourceId>", "name": "NotifyInputDetector"}, "141": {"args": "Out<NativeHandle, void>, nn::applet::AppletResourceUserId", "name": "AcquireCaptureButtonEventHandle"}, "151": {"args": "nn::applet::AppletResourceUserId", "name": "ActivateCaptureButton"}, "700": {"args": "nn::applet::AppletResourceUserId, nn::hid::system::UniquePadId", "name": "ActivateUniquePad"}, "702": {"args": "Out<NativeHandle, void>", "name": "AcquireUniquePadConnectionEventHandle"}, "703": {"args": "Out<long, void>, OutArray<nn::hid::system::UniquePadId> const&", "name": "GetUniquePadIds"}, "210": {"args": "Out<NativeHandle, void>", "name": "AcquireNfcDeviceUpdateEventHandle"}, "211": {"args": "Out<long, void>, OutArray<unsigned int> const&", "name": "GetNpadsWithNfc"}, "212": {"args": "Out<NativeHandle, void>, unsigned int", "name": "AcquireNfcActivateEventHandle"}, "213": {"args": "unsigned int, bool, nn::applet::AppletResourceUserId", "name": "ActivateNfc"}, "230": {"args": "Out<NativeHandle, void>, unsigned int", "name": "AcquireIrSensorEventHandle"}, "231": {"args": "unsigned int, bool, nn::applet::AppletResourceUserId", "name": "ActivateIrSensor"}, "751": {"args": "Out<NativeHandle, void>, nn::applet::AppletResourceUserId", "name": "AcquireJoyDetachOnBluetoothOffEventHandle"}, "500": {"args": "nn::applet::AppletResourceUserId", "name": "SetAppletResourceUserId"}, "501": {"args": "nn::applet::AppletResourceUserId, bool", "name": "RegisterAppletResourceUserId"}, "502": {"args": "nn::applet::AppletResourceUserId", "name": "UnregisterAppletResourceUserId"}, "503": {"args": "nn::applet::AppletResourceUserId, bool", "name": "EnableAppletToGetInput"}, "504": {"args": "nn::applet::AppletResourceUserId, bool", "name": "SetAruidValidForVibration"}, "510": {"args": "float", "name": "SetVibrationMasterVolume"}, "511": {"args": "Out<float, void>", "name": "GetVibrationMasterVolume"}}, "nn::ntc::detail::service::IEnsureNetworkClockAvailabilityService": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}}, "nn::pctl::detail::ipc::IParentalControlServiceFactory": {"0": {"args": "Out<SharedPointer<nn::pctl::detail::ipc::IParentalControlService>, void>, unsigned long", "name": "CreateService"}}, "nn::audio::detail::IAudioOut": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}}, "nn::ssl::sf::ISslContext": {"0": {"args": "nn::ssl::sf::ContextOption, int", "name": "SetOption"}, "1": {"args": "Out<int, void>, nn::ssl::sf::ContextOption", "name": "GetOption"}, "2": {"args": "Out<SharedPointer<nn::ssl::sf::ISslConnection>, void>", "name": "CreateConnection"}, "3": {"args": "Out<unsigned int, void>", "name": "GetConnectionCount"}, "4": {"args": "Out<unsigned long, void>, InBuffer const&, nn::ssl::sf::CertificateFormat", "name": "ImportServerPki"}, "5": {"args": "Out<unsigned long, void>, InBuffer const&, InBuffer const&", "name": "ImportClientPki"}, "6": {"args": "unsigned long", "name": "RemoveServerPki"}, "7": {"args": "unsigned long", "name": "RemoveClientPki"}, "8": {"args": "Out<unsigned long, void>, nn::ssl::sf::InternalPki", "name": "RegisterInternalPki"}}, "nn::visrv::sf::IApplicationDisplayService": {"1101": {"args": "unsigned long, bool", "name": "SetDisplayEnabled"}, "1102": {"args": "Out<long, void>, Out<long, void>, unsigned long", "name": "GetDisplayResolution"}, "5202": {"args": "Out<NativeHandle, void>, unsigned long", "name": "GetDisplayVsyncEvent"}, "2020": {"args": "Out<long, void>, OutBuffer const&, unsigned long, nn::vi::DisplayName const&, nn::applet::AppletResourceUserId", "name": "OpenLayer"}, "2021": {"args": "unsigned long", "name": "CloseLayer"}, "100": {"args": "Out<SharedPointer<nns::hosbinder::IHOSBinderDriver>, void>", "name": "GetRelayService"}, "101": {"args": "Out<SharedPointer<nn::visrv::sf::ISystemDisplayService>, void>", "name": "GetSystemDisplayService"}, "102": {"args": "Out<SharedPointer<nn::visrv::sf::IManagerDisplayService>, void>", "name": "GetManagerDisplayService"}, "1000": {"args": "Out<long, void>, OutArray<nn::vi::DisplayInfo> const&", "name": "ListDisplays"}, "2030": {"args": "Out<unsigned long, void>, Out<long, void>, OutBuffer const&, unsigned long, unsigned int", "name": "CreateStrayLayer"}, "2031": {"args": "unsigned long", "name": "DestroyStrayLayer"}, "1010": {"args": "Out<unsigned long, void>, nn::vi::DisplayName const&", "name": "OpenDisplay"}, "1011": {"args": "Out<unsigned long, void>", "name": "OpenDefaultDisplay"}, "2101": {"args": "unsigned long, unsigned int", "name": "SetLayerScalingMode"}, "1020": {"args": "unsigned long", "name": "CloseDisplay"}}, "nn::aocsrv::detail::IAddOnContentManager": {"0": {"args": "Out<int, void>, nn::ncm::ApplicationId", "name": "CountAddOnContentByApplicationId"}, "1": {"args": "Out<int, void>, OutArray<int> const&, int, int, nn::ncm::ApplicationId", "name": "ListAddOnContentByApplicationId"}, "2": {"args": "Out<int, void>, unsigned long", "name": "CountAddOnContent"}, "3": {"args": "Out<int, void>, OutArray<int> const&, unsigned long, int, int", "name": "ListAddOnContent"}, "4": {"args": "Out<unsigned long, void>, nn::ncm::ApplicationId", "name": "GetAddOnContentBaseIdByApplicationId"}, "5": {"args": "Out<unsigned long, void>, unsigned long", "name": "GetAddOnContentBaseId"}}, "nn::visrv::sf::ISystemRootService": {"1": {"args": "Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int", "name": "GetDisplayService"}, "3": {"args": "Out<SharedPointer<nn::visrv::sf::IApplicationDisplayService>, void>, unsigned int, nn::vi::ProxyName", "name": "GetDisplayServiceWithProxyNameExchange"}}, "nn::ldn::detail::IUserLocalCommunicationService": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "400": {}, "401": {}, "300": {}, "301": {}, "302": {}, "303": {}, "304": {}, "200": {}, "201": {}, "202": {}, "203": {}, "204": {}, "205": {}, "206": {}, "207": {}, "208": {}, "209": {}, "100": {}, "101": {}, "102": {}, "103": {}}, "nn::account::baas::IManagerForApplication": {"0": {"args": "", "name": "CheckAvailability"}, "1": {"args": "Out<nn::account::NetworkServiceAccountId, void>", "name": "GetAccountId"}, "2": {"args": "Out<SharedPointer<nn::account::detail::IAsyncContext>, void>", "name": "EnsureIdTokenCacheAsync"}, "3": {"args": "Out<unsigned int, void>, OutBuffer const&", "name": "LoadIdTokenCache"}, "130": {"args": "Out<nn::account::NintendoAccountId, void>, Out<nn::account::nas::NasUserBaseForApplication, void>, OutBuffer const&", "name": "GetNintendoAccountUserResourceCacheForApplication"}, "150": {"args": "Out<SharedPointer<nn::account::nas::IAuthorizationRequest>, void>, nn::account::NintendoAccountAuthorizationRequestParameters const&, NativeHandle&&, unsigned int", "name": "CreateAuthorizationRequest"}}, "nn::am::service::ISelfController": {"0": {"args": "", "name": "Exit"}, "1": {"args": "", "name": "LockExit"}, "2": {"args": "", "name": "UnlockExit"}, "64": {"args": "unsigned int", "name": "SetInputDetectionSourceSet"}, "40": {"args": "Out<unsigned long, void>", "name": "CreateManagedDisplayLayer"}, "9": {"args": "Out<NativeHandle, void>", "name": "GetLibraryAppletLaunchableEvent"}, "10": {"args": "int", "name": "SetScreenShotPermission"}, "11": {"args": "bool", "name": "SetOperationModeChangedNotification"}, "12": {"args": "bool", "name": "SetPerformanceModeChangedNotification"}, "13": {"args": "bool, bool, bool", "name": "SetFocusHandlingMode"}, "14": {"args": "bool", "name": "SetRestartMessageEnabled"}, "50": {"args": "bool", "name": "SetHandlesRequestToDisplay"}, "51": {"args": "", "name": "ApproveToDisplay"}, "60": {"args": "int, int, int, int", "name": "OverrideAutoSleepTimeAndDimmingTime"}, "61": {"args": "bool", "name": "SetMediaPlaybackState"}, "62": {"args": "unsigned int", "name": "SetIdleTimeDetectionExtension"}, "63": {"args": "Out<unsigned int, void>", "name": "GetIdleTimeDetectionExtension"}}, "nn::ssl::sf::ISslService": {"0": {"args": "Out<SharedPointer<nn::ssl::sf::ISslContext>, void>, nn::ssl::sf::SslVersion, unsigned long", "name": "CreateContext"}, "1": {"args": "Out<unsigned int, void>", "name": "GetContextCount"}}}